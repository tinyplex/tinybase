{"title":"City Database","description":"In this demo, we build an app that loads over 140,000 records to push the size\nand performance limits of TinyBase.","html":"<script type=\"importmap\">\n  {\n    \"imports\": {\n      \"tinybase\": \"https://esm.sh/tinybase@6.1.0-beta.0\",\n      \"tinybase/ui-react\": \"https://esm.sh/tinybase@6.1.0-beta.0/ui-react\",\n      \"tinybase/ui-react-dom\": \"https://esm.sh/tinybase@6.1.0-beta.0/ui-react-dom\",\n      \"tinybase/ui-react-inspector\": \"https://esm.sh/tinybase@6.1.0-beta.0/ui-react-inspector\",\n      \"react\": \"https://esm.sh/react@^19.0.0\",\n      \"react/jsx-runtime\": \"https://esm.sh/react@^19.0.0/jsx-runtime\",\n      \"react-dom/client\": \"https://esm.sh/react-dom@^19.0.0/client\"\n    }\n  }\n</script>","css":"#loading {\n  animation: spin 1s infinite linear;\n  height: 2rem;\n  margin: 40vh auto;\n  width: 2rem;\n  &::before {\n    content: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"2rem\" viewBox=\"0 0 100 100\"><path d=\"M50 10A40 40 0 1 1 10 50\" stroke=\"black\" fill=\"none\" stroke-width=\"4\" /></svg>');\n  }\n}\n\n@keyframes spin {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\nmain {\n  padding: 0.5rem;\n}\n\ntable {\n  border-collapse: collapse;\n  font-size: inherit;\n  line-height: inherit;\n  margin-top: 0.5rem;\n  table-layout: fixed;\n  width: 100%;\n  caption {\n    text-align: left;\n    button {\n      border: 0;\n      margin-right: 0.25rem;\n    }\n  }\n  th,\n  td {\n    overflow: hidden;\n    padding: 0.15rem 0.5rem 0.15rem 0;\n    white-space: nowrap;\n  }\n  th {\n    border: solid #ddd;\n    border-width: 1px 0;\n    cursor: pointer;\n    text-align: left;\n    width: 15%;\n    &:nth-child(1) {\n      width: 25%;\n    }\n  }\n  td {\n    border-bottom: 1px solid #eee;\n  }\n}\n\n@font-face {\n  font-family: Inter;\n  src: url(https://tinybase.org/fonts/inter.woff2) format(\"woff2\");\n}\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  user-select: none;\n  font-family: Inter, sans-serif;\n  letter-spacing: -0.04rem;\n  font-size: 0.8rem;\n  line-height: 1.5rem;\n  margin: 0;\n  color: #333;\n}","js":"import {useMemo, useState} from 'react';\nimport React from 'react';\nimport {createRoot} from 'react-dom/client';\nimport {createQueries, createStore} from 'tinybase';\nimport {Provider, useCreateStore} from 'tinybase/ui-react';\nimport {SortedTableInHtmlTable} from 'tinybase/ui-react-dom';\nimport {Inspector} from 'tinybase/ui-react-inspector';\n\nconst App = () => {\n  const store = useCreateStore(createStore);\n  // ...\n\n  // ...\n  const [isLoading, setIsLoading] = useState(true);\n  useMemo(async () => {\n    await loadCities(store);\n    setIsLoading(false);\n  }, []);\n\n  return (\n    <Provider store={store}>\n      {isLoading ? <Loading /> : <Body />}\n      <Inspector />\n    </Provider>\n  );\n};\n\naddEventListener('load', () => createRoot(document.body).render(<App />));\n\nconst Loading = () => <div id=\"loading\" />;\n\nconst Body = () => {\n  return (\n    <main>\n      <CityTable />\n    </main>\n  );\n};\n\nconst NUMERIC = /^[\\d\\.-]+$/;\n\nconst loadCities = async (store) => {\n  const rows = (\n    await (await fetch(`https://tinybase.org/assets/cities.tsv`)).text()\n  ).split('\\n');\n  const cellIds = rows.shift().split('\\t');\n  store.transaction(() =>\n    rows.forEach((row, rowId) =>\n      row\n        .split('\\t')\n        .forEach((cell, c) =>\n          store.setCell(\n            'cities',\n            rowId,\n            cellIds[c],\n            NUMERIC.test(cell) ? parseFloat(cell) : cell,\n          ),\n        ),\n    ),\n  );\n};\n\nconst CUSTOM_CELLS = [\n  'Name',\n  'Country',\n  'Population',\n  'Latitude',\n  'Longitude',\n  'Elevation',\n];\n\nconst CityTable = () => (\n  <SortedTableInHtmlTable\n    tableId=\"cities\"\n    cellId=\"Population\"\n    descending={true}\n    limit={10}\n    sortOnClick={true}\n    paginator={true}\n    customCells={CUSTOM_CELLS}\n    idColumn={false}\n  />\n);","css_pre_processor":"less","js_pre_processor":"typescript","editors":"012","tags":["tinybase"]}