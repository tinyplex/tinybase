{"title":"Grouping Dice Rolls","description":"In this demo, we use an IndexView component to group each Row of the Store\nobject based on the value in a Cell within it. We roll a dice 48 times and index\nthe rolls by result. We're making changes to the Averaging Dice Rolls demo.","html":"<script type=\"importmap\">\n  {\n    \"imports\": {\n      \"tinybase\": \"https://esm.sh/tinybase@6.2.1\",\n      \"tinybase/ui-react\": \"https://esm.sh/tinybase@6.2.1/ui-react\",\n      \"tinybase/ui-react-inspector\": \"https://esm.sh/tinybase@6.2.1/ui-react-inspector\",\n      \"react\": \"https://esm.sh/react@^19.0.0\",\n      \"react/jsx-runtime\": \"https://esm.sh/react@^19.0.0/jsx-runtime\",\n      \"react-dom/client\": \"https://esm.sh/react-dom@^19.0.0/client\"\n    }\n  }\n</script>","css":".roll {\n  display: inline-block;\n  font-size: 3rem;\n  padding: 0 1rem;\n  line-height: 3rem;\n  &.red {\n    color: #900;\n  }\n  &.green {\n    color: #090;\n  }\n  &.blue {\n    color: #009;\n  }\n}\n\n@font-face {\n  font-family: Inter;\n  src: url(https://tinybase.org/fonts/inter.woff2) format(\"woff2\");\n}\n\nbody {\n  font-family: Inter, sans-serif;\n  letter-spacing: -0.04rem;\n  margin: 0;\n}\np {\n  margin: 1rem;\n}\n\n.rolls {\n  white-space: nowrap;\n}","js":"import React from 'react';\nimport {createRoot} from 'react-dom/client';\nimport {createIndexes, createStore} from 'tinybase';\nimport {IndexView, Provider, SliceView, useCell} from 'tinybase/ui-react';\nimport {Inspector} from 'tinybase/ui-react-inspector';\n\nconst store = createStore();\n\nconst indexes = createIndexes(store).setIndexDefinition(\n  'rolls',\n  'rolls',\n  'result',\n  'color',\n);\n\nconst Roll = ({tableId, rowId}) => (\n  <span className={`roll ${useCell(tableId, rowId, 'color')}`}>\n    {String.fromCharCode(9855 + useCell(tableId, rowId, 'result'))}\n  </span>\n);\n\nlet rolls = 0;\nconst interval = setInterval(() => {\n  if (rolls++ == 48) {\n    clearInterval(interval);\n  } else {\n    store.addRow('rolls', {\n      result: Math.ceil(Math.random() * 6),\n      color: ['red', 'green', 'blue'][Math.floor(Math.random() * 3)],\n    });\n  }\n}, 500);\n\nconst Rolls = (props) => (\n  <div className=\"rolls\">\n    <SliceView {...props} rowComponent={Roll} />\n  </div>\n);\n\ncreateRoot(document.body).render(\n  <Provider store={store} indexes={indexes}>\n    <IndexView indexId=\"rolls\" sliceComponent={Rolls} />\n    <Inspector />\n  </Provider>,\n);","css_pre_processor":"less","js_pre_processor":"typescript","editors":"012","tags":["tinybase"]}