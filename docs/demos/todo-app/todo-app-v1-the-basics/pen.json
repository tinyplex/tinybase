{"title":"Todo App v1 (the basics)","description":"In this demo, we build a minimum viable 'Todo' app. It uses React and a simple\nStore to let people add new todos and then mark them as done.","html":"<script type=\"importmap\">\n  {\n    \"imports\": {\n      \"tinybase\": \"https://esm.sh/tinybase@7.0.0-beta.1\",\n      \"tinybase/ui-react\": \"https://esm.sh/tinybase@7.0.0-beta.1/ui-react\",\n      \"tinybase/ui-react-inspector\": \"https://esm.sh/tinybase@7.0.0-beta.1/ui-react-inspector\",\n      \"react\": \"https://esm.sh/react@^19.0.0\",\n      \"react/jsx-runtime\": \"https://esm.sh/react@^19.0.0/jsx-runtime\",\n      \"react-dom/client\": \"https://esm.sh/react-dom@^19.0.0/client\"\n    }\n  }\n</script>","css":"@accentColor: #d81b60;\n@spacing: 0.5rem;\n@border: 1px solid #ccc;\n@font-face {\n  font-family: Inter;\n  src: url(https://tinybase.org/fonts/inter.woff2) format(\"woff2\");\n}\n\nbody {\n  display: grid;\n  grid-template-columns: 35% minmax(0, 1fr);\n  grid-template-rows: auto 1fr;\n  box-sizing: border-box;\n  font-family: Inter, sans-serif;\n  letter-spacing: -0.04rem;\n  grid-gap: @spacing * 2 @spacing;\n  margin: 0;\n  min-height: 100vh;\n  padding: @spacing * 2;\n  * {\n    box-sizing: border-box;\n    outline-color: @accentColor;\n  }\n}\n\n#newTodo {\n  border: @border;\n  display: block;\n  font: inherit;\n  letter-spacing: inherit;\n  padding: @spacing;\n  width: 100%;\n}\n\n#todos {\n  grid-column: 2;\n  margin: 0;\n  padding: 0;\n}\n\n#todos .todo {\n  background: #fff;\n  border: @border;\n  display: flex;\n  margin-bottom: @spacing;\n  padding: @spacing;\n  .text {\n    cursor: pointer;\n    flex: 1;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    user-select: none;\n    white-space: nowrap;\n    &::before {\n      content: \"\\1F7E0\";\n      padding: 0 0.5rem 0 0.25rem;\n    }\n    &.done {\n      color: #ccc;\n      &::before {\n        content: \"\\2705\";\n      }\n    }\n  }\n}","js":"import {useCallback, useState} from 'react';\nimport React from 'react';\nimport {createRoot} from 'react-dom/client';\nimport {createStore} from 'tinybase';\nimport {\n  CellView,\n  Provider,\n  TableView,\n  useAddRowCallback,\n  useCell,\n  useCreateStore,\n  useSetCellCallback,\n} from 'tinybase/ui-react';\nimport {Inspector} from 'tinybase/ui-react-inspector';\n\nconst INITIAL_TODOS = {\n  todos: {\n    0: {text: 'Clean the floor'},\n    1: {text: 'Install TinyBase'},\n    2: {text: 'Book holiday'},\n  },\n};\n\nconst App = () => {\n  const store = useCreateStore(() => createStore().setTables(INITIAL_TODOS));\n\n  return (\n    <Provider store={store}>\n      <Title />\n      <NewTodo />\n      <Todos />\n      <Inspector />\n    </Provider>\n  );\n};\n\nwindow.addEventListener('load', () =>\n  createRoot(document.body).render(<App />),\n);\n\nconst Title = () => 'Todos';\n\nconst NewTodo = () => {\n  const [text, setText] = useState('');\n  const handleChange = useCallback(({target: {value}}) => setText(value), []);\n  const handleKeyDown = useAddRowCallback(\n    'todos',\n    ({which, target: {value: text}}) =>\n      which == 13 && text != '' ? {text} : null,\n    [],\n    undefined,\n    () => setText(''),\n    [setText],\n  );\n\n  return (\n    <input\n      id=\"newTodo\"\n      onChange={handleChange}\n      onKeyDown={handleKeyDown}\n      placeholder=\"New Todo\"\n      value={text}\n    />\n  );\n};\n\nconst Todos = () => (\n  <ul id=\"todos\">\n    <TableView tableId=\"todos\" rowComponent={Todo} />\n  </ul>\n);\n\nconst Todo = (props) => (\n  <li className=\"todo\">\n    <TodoText {...props} />\n  </li>\n);\n\nconst TodoText = ({tableId, rowId}) => {\n  const done = useCell(tableId, rowId, 'done');\n  const className = 'text' + (done ? ' done' : '');\n  const handleClick = useSetCellCallback(tableId, rowId, 'done', () => !done, [\n    done,\n  ]);\n\n  return (\n    <span className={className} onClick={handleClick}>\n      <CellView tableId={tableId} rowId={rowId} cellId=\"text\" />\n    </span>\n  );\n};","css_pre_processor":"less","js_pre_processor":"typescript","editors":"012","tags":["tinybase"]}