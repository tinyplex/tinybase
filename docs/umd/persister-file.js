var t,e;t=this,e=function(t,e,a){"use strict";const s=t=>typeof t,n=s(""),o="utf8",i=t=>null==t,r=(t,e,a)=>i(t)?a?.():e(t),c=Object,y=t=>c.getPrototypeOf(t),f=c.keys,p=c.freeze,d=t=>(t=>!i(t)&&r(y(t),(t=>t==c.prototype||i(y(t))),(()=>!0)))(t)&&0==(t=>f(t).length)(t),l=JSON.parse,u=t=>new Map(t),h=(t,e)=>t?.get(e),w=(t,e,a)=>{return i(a)?(s=t,n=e,s?.delete(n),t):t?.set(e,a);var s,n},g=(t,e,a)=>{var s,n;return s=t,n=e,s?.has(n)||w(t,e,a()),h(t,e)},v=u(),A=u();t.createFilePersister=(t,y,f)=>((t,e,a,o,c,y,f,[l,u]=[],S=[])=>{let C,m,F,L=0,b=0;g(v,S,(()=>0)),g(A,S,(()=>[]));const T=t.getContent,O=t.getTransactionChanges,P=async t=>(2!=L&&(L=1,await x.schedule((async()=>{await t(),L=0}))),x),x={load:async(a,o)=>await P((async()=>{try{const a=await e();(f&&(t=>s(t)==n)(a[0])?t.applyMergeableChanges:t.setContent)(a)}catch{t.setContent([a,o])}})),startAutoLoad:async(a={},s={})=>(x.stopAutoLoad(),await x.load(a,s),b=1,F=o((async(a,s)=>{if(s){const e=s();await P((async()=>t.applyChanges(e)))}else await P((async()=>{try{t.setContent(a?.()??await e())}catch(t){y?.(t)}}))})),x),stopAutoLoad:()=>(b&&(c(F),F=void 0,b=0),x),save:async t=>(1!=L&&(L=2,await x.schedule((async()=>{try{await a(T,t)}catch(t){y?.(t)}L=0}))),x),startAutoSave:async()=>(await x.stopAutoSave().save(),C=t.addDidFinishTransactionListener((()=>{const[t,e]=O();d(t)&&d(e)||x.save((()=>[t,e]))})),x),stopAutoSave:()=>(r(C,t.delListener),C=void 0,x),schedule:async(...t)=>(((t,...e)=>{t.push(...e)})(h(A,S),...t),await(async()=>{if(!h(v,S)){for(w(v,S,1);!i((t=h(A,S),m=t.shift()));)try{await m()}catch(t){y?.(t)}w(v,S,0)}var t})(),x),getStore:()=>t,destroy:()=>x.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return l&&(x[l]=()=>u),p(x)})(t,(async()=>l(await a.readFile(y,o))),(async t=>{return await a.writeFile(y,(e=t(),JSON.stringify(e,((t,e)=>e instanceof Map?c.fromEntries([...e]):e))),o);var e}),(t=>e.watch(y,(()=>t()))),(t=>t?.close()),f,!1,["getFilePath",y])},"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("fs"),require("fs/promises")):"function"==typeof define&&define.amd?define(["exports","fs","fs/promises"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).TinyBasePersisterFile={},t.fs,t["fs/promises"]);
