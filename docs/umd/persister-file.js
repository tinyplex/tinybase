var e,t;e=this,t=function(e,t,a){"use strict";const s="utf8",n=e=>null==e,r=(e,t,a)=>n(e)?a?.():t(e),i=Object,o=e=>i.getPrototypeOf(e),c=i.keys,l=i.freeze,y=e=>(e=>!n(e)&&r(o(e),(e=>e==i.prototype||n(o(e))),(()=>!0)))(e)&&0==(e=>c(e).length)(e),d=e=>new Map(e),f=(e,t)=>e?.get(t),u=(e,t,a)=>{return n(a)?(s=e,r=t,s?.delete(r),e):e?.set(t,a);var s,r},g=(e,t,a,s)=>{var n,r;return n=e,r=t,n?.has(r)||u(e,t,a()),f(e,t)},p=d(),h=d();e.createFilePersister=(e,i,o)=>((e,t,a,s,i,o,c,d={},v=[])=>{let w,C,A,b=0;g(p,v,(()=>0)),g(h,v,(()=>[]));const[S,m,F,T,L]=((e=1,t)=>e>1&&"merge"in t?[1,t.getMergeableContent,t.getTransactionMergeableChanges,([[e],[t]])=>!y(e)||!y(t),t.setDefaultContent]:2!=e?[0,t.getContent,t.getTransactionChanges,([e,t])=>!y(e)||!y(t),t.setContent]:0)(c,e),M=t=>{var a;(S&&(a=t?.[0],Array.isArray(a))?1===t?.[2]?e.applyMergeableChanges:e.setMergeableContent:1===t?.[2]?e.applyChanges:e.setContent)(t)},O=async e=>(2!=b&&(b=1,await q((async()=>{try{M(await t())}catch(t){o?.(t),e&&L(e)}b=0}))),D),P=()=>(C&&(i(C),C=void 0),D),x=async e=>(1!=b&&(b=2,await q((async()=>{try{await a(m,e)}catch(e){o?.(e)}b=0}))),D),j=()=>(r(A,e.delListener),A=void 0,D),q=async(...e)=>(((e,...t)=>{e.push(...t)})(f(h,v),...e),await(async()=>{if(!f(p,v)){for(u(p,v,1);!n((e=f(h,v),w=e.shift()));)try{await w()}catch(e){o?.(e)}u(p,v,0)}var e})(),D),D={load:O,startAutoLoad:async e=>(await P().load(e),C=s((async(e,t)=>{t||e?2!=b&&(b=1,M(t??e),b=0):await O()})),D),stopAutoLoad:P,isAutoLoading:()=>!n(C),save:x,startAutoSave:async()=>(await j().save(),A=e.addDidFinishTransactionListener((()=>{const e=F();T(e)&&x(e)})),D),stopAutoSave:j,isAutoSaving:()=>!n(A),schedule:q,getStore:()=>e,destroy:()=>P().stopAutoSave(),getStats:()=>({}),...d};return l(D)})(e,(async()=>{return e=await a.readFile(i,s),JSON.parse(e,((e,t)=>"￼"===t?void 0:t));var e}),(async e=>{return await a.writeFile(i,(t=e(),JSON.stringify(t,((e,t)=>void 0===t?"￼":t))),s);var t}),(e=>t.watch(i,(()=>e()))),(e=>e?.close()),o,3,{getFilePath:()=>i})},"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("fs"),require("fs/promises")):"function"==typeof define&&define.amd?define(["exports","fs","fs/promises"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).TinyBasePersisterFile={},e.fs,e["fs/promises"]);
