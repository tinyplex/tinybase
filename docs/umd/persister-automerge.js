var t,e;t=this,e=function(t){"use strict";const e=t=>typeof t,a=e(""),n=t=>null==t,s=(t,e,a)=>n(t)?a?.():e(t),o=Object,c=t=>o.getPrototypeOf(t),i=o.entries,r=o.keys,d=o.freeze,y=(t,e)=>s(t,(t=>t[e])),u=(t,e)=>e in t,l=(t,e)=>(delete t[e],t),p=(t,e)=>((t,e)=>t.map(e))(i(t),(([t,a])=>e(a,t))),h=t=>r(t).length,f=t=>(t=>!n(t)&&s(c(t),(t=>t==o.prototype||n(c(t))),(()=>!0)))(t)&&0==h(t),g=t=>new Map(t),v=(t,e)=>t?.get(e),w=(t,e,a)=>{return n(a)?(s=t,o=e,s?.delete(o),t):t?.set(e,a);var s,o},A=(t,e,a)=>{var n,s;return n=t,s=e,n?.has(s)||w(t,e,a()),v(t,e)},C=g(),L=g(),b=(t,e)=>[t[e].t,t[e].v],m=(t,e,a,s)=>{const o=n(e)?t:((t,e,a)=>(u(t,e)||(t[e]={}),t[e]))(t,e);let c;return p(a,((t,e)=>{s(o,e,t)&&(c=1)})),p(o,((t,e)=>{u(a,e)||(l(o,e),c=1)})),!n(e)&&f(o)&&l(t,e),c};t.createAutomergePersister=(t,o,c="tinybase",i)=>(o.change((t=>t[c]={})),((t,o,c,i,r,y,u,[l,p]=[],h=[])=>{let g,b,m,S=0,T=0;A(C,h,(()=>0)),A(L,h,(()=>[]));const x=t.getContent,P=t.getTransactionChanges,j=async t=>(2!=S&&(S=1,await D.schedule((async()=>{await t(),S=0}))),D),D={load:async(n,s)=>await j((async()=>{try{const n=await o();(u&&(t=>e(t)==a)(n[0])?t.applyMergeableChanges:t.setContent)(n)}catch{t.setContent([n,s])}})),startAutoLoad:async(e={},a={})=>(D.stopAutoLoad(),await D.load(e,a),T=1,m=i((async(e,a)=>{if(a){const e=a();await j((async()=>t.applyChanges(e)))}else await j((async()=>{try{t.setContent(e?.()??await o())}catch(t){y?.(t)}}))})),D),stopAutoLoad:()=>(T&&(r(m),m=void 0,T=0),D),save:async t=>(1!=S&&(S=2,await D.schedule((async()=>{try{await c(x,t)}catch(t){y?.(t)}S=0}))),D),startAutoSave:async()=>(await D.stopAutoSave().save(),g=t.addDidFinishTransactionListener((()=>{const[t,e]=P();f(t)&&f(e)||D.save((()=>[t,e]))})),D),stopAutoSave:()=>(s(g,t.delListener),g=void 0,D),schedule:async(...t)=>(((t,...e)=>{t.push(...e)})(v(L,h),...t),await(async()=>{if(!v(C,h)){for(w(C,h,1);!n((t=v(L,h),b=t.shift()));)try{await b()}catch(t){y?.(t)}w(C,h,0)}var t})(),D),getStore:()=>t,destroy:()=>D.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return l&&(D[l]=()=>p),d(D)})(t,(async()=>{const t=await o.doc();return 2==h(t[c])?b(t,c):void 0}),(async(t,e)=>o.change((a=>((t,e,a,o)=>{((t,e)=>{f(t[e])&&(t[e]={t:{},v:{}})})(t,e);const[c,i]=b(t,e),r=()=>{d=1};let d=1;if(s(o?.(),(([t,e])=>{d=0,p(t,((t,e)=>d?0:n(t)?l(c,e):s(c[e],(e=>p(t,((t,a)=>d?0:n(t)?l(e,a):s(y(e,a),(e=>p(t,((t,a)=>n(t)?l(e,a):e[a]=t))),r)))),r))),p(e,((t,e)=>d?0:n(t)?l(i,e):i[e]=t))})),d){const[t,e]=a();m(c,void 0,t,((t,e,a)=>m(c,e,a,((t,e,a)=>m(t,e,a,((t,e,a)=>{if(y(t,e)!==a)return t[e]=a,1})))))),m(i,void 0,e,((t,e,a)=>{y(i,e)!==a&&(i[e]=a)}))}})(a,c,t,e)))),(t=>{const e=({doc:e})=>t((()=>b(e,c)));return o.on("change",e),e}),(t=>{o.removeListener("change",t)}),i,!1,["getDocHandle",o]))},"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).TinyBasePersisterAutomerge={});
