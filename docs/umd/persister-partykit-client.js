var t,e;t=this,e=function(t){"use strict";const e=t=>typeof t,a="",s=e(a),o=t=>null==t,n=(t,e,a)=>o(t)?a?.():e(t),r=t=>e(t)==s,i=t=>t.length,c=Object,y=t=>c.getPrototypeOf(t),d=c.keys,p=c.freeze,h=t=>(t=>!o(t)&&n(y(t),(t=>t==c.prototype||o(y(t))),(()=>!0)))(t)&&0==(t=>i(d(t)))(t),l=t=>JSON.stringify(t,((t,e)=>e instanceof Map?c.fromEntries([...e]):e)),u=JSON.parse,f="/store",v=t=>new Map(t),w=(t,e)=>t?.get(e),g=(t,e,a)=>{return o(a)?(s=t,n=e,s?.delete(n),t):t?.set(e,a);var s,n},m=(t,e,a)=>{var s,o;return s=t,o=e,s?.has(o)||g(t,e,a()),w(t,e)},P=v(),C=v(),S="message";t.createPartyKitPersister=(t,e,s,c)=>{const{host:y,room:d}=e.partySocketOptions,{storeProtocol:v="https",storePath:A=f,messagePrefix:L=a}={...r(s)?{storeProtocol:s}:s},b=v+"://"+y+"/parties/"+e.name+"/"+d+A,T=async t=>await(await fetch(b,{...t?{method:"PUT",body:l(t)}:{},mode:"cors",cache:"no-store"})).json();return((t,e,a,s,i,c,y,[d,l]=[],u=[])=>{let f,v,S,A=0,L=0;m(P,u,(()=>0)),m(C,u,(()=>[]));const b=t.getContent,T=t.getTransactionChanges,O=async t=>(2!=A&&(A=1,await x.schedule((async()=>{await t(),A=0}))),x),x={load:async(a,s)=>await O((async()=>{try{const a=await e();(y&&r(a[0])?t.applyMergeableChanges:t.setContent)(a)}catch{t.setContent([a,s])}})),startAutoLoad:async(a={},o={})=>(x.stopAutoLoad(),await x.load(a,o),L=1,S=s((async(a,s)=>{if(s){const e=s();await O((async()=>t.applyChanges(e)))}else await O((async()=>{try{t.setContent(a?.()??await e())}catch(t){c?.(t)}}))})),x),stopAutoLoad:()=>(L&&(i(S),S=void 0,L=0),x),save:async t=>(1!=A&&(A=2,await x.schedule((async()=>{try{await a(b,t)}catch(t){c?.(t)}A=0}))),x),startAutoSave:async()=>(await x.stopAutoSave().save(),f=t.addDidFinishTransactionListener((()=>{const[t,e]=T();h(t)&&h(e)||x.save((()=>[t,e]))})),x),stopAutoSave:()=>(n(f,t.delListener),f=void 0,x),schedule:async(...t)=>(((t,...e)=>{t.push(...e)})(w(C,u),...t),await(async()=>{if(!w(P,u)){for(g(P,u,1);!o((t=w(C,u),v=t.shift()));)try{await v()}catch(t){c?.(t)}g(P,u,0)}var t})(),x),getStore:()=>t,destroy:()=>x.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return d&&(x[d]=()=>l),p(x)})(t,(async()=>await T()),(async(t,a)=>{var s,o;a?e.send((s=L,o=a(),s+"s"+(r(o)?o:l(o)))):await T(t())}),(t=>{const a=e=>n(((t,e,a)=>{const s=i(t);return((t,e)=>t.startsWith(e))(e,t)?[e[s],u((o=e,n=s+1,o.slice(n,void 0)))]:void 0;var o,n})(L,e.data),(([e,a])=>{"s"==e&&t(void 0,(()=>a))}));return e.addEventListener(S,a),a}),(t=>{e.removeEventListener(S,t)}),c,!1,["getConnection",e])}},"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).TinyBasePersisterPartyKitClient={});
