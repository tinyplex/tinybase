var e,t;e=this,t=function(e){"use strict";const t=e=>typeof e,a=t(""),n=Promise,o=Math.max,s=e=>null==e,r=(e,t,a)=>s(e)?a?.():t(e),i=Object,c=e=>i.getPrototypeOf(e),l=i.keys,g=i.freeze,d=e=>(e=>!s(e)&&r(c(e),(e=>e==i.prototype||s(c(e))),(()=>!0)))(e)&&0==(e=>l(e).length)(e),u=(e,t)=>e?.delete(t),y=e=>new Map(e),h=(e,t)=>e?.get(t),p=(e,t,a)=>s(a)?(u(e,t),e):e?.set(t,a),f=(e,t,a,n)=>{var o,s;return o=e,s=t,o?.has(s)||p(e,t,a()),h(e,t)},w=y(),v=y(),b=new globalThis.TextEncoder,C=2**36,M=2**30,S=2**24,A=2**18,T=4096,L=64,m=e=>String.fromCharCode(48+(63&e)),H=(e,t)=>((e,t)=>e.charCodeAt(t))(e,t)-48,x=y();e.createLocalSynchronizer=(e,i)=>{const c=""+Math.random();return((e,i,c,l,x=1,z)=>{let D;const[E]=(e=>{let t=0,a=-1;const n=(e=>{let t=2166136261;var a;return a=e=>{t^=e,t+=(t<<1)+(t<<4)+(t<<7)+(t<<8)+(t<<24)},b.encode(e).forEach(a),t>>>0})(e),r=e=>{const n=t,[r,i]=s(e)||""==e?[0,0]:[H(c=e,0)*C+H(c,1)*M+H(c,2)*S+H(c,3)*A+H(c,4)*T+H(c,5)*L+H(c,6),H(c,7)*A+H(c,8)*T+H(c,9)*L+H(c,10),H(c,11)*S+H(c,12)*A+H(c,13)*T+H(c,14)*L+H(c,15)];var c;t=o(n,r,Date.now()),a=t==n?t==r?o(a,i):a:t==r?i:-1};return[()=>{return r(),o=++a,s=n,m((e=t)/C)+m(e/M)+m(e/S)+m(e/A)+m(e/T)+m(e/L)+m(e)+m(o/A)+m(o/T)+m(o/L)+m(o)+m(s/S)+m(s/A)+m(s/T)+m(s/L)+m(s);var e,o,s},r]})(e.getId()),I=y();c(((t,a,n,o)=>{0==n?r(h(I,a),(([e,a])=>s(e)||e==t?a(o,t):0)):1==n&&P.isAutoLoading()?O(t,o).then((e=>D?.(void 0,(()=>e)))):r(2==n&&P.isAutoSaving()?e.getMergeableContentHashes():3==n?e.getMergeableTableIdsDiff(o):4==n?e.getMergeableRowIdsDiff(o):5==n?e.getMergeableTablesChanges(o):6==n?e.getMergeableValuesChanges(o):void 0,(e=>{i(t,a,0,e)}))}));const j=async(e,t,a="")=>new n(((n,o)=>{const s=E(),r=setTimeout((()=>{u(I,s),o(`No response from ${e??"anyone"} to '${t}'`)}),1e3*x);p(I,s,[e,(e,t)=>{clearTimeout(r),u(I,s),n([e,t])}]),i(e,s,t,a)})),O=async(t=null,a)=>{s(a)&&([a,t]=await j(t,2));const[n,[o,r]]=a,[,[i,c]]=e.getMergeableContentHashes(),l=["",[["",{}],["",{}],1]];return i!=o&&(l[0]=n,l[1][0]=(await j(t,5,e.getMergeableCellHashes((await j(t,4,e.getMergeableRowHashes((await j(t,3,e.getMergeableTableHashes()))[0])))[0])))[0]),c!=r&&(l[0]=n,l[1][1]=(await j(t,6,e.getMergeableValuesHashes()))[0]),l},P=((e,n,o,i,c,l,u,y={},b=[])=>{let C,M,S,A=0;f(w,b,(()=>0)),f(v,b,(()=>[]));const[T,L,m,H]=((e,t)=>s(t.getMergeableContent)?[0,t.getContent,t.getTransactionChanges,([e,t])=>!d(e)||!d(t)]:[1,t.getMergeableContent,t.getTransactionMergeableChanges,([,[[,e],[,t]]])=>!d(e)||!d(t)])(0,e),x=async e=>(2!=A&&(A=1,await D.schedule((async()=>{await e(),A=0}))),D),z=n=>{var o;(T&&(o=n?.[0],t(o)==a)?1===n?.[1][2]?e.applyMergeableChanges:e.setMergeableContent:1===n?.[2]?e.applyChanges:e.setContent)(n)},D={load:async(t,a)=>await x((async()=>{try{z(await n())}catch(n){l?.(n),e.setContent([t,a])}})),startAutoLoad:async(e={},t={})=>(await D.stopAutoLoad().load(e,t),M=i((async(e,t)=>{const a=t?.();await x((async()=>{try{z(a??e?.()??await n())}catch(e){l?.(e)}}))})),D),stopAutoLoad:()=>(M&&(c(M),M=void 0),D),isAutoLoading:()=>!s(M),save:async e=>(1!=A&&(A=2,await D.schedule((async()=>{try{await o(L,e)}catch(e){l?.(e)}A=0}))),D),startAutoSave:async()=>(await D.stopAutoSave().save(),S=e.addDidFinishTransactionListener((()=>{const e=m();H(e)&&D.save((()=>e))})),D),stopAutoSave:()=>(r(S,e.delListener),S=void 0,D),isAutoSaving:()=>!s(S),schedule:async(...e)=>(((e,...t)=>{e.push(...t)})(h(v,b),...e),await(async()=>{if(!h(w,b)){for(p(w,b,1);!s((e=h(v,b),C=e.shift()));)try{await C()}catch(e){l?.(e)}p(w,b,0)}var e})(),D),getStore:()=>e,destroy:()=>D.stopAutoLoad().stopAutoSave(),getStats:()=>({}),...y};return g(D)})(e,(async()=>{const e=await O();return""!=e[0]?e:void 0}),(async()=>{i(null,null,1,e.getMergeableContentHashes())}),(e=>D=e),(()=>D=void 0),z,0,{startSync:async(e,t)=>await(await P.startAutoLoad(e,t)).startAutoSave(),stopSync:()=>P.stopAutoLoad().stopAutoSave(),destroy:()=>(l(),P.stopSync()),getSynchronizerStats:()=>({})});return P})(e,((e,t,a,n)=>{var o;s(e)?(o=(e,o)=>e!=c?o(c,t,a,n):0,((e,t)=>{e?.forEach(t)})(x,((e,t)=>o(t,e)))):h(x,e)?.(c,t,a,n)}),(e=>{p(x,c,e)}),(()=>{u(x,c)}),.001,i)}},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).TinyBaseSynchronizerLocal={});
