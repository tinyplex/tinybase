[{"p":{"/guides/the-basics/getting-started/":{"n":"Getting Started","s":"This guide gets you up and running quickly with TinyBase."},"/guides/the-basics/creating-a-store/":{"n":"Creating A Store","s":"This guide shows you how to create a new Store."},"/guides/the-basics/writing-to-stores/":{"n":"Writing To Stores","s":"This guide shows you how to write data to a Store."},"/guides/the-basics/reading-from-stores/":{"n":"Reading From Stores","s":"This guide shows you how to read data from a Store."},"/guides/the-basics/listening-to-stores/":{"n":"Listening To Stores","s":"This guide shows you how to listen to changes in the data in a Store."},"/guides/the-basics/transactions/":{"n":"Transactions","s":"This guide shows you how to wrap multiple changes to the data in a Store."},"/guides/the-basics/importing-tinybase/":{"n":"Importing TinyBase","s":"This guide provides an aside about importing TinyBase into your application."},"/guides/the-basics/tinybase-and-typescript/":{"n":"TinyBase And TypeScript","s":"This guide summarizes the two different levels of TypeScript coverage you can use with TinyBase."},"/guides/the-basics/architectural-options/":{"n":"Architectural Options","s":"This guide discusses some of the ways in which you can use TinyBase, and how you can architect it into the bigger picture of how your app is built."},"/guides/the-basics/":{"n":"The Basics","s":"These guides cover the very basics of TinyBase."},"/guides/building-uis/getting-started-with-ui-react/":{"n":"Getting Started With ui-react","s":"To build React-based user interfaces with TinyBase, you will need to install the ui-react module in addition to the main module, and, of course, React itself."},"/guides/building-uis/using-react-hooks/":{"n":"Using React Hooks","s":"There are reactive hooks in the ui-react module for accessing every part of a Store, as well as more advanced things like the Metrics and Indexes objects."},"/guides/building-uis/using-react-components/":{"n":"Using React Components","s":"The reactive components in the ui-react module let you declaratively display parts of a Store."},"/guides/building-uis/using-react-dom-components/":{"n":"Using React DOM Components","s":"The reactive components in the ui-react-dom module let you declaratively display parts of a Store in a web browser, where the ReactDOM module is available."},"/guides/building-uis/using-context/":{"n":"Using Context","s":"The ui-react module includes a context provider that lets you avoid passing global objects down through your component hierarchy."},"/guides/building-uis/":{"n":"Building UIs","s":"These guides cover how to use the ui-react module and use React hooks and components to easily build reactive user interfaces with TinyBase."},"/guides/schemas/using-schemas/":{"n":"Using Schemas","s":"Schemas are a simple declarative way to say what data you would like to store."},"/guides/schemas/schema-based-typing/":{"n":"Schema-Based Typing","s":"You can use type definitions that infer API types from the schemas you apply, providing a powerful way to improve your developer experience when you know the shape of the data being stored."},"/guides/schemas/mutating-data-with-listeners/":{"n":"Mutating Data With Listeners","s":"Although listeners are normally prevented from updating data, there are times when you may want to - such as when you are programmatically checking your data as it gets updated."},"/guides/schemas/":{"n":"Schemas","s":"These guides discuss how to set up a ValuesSchema or TablesSchema on a Store so that certain structures of data are assured."},"/guides/persistence/an-intro-to-persistence/":{"n":"An Intro To Persistence","s":"The persister module framework lets you save and load Store data to and from different locations, or underlying storage types."},"/guides/persistence/database-persistence/":{"n":"Database Persistence","s":"Since v4.0, there are various options for persisting Store data to and from SQLite databases, via a range of third-party modules."},"/guides/persistence/third-party-crdt-persistence/":{"n":"Third-Party CRDT Persistence","s":"Some persister modules let you save and load Store data to underlying storage types that can provide synchronization, local-first reconciliation, and CRDTs."},"/guides/persistence/custom-persistence/":{"n":"Custom Persistence","s":"When you want to load and save Store data in unusual or custom ways, you can used the createCustomPersister function to do so in any way you wish."},"/guides/persistence/":{"n":"Persistence","s":"These guides discuss how to load and save data to a Store from a persistence layer."},"/guides/synchronization/using-a-mergeablestore/":{"n":"Using A MergeableStore","s":"The basic building block of TinyBase's synchronization system is the MergeableStore interface."},"/guides/synchronization/using-a-synchronizer/":{"n":"Using A Synchronizer","s":"The synchronizer module framework lets you synchronize MergeableStore data between different devices, systems, or subsystems."},"/guides/synchronization/":{"n":"Synchronization","s":"These guides discuss how to merge and synchronize data in MergeableStore instances using synchronization techniques."},"/guides/integrations/cloudflare-durable-objects/":{"n":"Cloudflare Durable Objects","s":"[Durable Objects](https://developers.cloudflare.com/durable-objects/) are a new type of serverless compute platform from Cloudflare, and provide a way to run stateful applications in a serverless environment, without needing to manage infrastructure."},"/guides/integrations/":{"n":"Integrations","s":"There are plenty of other projects, products, and platforms that TinyBase can work with and alongside."},"/guides/using-metrics/an-intro-to-metrics/":{"n":"An Intro To Metrics","s":"This guide describes how the metrics module gives you the ability to create and track metrics based on the data in Store objects."},"/guides/using-metrics/building-a-ui-with-metrics/":{"n":"Building A UI With Metrics","s":"This guide covers how the ui-react module supports the Metrics object."},"/guides/using-metrics/advanced-metric-definition/":{"n":"Advanced Metric Definition","s":"This guide describes how the metrics module let you create more complex types of metrics based on the data in Store objects."},"/guides/using-metrics/":{"n":"Using Metrics","s":"These guides discuss how to define Metrics that aggregate values together."},"/guides/using-indexes/an-intro-to-indexes/":{"n":"An Intro To Indexes","s":"This guide describes how the indexes module gives you the ability to create and track indexes based on the data in Store objects, and which allow you to look up and display filtered data quickly."},"/guides/using-indexes/building-a-ui-with-indexes/":{"n":"Building A UI With Indexes","s":"This guide covers how the ui-react module supports the Indexes object."},"/guides/using-indexes/advanced-index-definition/":{"n":"Advanced Index Definition","s":"This guide describes how the indexes module let you create more complex types of indexes based on the data in Store objects."},"/guides/using-indexes/":{"n":"Using Indexes","s":"These guides discuss how to define Indexes that allow fast access to matching Row objects."},"/guides/using-relationships/an-intro-to-relationships/":{"n":"An Intro To Relationships","s":"This guide describes how the relationships module gives you the ability to create and track relationships between Row objects based on the data in a Store."},"/guides/using-relationships/building-a-ui-with-relationships/":{"n":"Building A UI With Relationships","s":"This guide covers how the ui-react module supports the Relationships object."},"/guides/using-relationships/advanced-relationship-definitions/":{"n":"Advanced Relationship Definitions","s":"This guide describes how the relationships module let you create more complex types of relationships based on the data in Store objects."},"/guides/using-relationships/":{"n":"Using Relationships","s":"These guides discuss how to define Relationships that connect Rows together between Table objects."},"/guides/using-checkpoints/an-intro-to-checkpoints/":{"n":"An Intro To Checkpoints","s":"This guide describes how the checkpoints module gives you the ability to create and track changes to a Store's data for the purposes of undo and redo functionality."},"/guides/using-checkpoints/building-a-ui-with-checkpoints/":{"n":"Building A UI With Checkpoints","s":"This guide covers how the ui-react module supports the Checkpoints object. After all, if you have undo functionality in your app, you probably want an undo button!"},"/guides/using-checkpoints/":{"n":"Using Checkpoints","s":"These guides discuss how to use Checkpoints that allow you to build undo and redo functionality."},"/guides/using-queries/an-intro-to-queries/":{"n":"An Intro To Queries","s":"This guide describes how the queries module gives you the ability to create queries against Tables in the Store - such as selecting specific Row and Cell combinations from each Table, or performing powerful features like grouping and aggregation."},"/guides/using-queries/tinyql/":{"n":"TinyQL","s":"This guide describes how to build a query against Store data, using the API provided by the setQueryDefinition method in the Queries object."},"/guides/using-queries/building-a-ui-with-queries/":{"n":"Building A UI With Queries","s":"This guide covers how the ui-react module supports the Queries object."},"/guides/using-queries/":{"n":"Using Queries","s":"These guides discuss how to define queries that let you select specific Row and Cell combinations from each Table, and benefit from powerful features like grouping and aggregation."},"/guides/inspecting-data/":{"n":"Inspecting Data","s":"If you are using TinyBase with React, you can use its web-based inspector, the Inspector component, that allows you to reason about the data during development."},"/guides/how-tinybase-is-built/developing-tinybase/":{"n":"Developing TinyBase","s":"This guide is for people who would like to checkout the TinyBase code and build it from source. It's a quick overview of the common workflows."},"/guides/how-tinybase-is-built/architecture/":{"n":"Architecture","s":"The architecture of TinyBase is pretty straightforward. This guide runs through the main file structure and principles."},"/guides/how-tinybase-is-built/testing/":{"n":"Testing","s":"Testing is a first-class citizen in TinyBase, as you may see from the high coverage it enjoys."},"/guides/how-tinybase-is-built/documentation/":{"n":"Documentation","s":"Like testing, documentation is a first-class citizen of TinyBase, and most of it is structured as API documentation (from the `.d.ts` files) and from markdown pages."},"/guides/how-tinybase-is-built/how-the-demos-work/":{"n":"How The Demos Work","s":"The demos on the TinyBase site deserve a little explanation."},"/guides/how-tinybase-is-built/credits/":{"n":"Credits","s":"I'm James. Building TinyBase was an interesting exercise in API design, minification, and documentation. But now people seem to like using it!"},"/guides/how-tinybase-is-built/":{"n":"How TinyBase Is Built","s":"These guides discuss how TinyBase is structured and some of the interesting ways in which it is architected, tested, and built."},"/guides/faq/":{"n":"FAQ","s":"These are some of the frequently asked questions about TinyBase."},"/guides/releases/":{"n":"Releases","s":"This is a reverse chronological list of the major TinyBase releases, with highlighted features."},"/guides/":{"n":"Guides","s":"This series of guides helps explain the concepts behind TinyBase and is designed to complement the more comprehensive API documentation."},"/demos/hello-world/hello-world-v1/":{"n":"Hello World v1","s":"In this demo, we set data in, and then get data from, a Store object. We're using keyed values (not even tabular data!), so this is about as simple as it gets."},"/demos/hello-world/hello-world-v2/":{"n":"Hello World v2","s":"In this demo, we again set data in, and then get data from, a Store object. But this time we're using tabular data."},"/demos/hello-world/hello-world-v3/":{"n":"Hello World v3","s":"In this demo, we set up a listener for data in the Store object and then change the Cell to see the display update. We're making changes to the Hello World v2 demo."},"/demos/hello-world/hello-world-v4/":{"n":"Hello World v4","s":"In this demo, we use React to render data in the Store object and then change a Cell to see the display update. We're making changes to the Hello World v3 demo."},"/demos/hello-world/":{"n":"Hello World","s":"These demos demonstrate the absolute basics of using TinyBase, with an obligatory 'Hello World' example."},"/demos/rolling-dice/averaging-dice-rolls/":{"n":"Averaging Dice Rolls","s":"In this demo, we use a Metrics object to keep a count (and a rolling average) of the values in each Cell in a Store. We roll a dice 48 times and keep track of the average."},"/demos/rolling-dice/grouping-dice-rolls/":{"n":"Grouping Dice Rolls","s":"In this demo, we use an IndexView component to group each Row of the Store object based on the value in a Cell within it. We roll a dice 48 times and index the rolls by result. We're making changes to the Averaging Dice Rolls demo."},"/demos/rolling-dice/":{"n":"Rolling Dice","s":"These demos demonstrate metrics (such as average dice rolls) and indexes (such as grouping multiple dice rolls)."},"/demos/countries/":{"n":"Countries","s":"In this demo, we build a simple app that uses React and a simple Store object to load and display country data."},"/demos/todo-app/todo-app-v1-the-basics/":{"n":"Todo App v1 (the basics)","s":"In this demo, we build a minimum viable 'Todo' app. It uses React and a simple Store to let people add new todos and then mark them as done."},"/demos/todo-app/todo-app-v2-indexes/":{"n":"Todo App v2 (indexes)","s":"In this demo, we build a more complex 'Todo' app. In addition to what we built in Todo App v1 (the basics), we let people specify a type for each todo, such as 'Home', 'Work' or 'Archived'."},"/demos/todo-app/todo-app-v3-persistence/":{"n":"Todo App v3 (persistence)","s":"In this demo, we build a yet more complex 'Todo' app, complete with persistence and a schema."},"/demos/todo-app/todo-app-v4-metrics/":{"n":"Todo App v4 (metrics)","s":"In this version of the Todo app, we add a Metrics object that tracks the number of todos of each type and how many are not yet done. This allows us to show people how well they are getting through them."},"/demos/todo-app/todo-app-v5-checkpoints/":{"n":"Todo App v5 (checkpoints)","s":"In this version of the Todo app, we add a Checkpoints object that provides us with an undo and redo stack as the main store changes."},"/demos/todo-app/todo-app-v6-collaboration/":{"n":"Todo App v6 (collaboration)","s":"In this version of the Todo app, we use a Synchronizer to make the application collaborative."},"/demos/todo-app/":{"n":"Todo App","s":"These demos demonstrate how to build a classic 'Todo' app, with successive levels of complexity."},"/demos/drawing/":{"n":"Drawing","s":"In this demo, we build a more complex drawing app, using many of the features of TinyBase together."},"/demos/city-database/":{"n":"City Database","s":"In this demo, we build an app that loads over 140,000 records to push the size and performance limits of TinyBase."},"/demos/car-analysis/":{"n":"Car Analysis","s":"In this demo, we build an app that showcases the query capabilities of TinyBase v2.0, grouping and sorting dimensional data for lightweight analytical usage."},"/demos/movie-database/":{"n":"Movie Database","s":"In this demo, we build an app that showcases the relational query capabilities of TinyBase v2.0, joining together information about movies, directors, and actors."},"/demos/word-frequencies/":{"n":"Word Frequencies","s":"In this demo, we load the list of the 10,000 most common words in English, index them for a fast search experience, and showcase TinyBase v2.1's ability to register a Row in multiple Slice arrays of an Index."},"/demos/ui-components/valuesinhtmltable/":{"n":"<ValuesInHtmlTable />","s":"In this first demo, we set up a Store containing some sample data, and showcase the ValuesInHtmlTable component."},"/demos/ui-components/tableinhtmltable/":{"n":"<TableInHtmlTable />","s":"In this demo, we showcase the TableInHtmlTable component."},"/demos/ui-components/sortedtableinhtmltable/":{"n":"<SortedTableInHtmlTable />","s":"In this demo, we showcase the SortedTableInHtmlTable component, a more complex and interactive way to render a TinyBase Table."},"/demos/ui-components/sliceinhtmltable/":{"n":"<SliceInHtmlTable />","s":"In this demo, we showcase the SliceInHtmlTable component, a way to display the Slice portions of an Index."},"/demos/ui-components/relationshipinhtmltable/":{"n":"<RelationshipInHtmlTable />","s":"In this demo, we showcase the RelationshipInHtmlTable component, a way to display the two Tables linked together by a Relationship."},"/demos/ui-components/resulttableinhtmltable/":{"n":"<ResultTableInHtmlTable />","s":"In this demo, we showcase the ResultTableInHtmlTable component, a way to display the results of a query."},"/demos/ui-components/resultsortedtableinhtmltable/":{"n":"<ResultSortedTableInHtmlTable />","s":"In this demo, we showcase the ResultSortedTableInHtmlTable component, a more complex and interactive way to render the results of a query."},"/demos/ui-components/editablevalueview/":{"n":"<EditableValueView />","s":"In this demo, we showcase the EditableValueView component, which allows you to edit Values in the Store in a web environment."},"/demos/ui-components/editablecellview/":{"n":"<EditableCellView />","s":"In this demo, we showcase the EditableCellView component, which allows you to edit Cell values in the Store in a web environment."},"/demos/ui-components/inspector/":{"n":"<Inspector />","s":"In this demo, we showcase the Inspector component, which allows you to view and edit the content of a Store in a debug web environment."},"/demos/ui-components/":{"n":"UI Components","s":"In this set of demos, we use a Store containing some sample data to showcase the UI components in the ui-react-dom module."},"/demos/":{"n":"Demos","s":"This is a selection of demos that show how TinyBase can be used in real-world applications."},"/api/store/interfaces/store/store/methods/getter/gettables/":{"n":"getTables","s":"The getTables method returns a Tables object containing the entire tabular data of the Store."},"/api/store/interfaces/store/store/methods/getter/gettablesjson/":{"n":"getTablesJson","s":"The getTablesJson method returns a string serialization of all of the Tables in the Store."},"/api/store/interfaces/store/store/methods/getter/gettablesschemajson/":{"n":"getTablesSchemaJson","s":"The getTablesSchemaJson method returns a string serialization of the TablesSchema of the Store."},"/api/store/interfaces/store/store/methods/getter/hastables/":{"n":"hasTables","s":"The hasTables method returns a boolean indicating whether any Table objects exist in the Store."},"/api/store/interfaces/store/store/methods/getter/hastablesschema/":{"n":"hasTablesSchema","s":"The hasTablesSchema method returns a boolean indicating whether the Store currently has a TablesSchema applied to it."},"/api/store/interfaces/store/store/methods/getter/gettableids/":{"n":"getTableIds","s":"The getTableIds method returns the Ids of every Table in the Store."},"/api/store/interfaces/store/store/methods/getter/gettable/":{"n":"getTable","s":"The getTable method returns an object containing the entire data of a single Table in the Store."},"/api/store/interfaces/store/store/methods/getter/gettablecellids/":{"n":"getTableCellIds","s":"The getTableCellIds method returns the Ids of every Cell used across the whole Table."},"/api/store/interfaces/store/store/methods/getter/hastable/":{"n":"hasTable","s":"The hasTable method returns a boolean indicating whether a given Table exists in the Store."},"/api/store/interfaces/store/store/methods/getter/hastablecell/":{"n":"hasTableCell","s":"The hasTableCell method returns a boolean indicating whether a given Cell exists anywhere in a Table, not just in a specific Row."},"/api/store/interfaces/store/store/methods/getter/getrowids/":{"n":"getRowIds","s":"The getRowIds method returns the Ids of every Row in a given Table."},"/api/store/interfaces/store/store/methods/getter/getsortedrowids/":{"n":"getSortedRowIds","s":"The getSortedRowIds method returns the Ids of every Row in a given Table, sorted according to the values in a specified Cell."},"/api/store/interfaces/store/store/methods/getter/getrow/":{"n":"getRow","s":"The getRow method returns an object containing the entire data of a single Row in a given Table."},"/api/store/interfaces/store/store/methods/getter/getrowcount/":{"n":"getRowCount","s":"The getRowCount method returns the count of the Row objects in a given Table."},"/api/store/interfaces/store/store/methods/getter/hasrow/":{"n":"hasRow","s":"The hasRow method returns a boolean indicating whether a given Row exists in the Store."},"/api/store/interfaces/store/store/methods/getter/getcellids/":{"n":"getCellIds","s":"The getCellIds method returns the Ids of every Cell in a given Row in a given Table."},"/api/store/interfaces/store/store/methods/getter/getcell/":{"n":"getCell","s":"The getCell method returns the value of a single Cell in a given Row, in a given Table."},"/api/store/interfaces/store/store/methods/getter/hascell/":{"n":"hasCell","s":"The hasCell method returns a boolean indicating whether a given Cell exists in a given Row in a given Table."},"/api/store/interfaces/store/store/methods/getter/getvalues/":{"n":"getValues","s":"The getValues method returns an object containing the entire set of keyed Values in the Store."},"/api/store/interfaces/store/store/methods/getter/getvaluesjson/":{"n":"getValuesJson","s":"The getValuesJson method returns a string serialization of all of the keyed Values in the Store."},"/api/store/interfaces/store/store/methods/getter/getvaluesschemajson/":{"n":"getValuesSchemaJson","s":"The getValuesSchemaJson method returns a string serialization of the ValuesSchema of the Store."},"/api/store/interfaces/store/store/methods/getter/hasvalues/":{"n":"hasValues","s":"The hasValues method returns a boolean indicating whether any Values exist in the Store."},"/api/store/interfaces/store/store/methods/getter/hasvaluesschema/":{"n":"hasValuesSchema","s":"The hasValuesSchema method returns a boolean indicating whether the Store currently has a ValuesSchema applied to it."},"/api/store/interfaces/store/store/methods/getter/getvalue/":{"n":"getValue","s":"The getValue method returns a single keyed Value in the Store."},"/api/store/interfaces/store/store/methods/getter/getvalueids/":{"n":"getValueIds","s":"The getValueIds method returns the Ids of every Value in a Store."},"/api/store/interfaces/store/store/methods/getter/hasvalue/":{"n":"hasValue","s":"The hasValue method returns a boolean indicating whether a given Value exists in the Store."},"/api/store/interfaces/store/store/methods/getter/getcontent/":{"n":"getContent","s":"The getContent method returns a Tables object and a Values object in an array, representing the entire content of the Store."},"/api/store/interfaces/store/store/methods/getter/getjson/":{"n":"getJson","s":"The getJson method returns a string serialization of all the Store content: both the Tables and the keyed Values."},"/api/store/interfaces/store/store/methods/getter/getschemajson/":{"n":"getSchemaJson","s":"The getSchemaJson method returns a string serialization of both the TablesSchema and ValuesSchema of the Store."},"/api/store/interfaces/store/store/methods/getter/ismergeable/":{"n":"isMergeable","s":"The isMergeable method lets you know if the Store is mergeable."},"/api/store/interfaces/store/store/methods/setter/settables/":{"n":"setTables","s":"The setTables method takes an object and sets the entire tabular data of the Store."},"/api/store/interfaces/store/store/methods/setter/settablesjson/":{"n":"setTablesJson","s":"The setTablesJson method takes a string serialization of all of the Tables in the Store and attempts to update them to that."},"/api/store/interfaces/store/store/methods/setter/settablesschema/":{"n":"setTablesSchema","s":"The setTablesSchema method lets you specify the TablesSchema of the tabular part of the Store."},"/api/store/interfaces/store/store/methods/setter/settable/":{"n":"setTable","s":"The setTable method takes an object and sets the entire data of a single Table in the Store."},"/api/store/interfaces/store/store/methods/setter/setrow/":{"n":"setRow","s":"The setRow method takes an object and sets the entire data of a single Row in the Store."},"/api/store/interfaces/store/store/methods/setter/addrow/":{"n":"addRow","s":"The addRow method takes an object and creates a new Row in the Store, returning the unique Id assigned to it."},"/api/store/interfaces/store/store/methods/setter/setpartialrow/":{"n":"setPartialRow","s":"The setPartialRow method takes an object and sets partial data of a single Row in the Store, leaving other Cell values unaffected."},"/api/store/interfaces/store/store/methods/setter/setcell/":{"n":"setCell","s":"The setCell method sets the value of a single Cell in the Store."},"/api/store/interfaces/store/store/methods/setter/setpartialvalues/":{"n":"setPartialValues","s":"The setPartialValues method takes an object and sets its Values in the Store, but leaving existing Values unaffected."},"/api/store/interfaces/store/store/methods/setter/setvalues/":{"n":"setValues","s":"The setValues method takes an object and sets all the Values in the Store."},"/api/store/interfaces/store/store/methods/setter/setvaluesjson/":{"n":"setValuesJson","s":"The setValuesJson method takes a string serialization of all of the Values in the Store and attempts to update them to those values."},"/api/store/interfaces/store/store/methods/setter/setvaluesschema/":{"n":"setValuesSchema","s":"The setValuesSchema method lets you specify the ValuesSchema of the keyed Values part of the Store."},"/api/store/interfaces/store/store/methods/setter/setvalue/":{"n":"setValue","s":"The setValue method sets a single keyed Value in the Store."},"/api/store/interfaces/store/store/methods/setter/applychanges/":{"n":"applyChanges","s":"The applyChanges method applies a set of Changes to the Store."},"/api/store/interfaces/store/store/methods/setter/setcontent/":{"n":"setContent","s":"The setContent method takes an array of two objects and sets the entire data of the Store."},"/api/store/interfaces/store/store/methods/setter/setjson/":{"n":"setJson","s":"The setJson method takes a string serialization of all of the Tables and Values in the Store and attempts to update them to those values."},"/api/store/interfaces/store/store/methods/setter/setschema/":{"n":"setSchema","s":"The setSchema method lets you specify the TablesSchema and ValuesSchema of the Store."},"/api/store/interfaces/store/store/methods/listener/addhastableslistener/":{"n":"addHasTablesListener","s":"The addHasTablesListener method registers a listener function with the Store that will be called when Tables as a whole are added to or removed from the Store."},"/api/store/interfaces/store/store/methods/listener/addtableslistener/":{"n":"addTablesListener","s":"The addTablesListener method registers a listener function with the Store that will be called whenever data in the Store changes."},"/api/store/interfaces/store/store/methods/listener/addtableidslistener/":{"n":"addTableIdsListener","s":"The addTableIdsListener method registers a listener function with the Store that will be called whenever the Table Ids in the Store change."},"/api/store/interfaces/store/store/methods/listener/addhastablecelllistener/":{"n":"addHasTableCellListener","s":"The addHasTableCellListener method registers a listener function with the Store that will be called when a Cell is added to or removed from anywhere in a Table as a whole."},"/api/store/interfaces/store/store/methods/listener/addhastablelistener/":{"n":"addHasTableListener","s":"The addHasTableListener method registers a listener function with the Store that will be called when a Table is added to or removed from the Store."},"/api/store/interfaces/store/store/methods/listener/addtablecellidslistener/":{"n":"addTableCellIdsListener","s":"The addTableCellIdsListener method registers a listener function with the Store that will be called whenever the Cell Ids that appear anywhere in a Table change."},"/api/store/interfaces/store/store/methods/listener/addtablelistener/":{"n":"addTableListener","s":"The addTableListener method registers a listener function with the Store that will be called whenever data in a Table changes."},"/api/store/interfaces/store/store/methods/listener/addrowidslistener/":{"n":"addRowIdsListener","s":"The addRowIdsListener method registers a listener function with the Store that will be called whenever the Row Ids in a Table change."},"/api/store/interfaces/store/store/methods/listener/addsortedrowidslistener/":{"n":"addSortedRowIdsListener","s":"The addSortedRowIdsListener method registers a listener function with the Store that will be called whenever sorted (and optionally, paginated) Row Ids in a Table change."},"/api/store/interfaces/store/store/methods/listener/addhasrowlistener/":{"n":"addHasRowListener","s":"The addHasRowListener method registers a listener function with the Store that will be called when a Row is added to or removed from the Store."},"/api/store/interfaces/store/store/methods/listener/addrowcountlistener/":{"n":"addRowCountListener","s":"The addRowCountListener method registers a listener function with the Store that will be called whenever the count of Row objects in a Table change."},"/api/store/interfaces/store/store/methods/listener/addrowlistener/":{"n":"addRowListener","s":"The addRowListener method registers a listener function with the Store that will be called whenever data in a Row changes."},"/api/store/interfaces/store/store/methods/listener/addcellidslistener/":{"n":"addCellIdsListener","s":"The addCellIdsListener method registers a listener function with the Store that will be called whenever the Cell Ids in a Row change."},"/api/store/interfaces/store/store/methods/listener/addcelllistener/":{"n":"addCellListener","s":"The addCellListener method registers a listener function with the Store that will be called whenever data in a Cell changes."},"/api/store/interfaces/store/store/methods/listener/addhascelllistener/":{"n":"addHasCellListener","s":"The addHasCellListener method registers a listener function with the Store that will be called when a Cell is added to or removed from the Store."},"/api/store/interfaces/store/store/methods/listener/addinvalidcelllistener/":{"n":"addInvalidCellListener","s":"The addInvalidCellListener method registers a listener function with the Store that will be called whenever invalid data was attempted to be written to a Cell."},"/api/store/interfaces/store/store/methods/listener/addhasvalueslistener/":{"n":"addHasValuesListener","s":"The addHasValuesListener method registers a listener function with the Store that will be called when Values as a whole are added to or removed from the Store."},"/api/store/interfaces/store/store/methods/listener/addvalueslistener/":{"n":"addValuesListener","s":"The addValuesListener method registers a listener function with the Store that will be called whenever the Values change."},"/api/store/interfaces/store/store/methods/listener/addhasvaluelistener/":{"n":"addHasValueListener","s":"The addHasValueListener method registers a listener function with the Store that will be called when a Value is added to or removed from the Store."},"/api/store/interfaces/store/store/methods/listener/addinvalidvaluelistener/":{"n":"addInvalidValueListener","s":"The addInvalidValueListener method registers a listener function with the Store that will be called whenever invalid data was attempted to be written to a Value."},"/api/store/interfaces/store/store/methods/listener/addvalueidslistener/":{"n":"addValueIdsListener","s":"The addValueIdsListener method registers a listener function with the Store that will be called whenever the Value Ids in a Store change."},"/api/store/interfaces/store/store/methods/listener/addvaluelistener/":{"n":"addValueListener","s":"The addValueListener method registers a listener function with the Store that will be called whenever data in a Value changes."},"/api/store/interfaces/store/store/methods/listener/adddidfinishtransactionlistener/":{"n":"addDidFinishTransactionListener","s":"The addDidFinishTransactionListener method registers a listener function with the Store that will be called just after other non-mutating listeners are called at the end of the transaction."},"/api/store/interfaces/store/store/methods/listener/addstarttransactionlistener/":{"n":"addStartTransactionListener","s":"The addStartTransactionListener method registers a listener function with the Store that will be called at the start of a transaction."},"/api/store/interfaces/store/store/methods/listener/addwillfinishtransactionlistener/":{"n":"addWillFinishTransactionListener","s":"The addWillFinishTransactionListener method registers a listener function with the Store that will be called just before other non-mutating listeners are called at the end of the transaction."},"/api/store/interfaces/store/store/methods/listener/calllistener/":{"n":"callListener","s":"The callListener method provides a way for you to manually provoke a listener to be called, even if the underlying data hasn't changed."},"/api/store/interfaces/store/store/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Store."},"/api/store/interfaces/store/store/methods/iterator/foreachtable/":{"n":"forEachTable","s":"The forEachTable method takes a function that it will then call for each Table in the Store."},"/api/store/interfaces/store/store/methods/iterator/foreachtablecell/":{"n":"forEachTableCell","s":"The forEachTableCell method takes a function that it will then call for each Cell used across the whole Table."},"/api/store/interfaces/store/store/methods/iterator/foreachrow/":{"n":"forEachRow","s":"The forEachRow method takes a function that it will then call for each Row in a specified Table."},"/api/store/interfaces/store/store/methods/iterator/foreachcell/":{"n":"forEachCell","s":"The forEachCell method takes a function that it will then call for each Cell in a specified Row."},"/api/store/interfaces/store/store/methods/iterator/foreachvalue/":{"n":"forEachValue","s":"The forEachValue method takes a function that it will then call for each Value in a Store."},"/api/store/interfaces/store/store/methods/transaction/finishtransaction/":{"n":"finishTransaction","s":"The finishTransaction method allows you to explicitly finish a transaction that has made multiple mutations to the Store, triggering all calls to the relevant listeners."},"/api/store/interfaces/store/store/methods/transaction/gettransactionchanges/":{"n":"getTransactionChanges","s":"The getTransactionChanges method returns the net meaningful changes that have been made to a Store during a transaction."},"/api/store/interfaces/store/store/methods/transaction/gettransactionlog/":{"n":"getTransactionLog","s":"The getTransactionLog method returns the changes that were made to a Store during a transaction in more detail, including invalid changes, and what previous values were."},"/api/store/interfaces/store/store/methods/transaction/starttransaction/":{"n":"startTransaction","s":"The startTransaction method allows you to explicitly start a transaction that will make multiple mutations to the Store, buffering all calls to the relevant listeners until it completes when you call the finishTransaction method."},"/api/store/interfaces/store/store/methods/transaction/transaction/":{"n":"transaction","s":"The transaction method takes a function that makes multiple mutations to the Store, buffering all calls to the relevant listeners until it completes."},"/api/store/interfaces/store/store/methods/deleter/deltables/":{"n":"delTables","s":"The delTables method lets you remove all of the data in a Store."},"/api/store/interfaces/store/store/methods/deleter/deltablesschema/":{"n":"delTablesSchema","s":"The delTablesSchema method lets you remove the TablesSchema of the Store."},"/api/store/interfaces/store/store/methods/deleter/deltable/":{"n":"delTable","s":"The delTable method lets you remove a single Table from the Store."},"/api/store/interfaces/store/store/methods/deleter/delrow/":{"n":"delRow","s":"The delRow method lets you remove a single Row from a Table."},"/api/store/interfaces/store/store/methods/deleter/delcell/":{"n":"delCell","s":"The delCell method lets you remove a single Cell from a Row."},"/api/store/interfaces/store/store/methods/deleter/delvalues/":{"n":"delValues","s":"The delValues method lets you remove all the Values from a Store."},"/api/store/interfaces/store/store/methods/deleter/delvaluesschema/":{"n":"delValuesSchema","s":"The delValuesSchema method lets you remove the ValuesSchema of the Store."},"/api/store/interfaces/store/store/methods/deleter/delvalue/":{"n":"delValue","s":"The delValue method lets you remove a single Value from a Store."},"/api/store/interfaces/store/store/methods/deleter/delschema/":{"n":"delSchema","s":"The delSchema method lets you remove both the TablesSchema and ValuesSchema of the Store."},"/api/store/interfaces/store/store/methods/development/getlistenerstats/":{"n":"getListenerStats","s":"The getListenerStats method provides a set of statistics about the listeners registered with the Store, and is used for debugging purposes."},"/api/store/interfaces/store/store/":{"n":"Store","s":"A Store is the main location for keeping both tabular data and keyed values."},"/api/store/functions/creation/createstore/":{"n":"createStore","s":"The createStore function creates a Store, and is the main entry point into the store module."},"/api/store/type-aliases/listener/tableslistener/":{"n":"TablesListener","s":"The TablesListener type describes a function that is used to listen to changes to the tabular part of the Store."},"/api/store/type-aliases/listener/hastableslistener/":{"n":"HasTablesListener","s":"The HasTablesListener type describes a function that is used to listen to Tables as a whole being added to or removed from the Store."},"/api/store/type-aliases/listener/tableidslistener/":{"n":"TableIdsListener","s":"The TableIdsListener type describes a function that is used to listen to changes to the Table Ids in the Store."},"/api/store/type-aliases/listener/tablecellidslistener/":{"n":"TableCellIdsListener","s":"The TableCellIdsListener type describes a function that is used to listen to changes to the Cell Ids that appear anywhere in a Table."},"/api/store/type-aliases/listener/tablelistener/":{"n":"TableListener","s":"The TableListener type describes a function that is used to listen to changes to a Table."},"/api/store/type-aliases/listener/hastablecelllistener/":{"n":"HasTableCellListener","s":"The HasTableCellListener type describes a function that is used to listen to a Cell being added to or removed from a Table as a whole."},"/api/store/type-aliases/listener/hastablelistener/":{"n":"HasTableListener","s":"The HasTableListener type describes a function that is used to listen to a Table being added to or removed from the Store."},"/api/store/type-aliases/listener/rowidslistener/":{"n":"RowIdsListener","s":"The RowIdsListener type describes a function that is used to listen to changes to the Row Ids in a Table."},"/api/store/type-aliases/listener/sortedrowidslistener/":{"n":"SortedRowIdsListener","s":"The SortedRowIdsListener type describes a function that is used to listen to changes to sorted Row Ids in a Table."},"/api/store/type-aliases/listener/hasrowlistener/":{"n":"HasRowListener","s":"The HasRowListener type describes a function that is used to listen to a Row being added to or removed from the Store."},"/api/store/type-aliases/listener/rowcountlistener/":{"n":"RowCountListener","s":"The RowCountListener type describes a function that is used to listen to changes to the number of Row objects in a Table."},"/api/store/type-aliases/listener/rowlistener/":{"n":"RowListener","s":"The RowListener type describes a function that is used to listen to changes to a Row."},"/api/store/type-aliases/listener/cellidslistener/":{"n":"CellIdsListener","s":"The CellIdsListener type describes a function that is used to listen to changes to the Cell Ids in a Row."},"/api/store/type-aliases/listener/cellchange/":{"n":"CellChange","s":"The CellChange type describes a Cell's changes during a transaction."},"/api/store/type-aliases/listener/celllistener/":{"n":"CellListener","s":"The CellListener type describes a function that is used to listen to changes to a Cell."},"/api/store/type-aliases/listener/getcellchange/":{"n":"GetCellChange","s":"The GetCellChange type describes a function that returns information about any Cell's changes during a transaction."},"/api/store/type-aliases/listener/hascelllistener/":{"n":"HasCellListener","s":"The HasCellListener type describes a function that is used to listen to a Cell being added to or removed from the Store."},"/api/store/type-aliases/listener/invalidcelllistener/":{"n":"InvalidCellListener","s":"The InvalidCellListener type describes a function that is used to listen to attempts to set invalid data to a Cell."},"/api/store/type-aliases/listener/valueslistener/":{"n":"ValuesListener","s":"The ValuesListener type describes a function that is used to listen to changes to all the Values in a Store."},"/api/store/type-aliases/listener/hasvalueslistener/":{"n":"HasValuesListener","s":"The HasValuesListener type describes a function that is used to listen to Values as a whole being added to or removed from the Store."},"/api/store/type-aliases/listener/getvaluechange/":{"n":"GetValueChange","s":"The GetValueChange type describes a function that returns information about any Value's changes during a transaction."},"/api/store/type-aliases/listener/hasvaluelistener/":{"n":"HasValueListener","s":"The HasValueListener type describes a function that is used to listen to a Value being added to or removed from the Store."},"/api/store/type-aliases/listener/invalidvaluelistener/":{"n":"InvalidValueListener","s":"The InvalidValueListener type describes a function that is used to listen to attempts to set invalid data to a Value."},"/api/store/type-aliases/listener/valuechange/":{"n":"ValueChange","s":"The ValueChange type describes a Value's changes during a transaction."},"/api/store/type-aliases/listener/valueidslistener/":{"n":"ValueIdsListener","s":"The ValueIdsListener type describes a function that is used to listen to changes to the Value Ids in a Store."},"/api/store/type-aliases/listener/valuelistener/":{"n":"ValueListener","s":"The ValueListener type describes a function that is used to listen to changes to a Value."},"/api/store/type-aliases/listener/getidchanges/":{"n":"GetIdChanges","s":"The GetIdChanges type describes a function that returns information about the changes to a set of Ids during a transaction."},"/api/store/type-aliases/listener/transactionlistener/":{"n":"TransactionListener","s":"The TransactionListener type describes a function that is used to listen to the completion of a transaction for the Store."},"/api/store/type-aliases/callback/tablecallback/":{"n":"TableCallback","s":"The TableCallback type describes a function that takes a Table's Id and a callback to loop over each Row within it."},"/api/store/type-aliases/callback/tablecellcallback/":{"n":"TableCellCallback","s":"The TableCellCallback type describes a function that takes a Cell's Id and the count of times it appears across a whole Table."},"/api/store/type-aliases/callback/rowcallback/":{"n":"RowCallback","s":"The RowCallback type describes a function that takes a Row's Id and a callback to loop over each Cell within it."},"/api/store/type-aliases/callback/cellcallback/":{"n":"CellCallback","s":"The CellCallback type describes a function that takes a Cell's Id and its value."},"/api/store/type-aliases/callback/getcell/":{"n":"GetCell","s":"The GetCell type describes a function that takes a Id and returns the Cell value for a particular Row."},"/api/store/type-aliases/callback/mapcell/":{"n":"MapCell","s":"The MapCell type describes a function that takes an existing Cell value and returns another."},"/api/store/type-aliases/callback/mapvalue/":{"n":"MapValue","s":"The MapValue type describes a function that takes an existing Value and returns another."},"/api/store/type-aliases/callback/valuecallback/":{"n":"ValueCallback","s":"The ValueCallback type describes a function that takes a Value's Id and its actual value."},"/api/store/type-aliases/callback/dorollback/":{"n":"DoRollback","s":"The DoRollback type describes a function that you can use to rollback the transaction if it did not complete to your satisfaction."},"/api/store/type-aliases/schema/tablesschema/":{"n":"TablesSchema","s":"The TablesSchema type describes the tabular structure of a Store in terms of valid Table Ids and the types of Cell that can exist within them."},"/api/store/type-aliases/schema/notablesschema/":{"n":"NoTablesSchema","s":"The NoTablesSchema type is a TablesSchema-like type for when one has not been provided."},"/api/store/type-aliases/schema/optionaltablesschema/":{"n":"OptionalTablesSchema","s":"The OptionalTablesSchema type is used by generic types that can optionally take a TablesSchema."},"/api/store/type-aliases/schema/cellschema/":{"n":"CellSchema","s":"The CellSchema type describes what values are allowed for each Cell in a Table."},"/api/store/type-aliases/schema/valuesschema/":{"n":"ValuesSchema","s":"The ValuesSchema type describes the keyed Values that can be set in a Store and their types."},"/api/store/type-aliases/schema/novaluesschema/":{"n":"NoValuesSchema","s":"The NoValuesSchema type is a ValuesSchema-like type for when one has not been provided."},"/api/store/type-aliases/schema/optionalvaluesschema/":{"n":"OptionalValuesSchema","s":"The OptionalValuesSchema type is used by generic types that can optionally take a ValuesSchema."},"/api/store/type-aliases/schema/valueschema/":{"n":"ValueSchema","s":"The ValueSchema type describes what values are allowed for keyed Values in a Store."},"/api/store/type-aliases/schema/noschemas/":{"n":"NoSchemas","s":"The NoSchemas type is used as a default by generic types that can optionally take either or both of a TablesSchema and ValuesSchema."},"/api/store/type-aliases/schema/optionalschemas/":{"n":"OptionalSchemas","s":"The OptionalSchemas type is used by generic types that can optionally take either or both of a TablesSchema and ValuesSchema."},"/api/store/type-aliases/store/tables/":{"n":"Tables","s":"The Tables type is the data structure representing all of the data in a Store."},"/api/store/type-aliases/store/table/":{"n":"Table","s":"The Table type is the data structure representing the data in a single table."},"/api/store/type-aliases/store/sortedrowidsargs/":{"n":"SortedRowIdsArgs","s":"The SortedRowIdsArgs type describes the arguments used to sort Row Ids using the getSortedRowIds method."},"/api/store/type-aliases/store/row/":{"n":"Row","s":"The Row type is the data structure representing the data in a single row."},"/api/store/type-aliases/store/cell/":{"n":"Cell","s":"The Cell type is the data structure representing the data in a single cell."},"/api/store/type-aliases/store/cellorundefined/":{"n":"CellOrUndefined","s":"The CellOrUndefined type is a data structure representing the data in a single cell, or the value `undefined`."},"/api/store/type-aliases/store/values/":{"n":"Values","s":"The Values type is the data structure representing all the keyed values in a Store."},"/api/store/type-aliases/store/value/":{"n":"Value","s":"The Value type is the data structure representing the data in a single keyed value."},"/api/store/type-aliases/store/valueorundefined/":{"n":"ValueOrUndefined","s":"The ValueOrUndefined type is a data structure representing the data in a single value, or the value `undefined`."},"/api/store/type-aliases/store/content/":{"n":"Content","s":"The Content type describes both the Tables and Values in a Store."},"/api/store/type-aliases/transaction/changedtableids/":{"n":"ChangedTableIds","s":"The ChangedTableIds type describes the Table Ids that were added or removed during a transaction."},"/api/store/type-aliases/transaction/changedrowids/":{"n":"ChangedRowIds","s":"The ChangedRowIds type describes the Row Ids that were added or removed during a transaction."},"/api/store/type-aliases/transaction/changedcellids/":{"n":"ChangedCellIds","s":"The ChangedCellIds type describes the Cell Ids that were added or removed during a transaction."},"/api/store/type-aliases/transaction/changedcell/":{"n":"ChangedCell","s":"The ChangedCell type describes a Cell that has been changed during a transaction, primarily used so that you can indicate whether the transaction should be rolled back."},"/api/store/type-aliases/transaction/changedcells/":{"n":"ChangedCells","s":"The ChangedCells type describes the Cell values that have been changed during a transaction, primarily used so that you can indicate whether the transaction should be rolled back."},"/api/store/type-aliases/transaction/invalidcells/":{"n":"InvalidCells","s":"The InvalidCells type describes the invalid Cell values that have been attempted during a transaction, primarily used so that you can indicate whether the transaction should be rolled back."},"/api/store/type-aliases/transaction/changedvalues/":{"n":"ChangedValues","s":"The ChangedValues type describes the Values that have been changed during a transaction, primarily used so that you can indicate whether the transaction should be rolled back."},"/api/store/type-aliases/transaction/invalidvalues/":{"n":"InvalidValues","s":"The InvalidValues type describes the invalid Values that have been attempted during a transaction, primarily used so that you can indicate whether the transaction should be rolled back."},"/api/store/type-aliases/transaction/changedvalue/":{"n":"ChangedValue","s":"The ChangedValue type describes a Value that has been changed during a transaction, primarily used so that you can indicate whether the transaction should be rolled back."},"/api/store/type-aliases/transaction/changedvalueids/":{"n":"ChangedValueIds","s":"The ChangedValueIds type describes the Value Ids that were added or removed during a transaction."},"/api/store/type-aliases/transaction/changes/":{"n":"Changes","s":"The Changes type describes the net meaningful changes that were made to a Store during a transaction."},"/api/store/type-aliases/transaction/idaddedorremoved/":{"n":"IdAddedOrRemoved","s":"The IdAddedOrRemoved type describes a change made to an Id in either the tabular or keyed-value part of the Store (or in other TinyBase modules)."},"/api/store/type-aliases/transaction/transactionlog/":{"n":"TransactionLog","s":"The TransactionLog type describes the changes that were made to a Store during a transaction in detail."},"/api/store/type-aliases/development/storelistenerstats/":{"n":"StoreListenerStats","s":"The StoreListenerStats type describes the number of listeners registered with the Store, and can be used for debugging purposes."},"/api/store/":{"n":"store","s":"The store module is the core of the TinyBase project and contains the types, interfaces, and functions to work with Store objects."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/gettables/":{"n":"getTables","s":"The getTables method returns a Tables object containing the entire tabular data of the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/gettablesjson/":{"n":"getTablesJson","s":"The getTablesJson method returns a string serialization of all of the Tables in the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/gettablesschemajson/":{"n":"getTablesSchemaJson","s":"The getTablesSchemaJson method returns a string serialization of the TablesSchema of the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/hastables/":{"n":"hasTables","s":"The hasTables method returns a boolean indicating whether any Table objects exist in the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/hastablesschema/":{"n":"hasTablesSchema","s":"The hasTablesSchema method returns a boolean indicating whether the Store currently has a TablesSchema applied to it."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/gettableids/":{"n":"getTableIds","s":"The getTableIds method returns the Ids of every Table in the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/gettable/":{"n":"getTable","s":"The getTable method returns an object containing the entire data of a single Table in the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/gettablecellids/":{"n":"getTableCellIds","s":"The getTableCellIds method returns the Ids of every Cell used across the whole Table."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/hastable/":{"n":"hasTable","s":"The hasTable method returns a boolean indicating whether a given Table exists in the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/hastablecell/":{"n":"hasTableCell","s":"The hasTableCell method returns a boolean indicating whether a given Cell exists anywhere in a Table, not just in a specific Row."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/getrowids/":{"n":"getRowIds","s":"The getRowIds method returns the Ids of every Row in a given Table."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/getsortedrowids/":{"n":"getSortedRowIds","s":"The getSortedRowIds method returns the Ids of every Row in a given Table, sorted according to the values in a specified Cell."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/getrow/":{"n":"getRow","s":"The getRow method returns an object containing the entire data of a single Row in a given Table."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/getrowcount/":{"n":"getRowCount","s":"The getRowCount method returns the count of the Row objects in a given Table."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/hasrow/":{"n":"hasRow","s":"The hasRow method returns a boolean indicating whether a given Row exists in the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/getcellids/":{"n":"getCellIds","s":"The getCellIds method returns the Ids of every Cell in a given Row in a given Table."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/getcell/":{"n":"getCell","s":"The getCell method returns the value of a single Cell in a given Row, in a given Table."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/hascell/":{"n":"hasCell","s":"The hasCell method returns a boolean indicating whether a given Cell exists in a given Row in a given Table."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/getvalues/":{"n":"getValues","s":"The getValues method returns an object containing the entire set of keyed Values in the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/getvaluesjson/":{"n":"getValuesJson","s":"The getValuesJson method returns a string serialization of all of the keyed Values in the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/getvaluesschemajson/":{"n":"getValuesSchemaJson","s":"The getValuesSchemaJson method returns a string serialization of the ValuesSchema of the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/hasvalues/":{"n":"hasValues","s":"The hasValues method returns a boolean indicating whether any Values exist in the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/hasvaluesschema/":{"n":"hasValuesSchema","s":"The hasValuesSchema method returns a boolean indicating whether the Store currently has a ValuesSchema applied to it."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/getvalue/":{"n":"getValue","s":"The getValue method returns a single keyed Value in the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/getvalueids/":{"n":"getValueIds","s":"The getValueIds method returns the Ids of every Value in a Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/hasvalue/":{"n":"hasValue","s":"The hasValue method returns a boolean indicating whether a given Value exists in the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/getcontent/":{"n":"getContent","s":"The getContent method returns a Tables object and a Values object in an array, representing the entire content of the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/getjson/":{"n":"getJson","s":"The getJson method returns a string serialization of all the Store content: both the Tables and the keyed Values."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/getmergeablecontent/":{"n":"getMergeableContent","s":"The getMergeableContent method returns the full content of a MergeableStore, together with the metadata required to make it mergeable with another."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/getschemajson/":{"n":"getSchemaJson","s":"The getSchemaJson method returns a string serialization of both the TablesSchema and ValuesSchema of the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/getter/ismergeable/":{"n":"isMergeable","s":"The isMergeable method lets you know if the Store is mergeable."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/setter/settables/":{"n":"setTables","s":"The setTables method takes an object and sets the entire tabular data of the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/setter/settablesjson/":{"n":"setTablesJson","s":"The setTablesJson method takes a string serialization of all of the Tables in the Store and attempts to update them to that."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/setter/settablesschema/":{"n":"setTablesSchema","s":"The setTablesSchema method lets you specify the TablesSchema of the tabular part of the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/setter/settable/":{"n":"setTable","s":"The setTable method takes an object and sets the entire data of a single Table in the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/setter/setrow/":{"n":"setRow","s":"The setRow method takes an object and sets the entire data of a single Row in the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/setter/addrow/":{"n":"addRow","s":"The addRow method takes an object and creates a new Row in the Store, returning the unique Id assigned to it."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/setter/setpartialrow/":{"n":"setPartialRow","s":"The setPartialRow method takes an object and sets partial data of a single Row in the Store, leaving other Cell values unaffected."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/setter/setcell/":{"n":"setCell","s":"The setCell method sets the value of a single Cell in the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/setter/setpartialvalues/":{"n":"setPartialValues","s":"The setPartialValues method takes an object and sets its Values in the Store, but leaving existing Values unaffected."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/setter/setvalues/":{"n":"setValues","s":"The setValues method takes an object and sets all the Values in the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/setter/setvaluesjson/":{"n":"setValuesJson","s":"The setValuesJson method takes a string serialization of all of the Values in the Store and attempts to update them to those values."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/setter/setvaluesschema/":{"n":"setValuesSchema","s":"The setValuesSchema method lets you specify the ValuesSchema of the keyed Values part of the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/setter/setvalue/":{"n":"setValue","s":"The setValue method sets a single keyed Value in the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/setter/applychanges/":{"n":"applyChanges","s":"The applyChanges method applies a set of Changes to the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/setter/applymergeablechanges/":{"n":"applyMergeableChanges","s":"The applyMergeableChanges method applies a set of mergeable changes or content to the MergeableStore."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/setter/merge/":{"n":"merge","s":"The merge method is a convenience method that applies the mergeable content from two MergeableStores to each other in order to bring them to the same state."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/setter/setcontent/":{"n":"setContent","s":"The setContent method takes an array of two objects and sets the entire data of the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/setter/setdefaultcontent/":{"n":"setDefaultContent","s":"The setDefaultContent method sets initial content of a MergeableStore."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/setter/setjson/":{"n":"setJson","s":"The setJson method takes a string serialization of all of the Tables and Values in the Store and attempts to update them to those values."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/setter/setmergeablecontent/":{"n":"setMergeableContent","s":"The setMergeableContent method sets the full content of a MergeableStore, together with the metadata required to make it mergeable with another."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/setter/setschema/":{"n":"setSchema","s":"The setSchema method lets you specify the TablesSchema and ValuesSchema of the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/addhastableslistener/":{"n":"addHasTablesListener","s":"The addHasTablesListener method registers a listener function with the Store that will be called when Tables as a whole are added to or removed from the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/addtableslistener/":{"n":"addTablesListener","s":"The addTablesListener method registers a listener function with the Store that will be called whenever data in the Store changes."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/addtableidslistener/":{"n":"addTableIdsListener","s":"The addTableIdsListener method registers a listener function with the Store that will be called whenever the Table Ids in the Store change."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/addhastablecelllistener/":{"n":"addHasTableCellListener","s":"The addHasTableCellListener method registers a listener function with the Store that will be called when a Cell is added to or removed from anywhere in a Table as a whole."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/addhastablelistener/":{"n":"addHasTableListener","s":"The addHasTableListener method registers a listener function with the Store that will be called when a Table is added to or removed from the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/addtablecellidslistener/":{"n":"addTableCellIdsListener","s":"The addTableCellIdsListener method registers a listener function with the Store that will be called whenever the Cell Ids that appear anywhere in a Table change."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/addtablelistener/":{"n":"addTableListener","s":"The addTableListener method registers a listener function with the Store that will be called whenever data in a Table changes."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/addrowidslistener/":{"n":"addRowIdsListener","s":"The addRowIdsListener method registers a listener function with the Store that will be called whenever the Row Ids in a Table change."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/addsortedrowidslistener/":{"n":"addSortedRowIdsListener","s":"The addSortedRowIdsListener method registers a listener function with the Store that will be called whenever sorted (and optionally, paginated) Row Ids in a Table change."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/addhasrowlistener/":{"n":"addHasRowListener","s":"The addHasRowListener method registers a listener function with the Store that will be called when a Row is added to or removed from the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/addrowcountlistener/":{"n":"addRowCountListener","s":"The addRowCountListener method registers a listener function with the Store that will be called whenever the count of Row objects in a Table change."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/addrowlistener/":{"n":"addRowListener","s":"The addRowListener method registers a listener function with the Store that will be called whenever data in a Row changes."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/addcellidslistener/":{"n":"addCellIdsListener","s":"The addCellIdsListener method registers a listener function with the Store that will be called whenever the Cell Ids in a Row change."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/addcelllistener/":{"n":"addCellListener","s":"The addCellListener method registers a listener function with the Store that will be called whenever data in a Cell changes."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/addhascelllistener/":{"n":"addHasCellListener","s":"The addHasCellListener method registers a listener function with the Store that will be called when a Cell is added to or removed from the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/addinvalidcelllistener/":{"n":"addInvalidCellListener","s":"The addInvalidCellListener method registers a listener function with the Store that will be called whenever invalid data was attempted to be written to a Cell."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/addhasvalueslistener/":{"n":"addHasValuesListener","s":"The addHasValuesListener method registers a listener function with the Store that will be called when Values as a whole are added to or removed from the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/addvalueslistener/":{"n":"addValuesListener","s":"The addValuesListener method registers a listener function with the Store that will be called whenever the Values change."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/addhasvaluelistener/":{"n":"addHasValueListener","s":"The addHasValueListener method registers a listener function with the Store that will be called when a Value is added to or removed from the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/addinvalidvaluelistener/":{"n":"addInvalidValueListener","s":"The addInvalidValueListener method registers a listener function with the Store that will be called whenever invalid data was attempted to be written to a Value."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/addvalueidslistener/":{"n":"addValueIdsListener","s":"The addValueIdsListener method registers a listener function with the Store that will be called whenever the Value Ids in a Store change."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/addvaluelistener/":{"n":"addValueListener","s":"The addValueListener method registers a listener function with the Store that will be called whenever data in a Value changes."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/adddidfinishtransactionlistener/":{"n":"addDidFinishTransactionListener","s":"The addDidFinishTransactionListener method registers a listener function with the Store that will be called just after other non-mutating listeners are called at the end of the transaction."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/addstarttransactionlistener/":{"n":"addStartTransactionListener","s":"The addStartTransactionListener method registers a listener function with the Store that will be called at the start of a transaction."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/addwillfinishtransactionlistener/":{"n":"addWillFinishTransactionListener","s":"The addWillFinishTransactionListener method registers a listener function with the Store that will be called just before other non-mutating listeners are called at the end of the transaction."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/calllistener/":{"n":"callListener","s":"The callListener method provides a way for you to manually provoke a listener to be called, even if the underlying data hasn't changed."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/iterator/foreachtable/":{"n":"forEachTable","s":"The forEachTable method takes a function that it will then call for each Table in the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/iterator/foreachtablecell/":{"n":"forEachTableCell","s":"The forEachTableCell method takes a function that it will then call for each Cell used across the whole Table."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/iterator/foreachrow/":{"n":"forEachRow","s":"The forEachRow method takes a function that it will then call for each Row in a specified Table."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/iterator/foreachcell/":{"n":"forEachCell","s":"The forEachCell method takes a function that it will then call for each Cell in a specified Row."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/iterator/foreachvalue/":{"n":"forEachValue","s":"The forEachValue method takes a function that it will then call for each Value in a Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/syncing/getmergeabletablediff/":{"n":"getMergeableTableDiff","s":"The getMergeableTableDiff method returns information about new and differing Table objects of a MergeableStore relative to another."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/syncing/getmergeabletablehashes/":{"n":"getMergeableTableHashes","s":"The getMergeableTableHashes method returns hashes for the Table objects in a MergeableStore."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/syncing/getmergeablerowdiff/":{"n":"getMergeableRowDiff","s":"The getMergeableRowDiff method returns information about new and differing Row objects of a MergeableStore relative to another."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/syncing/getmergeablerowhashes/":{"n":"getMergeableRowHashes","s":"The getMergeableRowHashes method returns hashes for Row objects in a MergeableStore."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/syncing/getmergeablecelldiff/":{"n":"getMergeableCellDiff","s":"The getMergeableCellDiff method returns information about new and differing Cell objects of a MergeableStore relative to another."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/syncing/getmergeablecellhashes/":{"n":"getMergeableCellHashes","s":"The getMergeableCellHashes method returns hashes for Cell objects in a MergeableStore."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/syncing/getmergeablevaluediff/":{"n":"getMergeableValueDiff","s":"The getMergeableValueDiff method returns information about new and differing Value objects of a MergeableStore relative to another."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/syncing/getmergeablevaluehashes/":{"n":"getMergeableValueHashes","s":"The getMergeableValueHashes method returns hashes for the Value objects in a MergeableStore."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/syncing/getmergeablecontenthashes/":{"n":"getMergeableContentHashes","s":"The getMergeableContentHashes method returns hashes for the full content of a MergeableStore."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/transaction/finishtransaction/":{"n":"finishTransaction","s":"The finishTransaction method allows you to explicitly finish a transaction that has made multiple mutations to the Store, triggering all calls to the relevant listeners."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/transaction/gettransactionchanges/":{"n":"getTransactionChanges","s":"The getTransactionChanges method returns the net meaningful changes that have been made to a Store during a transaction."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/transaction/gettransactionlog/":{"n":"getTransactionLog","s":"The getTransactionLog method returns the changes that were made to a Store during a transaction in more detail, including invalid changes, and what previous values were."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/transaction/gettransactionmergeablechanges/":{"n":"getTransactionMergeableChanges","s":"The getTransactionMergeableChanges method returns the net meaningful changes that have been made to a MergeableStore during a transaction."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/transaction/starttransaction/":{"n":"startTransaction","s":"The startTransaction method allows you to explicitly start a transaction that will make multiple mutations to the Store, buffering all calls to the relevant listeners until it completes when you call the finishTransaction method."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/transaction/transaction/":{"n":"transaction","s":"The transaction method takes a function that makes multiple mutations to the Store, buffering all calls to the relevant listeners until it completes."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/deleter/deltables/":{"n":"delTables","s":"The delTables method lets you remove all of the data in a Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/deleter/deltablesschema/":{"n":"delTablesSchema","s":"The delTablesSchema method lets you remove the TablesSchema of the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/deleter/deltable/":{"n":"delTable","s":"The delTable method lets you remove a single Table from the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/deleter/delrow/":{"n":"delRow","s":"The delRow method lets you remove a single Row from a Table."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/deleter/delcell/":{"n":"delCell","s":"The delCell method lets you remove a single Cell from a Row."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/deleter/delvalues/":{"n":"delValues","s":"The delValues method lets you remove all the Values from a Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/deleter/delvaluesschema/":{"n":"delValuesSchema","s":"The delValuesSchema method lets you remove the ValuesSchema of the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/deleter/delvalue/":{"n":"delValue","s":"The delValue method lets you remove a single Value from a Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/deleter/delschema/":{"n":"delSchema","s":"The delSchema method lets you remove both the TablesSchema and ValuesSchema of the Store."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/methods/development/getlistenerstats/":{"n":"getListenerStats","s":"The getListenerStats method provides a set of statistics about the listeners registered with the Store, and is used for debugging purposes."},"/api/mergeable-store/interfaces/mergeable/mergeablestore/":{"n":"MergeableStore","s":"The MergeableStore type represents a Store that carries with it sufficient metadata to be able to be merged with another MergeableStore with deterministic results."},"/api/mergeable-store/functions/creation/createmergeablestore/":{"n":"createMergeableStore","s":"The createMergeableStore function creates a MergeableStore, and is the main entry point into the mergeable-store module."},"/api/mergeable-store/type-aliases/mergeable/mergeablechanges/":{"n":"MergeableChanges","s":"The MergeableChanges type represents changes to the content of a MergeableStore and the metadata about that content) required to merge it with another."},"/api/mergeable-store/type-aliases/mergeable/mergeablecontent/":{"n":"MergeableContent","s":"The MergeableContent type represents the content of a MergeableStore and the metadata about that content) required to merge it with another."},"/api/mergeable-store/type-aliases/stamps/tablesstamp/":{"n":"TablesStamp","s":"The TablesStamp type is used as metadata to decide how to merge two different sets of Tables together."},"/api/mergeable-store/type-aliases/stamps/tablestamp/":{"n":"TableStamp","s":"The TableStamp type is used as metadata to decide how to merge two different Table objects together."},"/api/mergeable-store/type-aliases/stamps/rowstamp/":{"n":"RowStamp","s":"The RowStamp type is used as metadata to decide how to merge two different Row objects together."},"/api/mergeable-store/type-aliases/stamps/cellstamp/":{"n":"CellStamp","s":"The CellStamp type is used as metadata to decide how to merge two different Cell objects together."},"/api/mergeable-store/type-aliases/stamps/valuesstamp/":{"n":"ValuesStamp","s":"The ValuesStamp type is used as metadata to decide how to merge two different sets of Values together."},"/api/mergeable-store/type-aliases/stamps/valuestamp/":{"n":"ValueStamp","s":"The ValueStamp type is used as metadata to decide how to merge two different Value objects together."},"/api/mergeable-store/type-aliases/stamps/stamp/":{"n":"Stamp","s":"The Stamp type is used as metadata to decide how to merge two different MergeableStore objects together."},"/api/mergeable-store/type-aliases/syncing/tablehashes/":{"n":"TableHashes","s":"The TableHashes type is used to quickly compare the content of two sets of Table objects."},"/api/mergeable-store/type-aliases/syncing/rowhashes/":{"n":"RowHashes","s":"The RowHashes type is used to quickly compare the content of two sets of Row objects."},"/api/mergeable-store/type-aliases/syncing/cellhashes/":{"n":"CellHashes","s":"The CellHashes type is used to quickly compare the content of two sets of Cell objects."},"/api/mergeable-store/type-aliases/syncing/valuehashes/":{"n":"ValueHashes","s":"The ValueHashes type is used to quickly compare the content of two sets of Value objects."},"/api/mergeable-store/type-aliases/syncing/contenthashes/":{"n":"ContentHashes","s":"The ContentHashes type is used to quickly compare the content of two MergeableStore objects."},"/api/mergeable-store/":{"n":"mergeable-store","s":"The mergeable-store module contains the types, interfaces, and functions to work with MergeableStore objects, which provide merge and synchronization functionality."},"/api/metrics/interfaces/metrics/metrics/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store that is backing this Metrics object."},"/api/metrics/interfaces/metrics/metrics/methods/getter/gettableid/":{"n":"getTableId","s":"The getTableId method returns the Id of the underlying Table that is backing a Metric."},"/api/metrics/interfaces/metrics/metrics/methods/getter/getmetric/":{"n":"getMetric","s":"The getMetric method gets the current value of a Metric."},"/api/metrics/interfaces/metrics/metrics/methods/getter/getmetricids/":{"n":"getMetricIds","s":"The getMetricIds method returns an array of the Metric Ids registered with this Metrics object."},"/api/metrics/interfaces/metrics/metrics/methods/getter/hasmetric/":{"n":"hasMetric","s":"The hasMetric method returns a boolean indicating whether a given Metric exists in the Metrics object, and has a value."},"/api/metrics/interfaces/metrics/metrics/methods/listener/addmetricidslistener/":{"n":"addMetricIdsListener","s":"The addMetricIdsListener method registers a listener function with the Metrics object that will be called whenever a Metric definition is added or removed."},"/api/metrics/interfaces/metrics/metrics/methods/listener/addmetriclistener/":{"n":"addMetricListener","s":"The addMetricListener method registers a listener function with the Metrics object that will be called whenever the value of a specified Metric changes."},"/api/metrics/interfaces/metrics/metrics/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Metrics object."},"/api/metrics/interfaces/metrics/metrics/methods/configuration/delmetricdefinition/":{"n":"delMetricDefinition","s":"The delMetricDefinition method removes an existing Metric definition."},"/api/metrics/interfaces/metrics/metrics/methods/configuration/setmetricdefinition/":{"n":"setMetricDefinition","s":"The setMetricDefinition method lets you set the definition of a Metric."},"/api/metrics/interfaces/metrics/metrics/methods/iterator/foreachmetric/":{"n":"forEachMetric","s":"The forEachMetric method takes a function that it will then call for each Metric in the Metrics object."},"/api/metrics/interfaces/metrics/metrics/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Metrics object is no longer used."},"/api/metrics/interfaces/metrics/metrics/methods/development/getlistenerstats/":{"n":"getListenerStats","s":"The getListenerStats method provides a set of statistics about the listeners registered with the Metrics object, and is used for debugging purposes."},"/api/metrics/interfaces/metrics/metrics/":{"n":"Metrics","s":"A Metrics object lets you define, query, and listen to, aggregations of Cell values within a Table in a Store."},"/api/metrics/functions/creation/createmetrics/":{"n":"createMetrics","s":"The createMetrics function creates a Metrics object, and is the main entry point into the metrics module."},"/api/metrics/type-aliases/listener/metricidslistener/":{"n":"MetricIdsListener","s":"The MetricIdsListener type describes a function that is used to listen to Metric definitions being added or removed."},"/api/metrics/type-aliases/listener/metriclistener/":{"n":"MetricListener","s":"The MetricListener type describes a function that is used to listen to changes to a Metric."},"/api/metrics/type-aliases/aggregators/metricaggregate/":{"n":"MetricAggregate","s":"The MetricAggregate type describes a custom function that takes an array of numbers and returns an aggregate that is used as a Metric."},"/api/metrics/type-aliases/aggregators/metricaggregateadd/":{"n":"MetricAggregateAdd","s":"The MetricAggregateAdd type describes a function that can be used to optimize a custom MetricAggregate by providing a shortcut for when a single value is added to the input values."},"/api/metrics/type-aliases/aggregators/metricaggregateremove/":{"n":"MetricAggregateRemove","s":"The MetricAggregateRemove type describes a function that can be used to optimize a custom MetricAggregate by providing a shortcut for when a single value is removed from the input values."},"/api/metrics/type-aliases/aggregators/metricaggregatereplace/":{"n":"MetricAggregateReplace","s":"The MetricAggregateReplace type describes a function that can be used to optimize a custom MetricAggregate by providing a shortcut for when a single value in the input values is replaced with another."},"/api/metrics/type-aliases/callback/metriccallback/":{"n":"MetricCallback","s":"The MetricCallback type describes a function that takes a Metric's Id and a callback to loop over each Row within it."},"/api/metrics/type-aliases/metric/metric/":{"n":"Metric","s":"The Metric type is simply an alias, but represents a number formed by aggregating multiple other numbers together."},"/api/metrics/type-aliases/development/metricslistenerstats/":{"n":"MetricsListenerStats","s":"The MetricsListenerStats type describes the number of listeners registered with the Metrics object, and can be used for debugging purposes."},"/api/metrics/":{"n":"metrics","s":"The metrics module of the TinyBase project provides the ability to create and track metrics and aggregates of the data in Store objects."},"/api/indexes/interfaces/indexes/indexes/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store that is backing this Indexes object."},"/api/indexes/interfaces/indexes/indexes/methods/getter/gettableid/":{"n":"getTableId","s":"The getTableId method returns the Id of the underlying Table that is backing an Index."},"/api/indexes/interfaces/indexes/indexes/methods/getter/getslicerowids/":{"n":"getSliceRowIds","s":"The getSliceRowIds method gets the list of Row Ids in a given Slice, within a given Index."},"/api/indexes/interfaces/indexes/indexes/methods/getter/getindexids/":{"n":"getIndexIds","s":"The getIndexIds method returns an array of the Index Ids registered with this Indexes object."},"/api/indexes/interfaces/indexes/indexes/methods/getter/getsliceids/":{"n":"getSliceIds","s":"The getSliceIds method gets the list of Slice Ids in an Index."},"/api/indexes/interfaces/indexes/indexes/methods/getter/hasindex/":{"n":"hasIndex","s":"The hasIndex method returns a boolean indicating whether a given Index exists in the Indexes object."},"/api/indexes/interfaces/indexes/indexes/methods/getter/hasslice/":{"n":"hasSlice","s":"The hasSlice method returns a boolean indicating whether a given Slice exists in the Indexes object."},"/api/indexes/interfaces/indexes/indexes/methods/listener/addslicerowidslistener/":{"n":"addSliceRowIdsListener","s":"The addSliceRowIdsListener method registers a listener function with the Indexes object that will be called whenever the Row Ids in a Slice change."},"/api/indexes/interfaces/indexes/indexes/methods/listener/addindexidslistener/":{"n":"addIndexIdsListener","s":"The addIndexIdsListener method registers a listener function with the Indexes object that will be called whenever an Index definition is added or removed."},"/api/indexes/interfaces/indexes/indexes/methods/listener/addsliceidslistener/":{"n":"addSliceIdsListener","s":"The addSliceIdsListener method registers a listener function with the Indexes object that will be called whenever the Slice Ids in an Index change."},"/api/indexes/interfaces/indexes/indexes/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Indexes object."},"/api/indexes/interfaces/indexes/indexes/methods/configuration/delindexdefinition/":{"n":"delIndexDefinition","s":"The delIndexDefinition method removes an existing Index definition."},"/api/indexes/interfaces/indexes/indexes/methods/configuration/setindexdefinition/":{"n":"setIndexDefinition","s":"The setIndexDefinition method lets you set the definition of an Index."},"/api/indexes/interfaces/indexes/indexes/methods/iterator/foreachindex/":{"n":"forEachIndex","s":"The forEachIndex method takes a function that it will then call for each Index in a specified Indexes object."},"/api/indexes/interfaces/indexes/indexes/methods/iterator/foreachslice/":{"n":"forEachSlice","s":"The forEachSlice method takes a function that it will then call for each Slice in a specified Index."},"/api/indexes/interfaces/indexes/indexes/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Indexes object is no longer used."},"/api/indexes/interfaces/indexes/indexes/methods/development/getlistenerstats/":{"n":"getListenerStats","s":"The getListenerStats method provides a set of statistics about the listeners registered with the Indexes object, and is used for debugging purposes."},"/api/indexes/interfaces/indexes/indexes/":{"n":"Indexes","s":"An Indexes object lets you look up all the Row objects in a Table that have a certain Cell value."},"/api/indexes/functions/creation/createindexes/":{"n":"createIndexes","s":"The createIndexes function creates an Indexes object, and is the main entry point into the indexes module."},"/api/indexes/type-aliases/listener/slicerowidslistener/":{"n":"SliceRowIdsListener","s":"The SliceRowIdsListener type describes a function that is used to listen to changes to the Row Ids in a Slice."},"/api/indexes/type-aliases/listener/indexidslistener/":{"n":"IndexIdsListener","s":"The IndexIdsListener type describes a function that is used to listen to Index definitions being added or removed."},"/api/indexes/type-aliases/listener/sliceidslistener/":{"n":"SliceIdsListener","s":"The SliceIdsListener type describes a function that is used to listen to changes to the Slice Ids in an Index."},"/api/indexes/type-aliases/callback/indexcallback/":{"n":"IndexCallback","s":"The IndexCallback type describes a function that takes an Index's Id and a callback to loop over each Slice within it."},"/api/indexes/type-aliases/callback/slicecallback/":{"n":"SliceCallback","s":"The SliceCallback type describes a function that takes a Slice's Id and a callback to loop over each Row within it."},"/api/indexes/type-aliases/concept/index/":{"n":"Index","s":"The Index type represents the concept of a map of Slice objects, keyed by Id."},"/api/indexes/type-aliases/concept/slice/":{"n":"Slice","s":"The Slice type represents the concept of a set of Row objects that comprise part of an Index."},"/api/indexes/type-aliases/development/indexeslistenerstats/":{"n":"IndexesListenerStats","s":"The IndexesListenerStats type describes the number of listeners registered with the Indexes object, and can be used for debugging purposes."},"/api/indexes/":{"n":"indexes","s":"The indexes module of the TinyBase project provides the ability to create and track indexes of the data in Store objects."},"/api/relationships/interfaces/relationships/relationships/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store that is backing this Relationships object."},"/api/relationships/interfaces/relationships/relationships/methods/getter/getlocaltableid/":{"n":"getLocalTableId","s":"The getLocalTableId method returns the Id of the underlying local Table that is used in the Relationship."},"/api/relationships/interfaces/relationships/relationships/methods/getter/getremotetableid/":{"n":"getRemoteTableId","s":"The getRemoteTableId method returns the Id of the underlying remote Table that is used in the Relationship."},"/api/relationships/interfaces/relationships/relationships/methods/getter/getlinkedrowids/":{"n":"getLinkedRowIds","s":"The getLinkedRowIds method gets the linked Row Ids for a given Row in a linked list Relationship."},"/api/relationships/interfaces/relationships/relationships/methods/getter/getlocalrowids/":{"n":"getLocalRowIds","s":"The getLocalRowIds method gets the local Row Ids for a given remote Row in a Relationship."},"/api/relationships/interfaces/relationships/relationships/methods/getter/getremoterowid/":{"n":"getRemoteRowId","s":"The getRemoteRowId method gets the remote Row Id for a given local Row in a Relationship."},"/api/relationships/interfaces/relationships/relationships/methods/getter/getrelationshipids/":{"n":"getRelationshipIds","s":"The getRelationshipIds method returns an array of the Relationship Ids registered with this Relationships object."},"/api/relationships/interfaces/relationships/relationships/methods/getter/hasrelationship/":{"n":"hasRelationship","s":"The hasRelationship method returns a boolean indicating whether a given Relationship exists in the Relationships object."},"/api/relationships/interfaces/relationships/relationships/methods/listener/addlinkedrowidslistener/":{"n":"addLinkedRowIdsListener","s":"The addLinkedRowIdsListener method registers a listener function with the Relationships object that will be called whenever the linked Row Ids in a linked list Relationship change."},"/api/relationships/interfaces/relationships/relationships/methods/listener/addlocalrowidslistener/":{"n":"addLocalRowIdsListener","s":"The addLocalRowIdsListener method registers a listener function with the Relationships object that will be called whenever the local Row Ids in a Relationship change."},"/api/relationships/interfaces/relationships/relationships/methods/listener/addremoterowidlistener/":{"n":"addRemoteRowIdListener","s":"The addRemoteRowIdListener method registers a listener function with the Relationships object that will be called whenever a remote Row Id in a Relationship changes."},"/api/relationships/interfaces/relationships/relationships/methods/listener/addrelationshipidslistener/":{"n":"addRelationshipIdsListener","s":"The addRelationshipIdsListener method registers a listener function with the Relationships object that will be called whenever a Relationship definition is added or removed."},"/api/relationships/interfaces/relationships/relationships/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Relationships object."},"/api/relationships/interfaces/relationships/relationships/methods/configuration/delrelationshipdefinition/":{"n":"delRelationshipDefinition","s":"The delRelationshipDefinition method removes an existing Relationship definition."},"/api/relationships/interfaces/relationships/relationships/methods/configuration/setrelationshipdefinition/":{"n":"setRelationshipDefinition","s":"The setRelationshipDefinition method lets you set the definition of a Relationship."},"/api/relationships/interfaces/relationships/relationships/methods/iterator/foreachrelationship/":{"n":"forEachRelationship","s":"The forEachRelationship method takes a function that it will then call for each Relationship in a specified Relationships object."},"/api/relationships/interfaces/relationships/relationships/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Relationships object is no longer used."},"/api/relationships/interfaces/relationships/relationships/methods/development/getlistenerstats/":{"n":"getListenerStats","s":"The getListenerStats method provides a set of statistics about the listeners registered with the Relationships object, and is used for debugging purposes."},"/api/relationships/interfaces/relationships/relationships/":{"n":"Relationships","s":"A Relationships object lets you associate a Row in a one Table with the Id of a Row in another Table."},"/api/relationships/functions/creation/createrelationships/":{"n":"createRelationships","s":"The createRelationships function creates a Relationships object, and is the main entry point into the relationships module."},"/api/relationships/type-aliases/listener/linkedrowidslistener/":{"n":"LinkedRowIdsListener","s":"The LinkedRowIdsListener type describes a function that is used to listen to changes to the local Row Id ends of a Relationship."},"/api/relationships/type-aliases/listener/localrowidslistener/":{"n":"LocalRowIdsListener","s":"The LocalRowIdsListener type describes a function that is used to listen to changes to the local Row Id ends of a Relationship."},"/api/relationships/type-aliases/listener/remoterowidlistener/":{"n":"RemoteRowIdListener","s":"The RemoteRowIdListener type describes a function that is used to listen to changes to the remote Row Id end of a Relationship."},"/api/relationships/type-aliases/listener/relationshipidslistener/":{"n":"RelationshipIdsListener","s":"The RelationshipIdsListener type describes a function that is used to listen to Relationship definitions being added or removed."},"/api/relationships/type-aliases/callback/relationshipcallback/":{"n":"RelationshipCallback","s":"The RelationshipCallback type describes a function that takes a Relationship's Id and a callback to loop over each local Row within it."},"/api/relationships/type-aliases/concept/relationship/":{"n":"Relationship","s":"The Relationship type represents the concept of a map that connects one Row object to another, often in another Table."},"/api/relationships/type-aliases/development/relationshipslistenerstats/":{"n":"RelationshipsListenerStats","s":"The RelationshipsListenerStats type describes the number of listeners registered with the Relationships object, and can be used for debugging purposes."},"/api/relationships/":{"n":"relationships","s":"The relationships module of the TinyBase project provides the ability to create and track relationships between the data in Store objects."},"/api/queries/interfaces/queries/queries/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store that is backing this Queries object."},"/api/queries/interfaces/queries/queries/methods/getter/gettableid/":{"n":"getTableId","s":"The getTableId method returns the Id of the underlying Table that is backing a query."},"/api/queries/interfaces/queries/queries/methods/getter/getqueryids/":{"n":"getQueryIds","s":"The getQueryIds method returns an array of the query Ids registered with this Queries object."},"/api/queries/interfaces/queries/queries/methods/getter/hasquery/":{"n":"hasQuery","s":"The hasQuery method returns a boolean indicating whether a given query exists in the Queries object."},"/api/queries/interfaces/queries/queries/methods/result/getresulttable/":{"n":"getResultTable","s":"The getResultTable method returns an object containing the entire data of the ResultTable of the given query."},"/api/queries/interfaces/queries/queries/methods/result/getresulttablecellids/":{"n":"getResultTableCellIds","s":"The getResultTableCellIds method returns the Ids of every ResultCell used across the ResultTable of the given query."},"/api/queries/interfaces/queries/queries/methods/result/hasresulttable/":{"n":"hasResultTable","s":"The hasResultTable method returns a boolean indicating whether a given ResultTable exists."},"/api/queries/interfaces/queries/queries/methods/result/getresultrowids/":{"n":"getResultRowIds","s":"The getResultRowIds method returns the Ids of every ResultRow in the ResultTable of the given query."},"/api/queries/interfaces/queries/queries/methods/result/getresultsortedrowids/":{"n":"getResultSortedRowIds","s":"The getResultSortedRowIds method returns the Ids of every ResultRow in the ResultTable of the given query, sorted according to the values in a specified ResultCell."},"/api/queries/interfaces/queries/queries/methods/result/getresultrow/":{"n":"getResultRow","s":"The getResultRow method returns an object containing the entire data of a single ResultRow in the ResultTable of the given query."},"/api/queries/interfaces/queries/queries/methods/result/getresultrowcount/":{"n":"getResultRowCount","s":"The getResultRowCount method returns the count of the ResultRow objects in the ResultTable of the given query."},"/api/queries/interfaces/queries/queries/methods/result/hasresultrow/":{"n":"hasResultRow","s":"The hasResultRow method returns a boolean indicating whether a given ResultRow exists."},"/api/queries/interfaces/queries/queries/methods/result/getresultcellids/":{"n":"getResultCellIds","s":"The getResultCellIds method returns the Ids of every ResultCell in a given ResultRow, in the ResultTable of the given query."},"/api/queries/interfaces/queries/queries/methods/result/getresultcell/":{"n":"getResultCell","s":"The getResultCell method returns the value of a single ResultCell in a given ResultRow, in the ResultTable of the given query."},"/api/queries/interfaces/queries/queries/methods/result/hasresultcell/":{"n":"hasResultCell","s":"The hasResultCell method returns a boolean indicating whether a given ResultCell exists."},"/api/queries/interfaces/queries/queries/methods/listener/addresulttablecellidslistener/":{"n":"addResultTableCellIdsListener","s":"The addResultTableCellIdsListener method registers a listener function with the Queries object that will be called whenever the Cell Ids that appear anywhere in a ResultTable change."},"/api/queries/interfaces/queries/queries/methods/listener/addresulttablelistener/":{"n":"addResultTableListener","s":"The addResultTableListener method registers a listener function with the Queries object that will be called whenever data in a ResultTable changes."},"/api/queries/interfaces/queries/queries/methods/listener/addresultrowidslistener/":{"n":"addResultRowIdsListener","s":"The addResultRowIdsListener method registers a listener function with the Queries object that will be called whenever the ResultRow Ids in a ResultTable change."},"/api/queries/interfaces/queries/queries/methods/listener/addresultsortedrowidslistener/":{"n":"addResultSortedRowIdsListener","s":"The addResultSortedRowIdsListener method registers a listener function with the Queries object that will be called whenever sorted (and optionally, paginated) ResultRow Ids in a ResultTable change."},"/api/queries/interfaces/queries/queries/methods/listener/addresultrowcountlistener/":{"n":"addResultRowCountListener","s":"The addResultRowCountListener method registers a listener function with the Queries object that will be called whenever the count of ResultRow objects in a ResultTable changes."},"/api/queries/interfaces/queries/queries/methods/listener/addresultrowlistener/":{"n":"addResultRowListener","s":"The addResultRowListener method registers a listener function with the Queries object that will be called whenever data in a ResultRow changes."},"/api/queries/interfaces/queries/queries/methods/listener/addresultcellidslistener/":{"n":"addResultCellIdsListener","s":"The addResultCellIdsListener method registers a listener function with the Queries object that will be called whenever the ResultCell Ids in a ResultRow change."},"/api/queries/interfaces/queries/queries/methods/listener/addresultcelllistener/":{"n":"addResultCellListener","s":"The addResultCellListener method registers a listener function with the Queries object that will be called whenever data in a ResultCell changes."},"/api/queries/interfaces/queries/queries/methods/listener/addqueryidslistener/":{"n":"addQueryIdsListener","s":"The addQueryIdsListener method registers a listener function with the Queries object that will be called whenever an Query definition is added or removed."},"/api/queries/interfaces/queries/queries/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Queries object."},"/api/queries/interfaces/queries/queries/methods/configuration/delquerydefinition/":{"n":"delQueryDefinition","s":"The delQueryDefinition method removes an existing query definition."},"/api/queries/interfaces/queries/queries/methods/configuration/setquerydefinition/":{"n":"setQueryDefinition","s":"The setQueryDefinition method lets you set the definition of a query."},"/api/queries/interfaces/queries/queries/methods/iterator/foreachresulttable/":{"n":"forEachResultTable","s":"The forEachResultTable method takes a function that it will then call for each ResultTable in the Queries object."},"/api/queries/interfaces/queries/queries/methods/iterator/foreachresultrow/":{"n":"forEachResultRow","s":"The forEachResultRow method takes a function that it will then call for each ResultRow in the ResultTable of a query."},"/api/queries/interfaces/queries/queries/methods/iterator/foreachresultcell/":{"n":"forEachResultCell","s":"The forEachResultCell method takes a function that it will then call for each ResultCell in the ResultRow of a query."},"/api/queries/interfaces/queries/queries/methods/iterator/foreachquery/":{"n":"forEachQuery","s":"The forEachQuery method takes a function that it will then call for each Query in the Queries object."},"/api/queries/interfaces/queries/queries/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Queries object is no longer used."},"/api/queries/interfaces/queries/queries/methods/development/getlistenerstats/":{"n":"getListenerStats","s":"The getListenerStats method provides a set of statistics about the listeners registered with the Queries object, and is used for debugging purposes."},"/api/queries/interfaces/queries/queries/":{"n":"Queries","s":"A Queries object lets you create and track queries of the data in Store objects."},"/api/queries/functions/creation/createqueries/":{"n":"createQueries","s":"The createQueries function creates a Queries object, and is the main entry point into the queries module."},"/api/queries/type-aliases/definition/group/":{"n":"Group","s":"The Group type describes a function that lets you specify that the values of a Cell in multiple ResultRows should be aggregated together."},"/api/queries/type-aliases/definition/groupedas/":{"n":"GroupedAs","s":"The GroupedAs type describes an object returned from calling a Group function so that the grouped Cell Id can be optionally aliased."},"/api/queries/type-aliases/definition/having/":{"n":"Having","s":"The Having type describes a function that lets you specify conditions to filter results, based on the grouped Cells resulting from a Group clause."},"/api/queries/type-aliases/definition/join/":{"n":"Join","s":"The Join type describes a function that lets you specify a Cell or calculated value to join the main query Table to other Tables, by their Row Id."},"/api/queries/type-aliases/definition/joinedas/":{"n":"JoinedAs","s":"The JoinedAs type describes an object returned from calling a Join function so that the joined Table Id can be optionally aliased."},"/api/queries/type-aliases/definition/select/":{"n":"Select","s":"The Select type describes a function that lets you specify a Cell or calculated value for including into the query's result."},"/api/queries/type-aliases/definition/selectedas/":{"n":"SelectedAs","s":"The SelectedAs type describes an object returned from calling a Select function so that the selected Cell Id can be optionally aliased."},"/api/queries/type-aliases/definition/where/":{"n":"Where","s":"The Where type describes a function that lets you specify conditions to filter results, based on the underlying Cells of the root or joined Tables."},"/api/queries/type-aliases/result/resulttable/":{"n":"ResultTable","s":"The ResultTable type is the data structure representing the results of a query."},"/api/queries/type-aliases/result/resultrow/":{"n":"ResultRow","s":"The ResultRow type is the data structure representing a single row in the results of a query."},"/api/queries/type-aliases/result/resultcell/":{"n":"ResultCell","s":"The ResultCell type is the data structure representing a single cell in the results of a query."},"/api/queries/type-aliases/result/resultcellorundefined/":{"n":"ResultCellOrUndefined","s":"The ResultCellOrUndefined type is the data structure representing a single cell in the results of a query, or the value `undefined`."},"/api/queries/type-aliases/listener/resulttablecellidslistener/":{"n":"ResultTableCellIdsListener","s":"The ResultTableCellIdsListener type describes a function that is used to listen to changes to the Cell Ids that appear anywhere in a query's ResultTable."},"/api/queries/type-aliases/listener/resulttablelistener/":{"n":"ResultTableListener","s":"The ResultTableListener type describes a function that is used to listen to changes to a query's ResultTable."},"/api/queries/type-aliases/listener/resultrowidslistener/":{"n":"ResultRowIdsListener","s":"The ResultRowIdsListener type describes a function that is used to listen to changes to the ResultRow Ids in a query's ResultTable."},"/api/queries/type-aliases/listener/resultsortedrowidslistener/":{"n":"ResultSortedRowIdsListener","s":"The ResultSortedRowIdsListener type describes a function that is used to listen to changes to the sorted ResultRow Ids in a query's ResultTable."},"/api/queries/type-aliases/listener/resultrowcountlistener/":{"n":"ResultRowCountListener","s":"The ResultRowCountListener type describes a function that is used to listen to changes to the number of ResultRow objects in a query's ResultTable."},"/api/queries/type-aliases/listener/resultrowlistener/":{"n":"ResultRowListener","s":"The ResultRowListener type describes a function that is used to listen to changes to a ResultRow in a query's ResultTable."},"/api/queries/type-aliases/listener/resultcellidslistener/":{"n":"ResultCellIdsListener","s":"The ResultCellIdsListener type describes a function that is used to listen to changes to the ResultCell Ids in a ResultRow in a query's ResultTable."},"/api/queries/type-aliases/listener/getresultcellchange/":{"n":"GetResultCellChange","s":"The GetResultCellChange type describes a function that returns information about any ResultCell's changes during a transaction."},"/api/queries/type-aliases/listener/resultcellchange/":{"n":"ResultCellChange","s":"The ResultCellChange type describes a ResultCell's changes during a transaction."},"/api/queries/type-aliases/listener/resultcelllistener/":{"n":"ResultCellListener","s":"The ResultCellListener type describes a function that is used to listen to changes to a ResultCell in a query's ResultTable."},"/api/queries/type-aliases/listener/queryidslistener/":{"n":"QueryIdsListener","s":"The QueryIdsListener type describes a function that is used to listen to Query definitions being added or removed."},"/api/queries/type-aliases/aggregators/aggregate/":{"n":"Aggregate","s":"The Aggregate type describes a custom function that takes an array of Cell values and returns an aggregate of them."},"/api/queries/type-aliases/aggregators/aggregateadd/":{"n":"AggregateAdd","s":"The AggregateAdd type describes a function that can be used to optimize a custom Aggregate by providing a shortcut for when a single value is added to the input values."},"/api/queries/type-aliases/aggregators/aggregateremove/":{"n":"AggregateRemove","s":"The AggregateRemove type describes a function that can be used to optimize a custom Aggregate by providing a shortcut for when a single value is removed from the input values."},"/api/queries/type-aliases/aggregators/aggregatereplace/":{"n":"AggregateReplace","s":"The AggregateReplace type describes a function that can be used to optimize a custom Aggregate by providing a shortcut for when a single value in the input values is replaced with another."},"/api/queries/type-aliases/callback/gettablecell/":{"n":"GetTableCell","s":"The GetTableCell type describes a function that takes a Id and returns the Cell value for a particular Row, optionally in a joined Table."},"/api/queries/type-aliases/callback/resulttablecallback/":{"n":"ResultTableCallback","s":"The ResultTableCallback type describes a function that takes a ResultTable's Id and a callback to loop over each ResultRow within it."},"/api/queries/type-aliases/callback/resultrowcallback/":{"n":"ResultRowCallback","s":"The ResultRowCallback type describes a function that takes a ResultRow's Id and a callback to loop over each ResultCell within it."},"/api/queries/type-aliases/callback/resultcellcallback/":{"n":"ResultCellCallback","s":"The ResultCellCallback type describes a function that takes a ResultCell's Id and its value."},"/api/queries/type-aliases/callback/querycallback/":{"n":"QueryCallback","s":"The QueryCallback type describes a function that takes a query's Id."},"/api/queries/type-aliases/development/querieslistenerstats/":{"n":"QueriesListenerStats","s":"The QueriesListenerStats type describes the number of listeners registered with the Queries object, and can be used for debugging purposes."},"/api/queries/":{"n":"queries","s":"The queries module of the TinyBase project provides the ability to create and track queries of the data in Store objects."},"/api/checkpoints/interfaces/checkpoints/checkpoints/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store that is backing this Checkpoints object."},"/api/checkpoints/interfaces/checkpoints/checkpoints/methods/getter/getcheckpoint/":{"n":"getCheckpoint","s":"The getCheckpoint method fetches the label for a checkpoint, if it had been provided at the time of the addCheckpoint method or set subsequently with the setCheckpoint method."},"/api/checkpoints/interfaces/checkpoints/checkpoints/methods/getter/getcheckpointids/":{"n":"getCheckpointIds","s":"The getCheckpointIds method returns an array of the checkpoint Ids being managed by this Checkpoints object."},"/api/checkpoints/interfaces/checkpoints/checkpoints/methods/getter/hascheckpoint/":{"n":"hasCheckpoint","s":"The hasCheckpoint method returns a boolean indicating whether a given Checkpoint exists in the Checkpoints object."},"/api/checkpoints/interfaces/checkpoints/checkpoints/methods/setter/addcheckpoint/":{"n":"addCheckpoint","s":"The addCheckpoint method records a checkpoint of the Store into the Checkpoints object that can be reverted to in the future."},"/api/checkpoints/interfaces/checkpoints/checkpoints/methods/setter/setcheckpoint/":{"n":"setCheckpoint","s":"The setCheckpoint method updates the label for a checkpoint in the Checkpoints object after it has been created."},"/api/checkpoints/interfaces/checkpoints/checkpoints/methods/listener/addcheckpointidslistener/":{"n":"addCheckpointIdsListener","s":"The addCheckpointIdsListener method registers a listener function with the Checkpoints object that will be called whenever its set of checkpoints changes."},"/api/checkpoints/interfaces/checkpoints/checkpoints/methods/listener/addcheckpointlistener/":{"n":"addCheckpointListener","s":"The addCheckpointListener method registers a listener function with the Checkpoints object that will be called whenever the label of a checkpoint changes."},"/api/checkpoints/interfaces/checkpoints/checkpoints/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Checkpoints object."},"/api/checkpoints/interfaces/checkpoints/checkpoints/methods/configuration/setsize/":{"n":"setSize","s":"The setSize method lets you specify how many checkpoints the Checkpoints object will store."},"/api/checkpoints/interfaces/checkpoints/checkpoints/methods/iterator/foreachcheckpoint/":{"n":"forEachCheckpoint","s":"The forEachCheckpoint method takes a function that it will then call for each Checkpoint in a specified Checkpoints object."},"/api/checkpoints/interfaces/checkpoints/checkpoints/methods/lifecycle/clear/":{"n":"clear","s":"The clear method resets this Checkpoints object to its initial state, removing all the checkpoints it has been managing."},"/api/checkpoints/interfaces/checkpoints/checkpoints/methods/lifecycle/clearforward/":{"n":"clearForward","s":"The clearForward method resets just the 'redo' checkpoints it has been managing."},"/api/checkpoints/interfaces/checkpoints/checkpoints/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Checkpoints object is no longer used."},"/api/checkpoints/interfaces/checkpoints/checkpoints/methods/movement/gobackward/":{"n":"goBackward","s":"The goBackward method moves the state of the underlying Store back to the previous checkpoint, effectively performing an 'undo' on the Store data."},"/api/checkpoints/interfaces/checkpoints/checkpoints/methods/movement/goforward/":{"n":"goForward","s":"The goForward method moves the state of the underlying Store forwards to a future checkpoint, effectively performing an 'redo' on the Store data."},"/api/checkpoints/interfaces/checkpoints/checkpoints/methods/movement/goto/":{"n":"goTo","s":"The goTo method moves the state of the underlying Store backwards or forwards to a specified checkpoint."},"/api/checkpoints/interfaces/checkpoints/checkpoints/methods/development/getlistenerstats/":{"n":"getListenerStats","s":"The getListenerStats method provides a set of statistics about the listeners registered with the Checkpoints object, and is used for debugging purposes."},"/api/checkpoints/interfaces/checkpoints/checkpoints/":{"n":"Checkpoints","s":"A Checkpoints object lets you set checkpoints on a Store, and move forward and backward through them to create undo and redo functionality."},"/api/checkpoints/functions/creation/createcheckpoints/":{"n":"createCheckpoints","s":"The createCheckpoints function creates a Checkpoints object, and is the main entry point into the checkpoints module."},"/api/checkpoints/type-aliases/listener/checkpointidslistener/":{"n":"CheckpointIdsListener","s":"The CheckpointIdsListener type describes a function that is used to listen to changes to the checkpoint Ids in a Checkpoints object."},"/api/checkpoints/type-aliases/listener/checkpointlistener/":{"n":"CheckpointListener","s":"The CheckpointListener type describes a function that is used to listen to changes to a checkpoint's label in a Checkpoints object."},"/api/checkpoints/type-aliases/callback/checkpointcallback/":{"n":"CheckpointCallback","s":"The CheckpointCallback type describes a function that takes a Checkpoint's Id."},"/api/checkpoints/type-aliases/identity/checkpointids/":{"n":"CheckpointIds","s":"The CheckpointIds type is a representation of the list of checkpoint Ids stored in a Checkpoints object."},"/api/checkpoints/type-aliases/development/checkpointslistenerstats/":{"n":"CheckpointsListenerStats","s":"The CheckpointsListenerStats type describes the number of listeners registered with the Checkpoints object, and can be used for debugging purposes."},"/api/checkpoints/":{"n":"checkpoints","s":"The checkpoints module of the TinyBase project provides the ability to create and track checkpoints made to the data in Store objects."},"/api/common/functions/convenience/defaultsorter/":{"n":"defaultSorter","s":"The defaultSorter function is provided as a convenience to sort keys alphanumerically, and can be provided to the `sliceIdSorter` and `rowIdSorter` parameters of the setIndexDefinition method in the indexes module, for example."},"/api/common/functions/convenience/getuniqueid/":{"n":"getUniqueId","s":"The getUniqueId function returns a unique string of a given length."},"/api/common/functions/hash/gettableintableshash/":{"n":"getTableInTablesHash","s":"The getTableInTablesHash function returns a hash for a single Table in a Store, based on its Id and hash (in turn produced from its Rows)."},"/api/common/functions/hash/gettableshash/":{"n":"getTablesHash","s":"The getTablesHash function returns a hash for the tabular part of a Store, based on each Table Id and hash."},"/api/common/functions/hash/getrowintablehash/":{"n":"getRowInTableHash","s":"The getRowInTableHash function returns a hash for a single Row in a Table, based on its Id and hash (in turn produced from its Cells)."},"/api/common/functions/hash/gettablehash/":{"n":"getTableHash","s":"The getTableHash function returns a hash for a single Table in a Store, based on each Row Id and hash."},"/api/common/functions/hash/getcellinrowhash/":{"n":"getCellInRowHash","s":"The getCellInRowHash function returns a hash for a single Cell in a Row, based on its Id and hash (in turn produced from its value)."},"/api/common/functions/hash/getrowhash/":{"n":"getRowHash","s":"The getRowHash function returns a hash for a single Row in a Table, based on each Cell Id and hash."},"/api/common/functions/hash/getcellhash/":{"n":"getCellHash","s":"The getCellHash function returns a hash for a single Cell, based on its value and the HLC of the Cell."},"/api/common/functions/hash/getvalueinvalueshash/":{"n":"getValueInValuesHash","s":"The getValueInValuesHash function returns a hash for a single Value in a Values object, based on its Id and hash (in turn produced from its value)."},"/api/common/functions/hash/getvalueshash/":{"n":"getValuesHash","s":"The getValuesHash function returns a hash for a Values object, based on each Value Id and hash."},"/api/common/functions/hash/getvaluehash/":{"n":"getValueHash","s":"The getValueHash function returns a hash for a single Value, based on its value and the HLC of the Value."},"/api/common/functions/hash/addorremovehash/":{"n":"addOrRemoveHash","s":"The addOrRemoveHash function combines two hashes together, which, because it is a simple alias for bitwise XOR, serves both as addition and removal of one hash from the other."},"/api/common/functions/hash/gethash/":{"n":"getHash","s":"The getHash function returns a deterministic hash of a string, which can be used to quickly compare the content of two entities."},"/api/common/functions/stamps/gethlcfunctions/":{"n":"getHlcFunctions","s":"The getHlcFunctions function returns a set of utility functions for working with the TinyBase Hybrid Logical Clock (HLC)."},"/api/common/type-aliases/callback/callback/":{"n":"Callback","s":"The Callback type represents a function that is used as a callback and which does not take a parameter."},"/api/common/type-aliases/callback/parameterizedcallback/":{"n":"ParameterizedCallback","s":"The ParameterizedCallback type represents a generic function that will take an optional parameter - such as the handler of a DOM event."},"/api/common/type-aliases/general/json/":{"n":"Json","s":"The Json type is a simple alias for a string, but is used to indicate that the string should be considered to be a JSON serialization of an object."},"/api/common/type-aliases/identity/id/":{"n":"Id","s":"The Id type is a simple alias for a string, but is used to indicate that the string should be considered to be the key of an object (such as a Row Id string used in a Table)."},"/api/common/type-aliases/identity/idornull/":{"n":"IdOrNull","s":"The IdOrNull type is a simple alias for the union of a string or `null` value, where the string should be considered to be the key of an objects (such as a Row Id string used in a Table), and typically `null` indicates a wildcard - such as when used in the Store addRowListener method."},"/api/common/type-aliases/identity/ids/":{"n":"Ids","s":"The Ids type is a simple alias for an array of strings, but is used to indicate that the strings should be considered to be the keys of objects (such as the Row Id strings used in a Table)."},"/api/common/type-aliases/parameter/sortkey/":{"n":"SortKey","s":"The SortKey type represents a value that can be used by a sort function."},"/api/common/type-aliases/stamps/getnow/":{"n":"GetNow","s":"The GetNow type is used to represent a function that returns the current time in milliseconds."},"/api/common/type-aliases/stamps/hash/":{"n":"Hash","s":"The Hash type is used within TinyBase (for example in the mergeable-store module) to quickly compare the content of two objects."},"/api/common/type-aliases/stamps/hlc/":{"n":"Hlc","s":"The Hlc type is a string that represents a Hybrid Logical Clock (HLC) value."},"/api/common/":{"n":"common","s":"The common module of the TinyBase project provides a small collection of common types used across other modules."},"/api/persisters/interfaces/persister/persister/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store or MergeableStore that is backing this Persister object."},"/api/persisters/interfaces/persister/persister/methods/listener/addstatuslistener/":{"n":"addStatusListener","s":"The addStatusListener method registers a listener function with the Persister that will be called whenever it starts or stops loading or saving."},"/api/persisters/interfaces/persister/persister/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Persister."},"/api/persisters/interfaces/persister/persister/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Persister object is no longer used."},"/api/persisters/interfaces/persister/persister/methods/lifecycle/getstatus/":{"n":"getStatus","s":"The getStatus method lets you find out if the Persister is currently in the process of loading or saving content."},"/api/persisters/interfaces/persister/persister/methods/lifecycle/schedule/":{"n":"schedule","s":"The schedule method allows you to queue up a series of asynchronous actions that must run in sequence during persistence."},"/api/persisters/interfaces/persister/persister/methods/lifecycle/startautopersisting/":{"n":"startAutoPersisting","s":"The startAutoPersist method is a convenience method that starts both automatic loading and saving of the Store data."},"/api/persisters/interfaces/persister/persister/methods/lifecycle/stopautopersisting/":{"n":"stopAutoPersisting","s":"The stopAutoPersist method is a convenience method that stops both automatic loading and saving of the Store data."},"/api/persisters/interfaces/persister/persister/methods/load/isautoloading/":{"n":"isAutoLoading","s":"The isAutoLoading method lets you find out if the Persister is currently automatically loading its content."},"/api/persisters/interfaces/persister/persister/methods/load/load/":{"n":"load","s":"The load method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once."},"/api/persisters/interfaces/persister/persister/methods/load/startautoload/":{"n":"startAutoLoad","s":"The startAutoLoad method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once, and then continuously."},"/api/persisters/interfaces/persister/persister/methods/load/stopautoload/":{"n":"stopAutoLoad","s":"The stopAutoLoad method stops the automatic loading of data from storage previously started with the startAutoLoad method."},"/api/persisters/interfaces/persister/persister/methods/save/isautosaving/":{"n":"isAutoSaving","s":"The isAutoSaving method lets you find out if the Persister is currently automatically saving its content."},"/api/persisters/interfaces/persister/persister/methods/save/save/":{"n":"save","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once."},"/api/persisters/interfaces/persister/persister/methods/save/startautosave/":{"n":"startAutoSave","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once, and then continuously."},"/api/persisters/interfaces/persister/persister/methods/save/stopautosave/":{"n":"stopAutoSave","s":"The stopAutoSave method stops the automatic save of data to storage previously started with the startAutoSave method."},"/api/persisters/interfaces/persister/persister/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the Persister, and is used for debugging purposes."},"/api/persisters/interfaces/persister/persister/":{"n":"Persister","s":"A Persister object lets you save and load Store data to and from different locations, or underlying storage types."},"/api/persisters/enumerations/lifecycle/status/":{"n":"Status","s":"The Status enum is used to indicate whether a Persister is idle, or loading or saving data."},"/api/persisters/enumerations/mergeable/persists/":{"n":"Persists","s":"The Persists enum is used to indicate whether a Persister can support a regular Store, a MergeableStore, or both."},"/api/persisters/functions/creation/createcustompersister/":{"n":"createCustomPersister","s":"The createCustomPersister function creates a Persister object that you can configure to persist the Store in any way you wish."},"/api/persisters/functions/creation/createcustompostgresqlpersister/":{"n":"createCustomPostgreSqlPersister","s":"The createCustomPostgreSqlPersister function creates a Persister object that you can configure to persist the Store to a PostgreSQL database."},"/api/persisters/functions/creation/createcustomsqlitepersister/":{"n":"createCustomSqlitePersister","s":"The createCustomSqlitePersister function creates a Persister object that you can configure to persist the Store to a SQLite database."},"/api/persisters/type-aliases/listener/statuslistener/":{"n":"StatusListener","s":"The StatusListener type describes a function that is used to listen to changes to the loading and saving status of the Persister."},"/api/persisters/type-aliases/configuration/databasepersisterconfig/":{"n":"DatabasePersisterConfig","s":"The DatabasePersisterConfig type describes the configuration of a database-oriented Persister, such as those for SQLite and PostgreSQL."},"/api/persisters/type-aliases/configuration/dpcjson/":{"n":"DpcJson","s":"The DpcJson type describes the configuration of a database-oriented Persister operating in serialized JSON mode."},"/api/persisters/type-aliases/configuration/dpctabular/":{"n":"DpcTabular","s":"The DpcTabular type describes the configuration of a database-oriented Persister that is operating in tabular mapping mode."},"/api/persisters/type-aliases/configuration/dpctabularcondition/":{"n":"DpcTabularCondition","s":"The DpcTabularCondition type describes the SQL WHERE clause that will be used to filter the rows that are loaded and saved to in the Store Table."},"/api/persisters/type-aliases/configuration/dpctabularload/":{"n":"DpcTabularLoad","s":"The DpcTabularLoad type describes the configuration for loading Tables in a database-oriented Persister that is operating in tabular mode."},"/api/persisters/type-aliases/configuration/dpctabularsave/":{"n":"DpcTabularSave","s":"The DpcTabularSave type describes the configuration for saving Tables in a database-oriented Persister that is operating in tabular mode."},"/api/persisters/type-aliases/configuration/dpctabularvalues/":{"n":"DpcTabularValues","s":"The DpcTabularValues type describes the configuration for handling Values in a database-oriented Persister that is operating in tabular mode."},"/api/persisters/type-aliases/creation/databasechangelistener/":{"n":"DatabaseChangeListener","s":"The DatabaseChangeListener type describes a function that is used to listen for changes to the data in a database."},"/api/persisters/type-aliases/creation/databaseexecutecommand/":{"n":"DatabaseExecuteCommand","s":"The DatabaseExecuteCommand type describes a function that is used to execute commands against a database."},"/api/persisters/type-aliases/creation/persisterlistener/":{"n":"PersisterListener","s":"A PersisterListener is a generic representation of the callback that lets a Persister inform the store that a change has happened to the underlying data."},"/api/persisters/type-aliases/mergeable/persistedstore/":{"n":"PersistedStore","s":"The PersistedStore type is a generic representation of the type of store being handled by a Persister."},"/api/persisters/type-aliases/mergeable/anypersister/":{"n":"AnyPersister","s":"The AnyPersister type is a convenient alias for any type of Persister that can persist Store or MergeableStore objects."},"/api/persisters/type-aliases/mergeable/persistedchanges/":{"n":"PersistedChanges","s":"The PersistedChanges type is a generic representation of changes made to the type of store being handled by a Persister."},"/api/persisters/type-aliases/mergeable/persistedcontent/":{"n":"PersistedContent","s":"The PersistedContent type is a generic representation of the content in the type of store being handled by a Persister."},"/api/persisters/type-aliases/development/persisterstats/":{"n":"PersisterStats","s":"The PersisterStats type describes the number of times a Persister object has loaded or saved data."},"/api/persisters/":{"n":"persisters","s":"The persisters module of the TinyBase project provides a simple framework for saving and loading Store and MergeableStore data, to and from different destinations, or underlying storage types."},"/api/persister-automerge/interfaces/persister/automergepersister/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store or MergeableStore that is backing this Persister object."},"/api/persister-automerge/interfaces/persister/automergepersister/methods/getter/getdochandle/":{"n":"getDocHandle","s":"The getDocHandle method returns the Automerge document handler the Store is being persisted to."},"/api/persister-automerge/interfaces/persister/automergepersister/methods/listener/addstatuslistener/":{"n":"addStatusListener","s":"The addStatusListener method registers a listener function with the Persister that will be called whenever it starts or stops loading or saving."},"/api/persister-automerge/interfaces/persister/automergepersister/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Persister."},"/api/persister-automerge/interfaces/persister/automergepersister/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Persister object is no longer used."},"/api/persister-automerge/interfaces/persister/automergepersister/methods/lifecycle/getstatus/":{"n":"getStatus","s":"The getStatus method lets you find out if the Persister is currently in the process of loading or saving content."},"/api/persister-automerge/interfaces/persister/automergepersister/methods/lifecycle/schedule/":{"n":"schedule","s":"The schedule method allows you to queue up a series of asynchronous actions that must run in sequence during persistence."},"/api/persister-automerge/interfaces/persister/automergepersister/methods/lifecycle/startautopersisting/":{"n":"startAutoPersisting","s":"The startAutoPersist method is a convenience method that starts both automatic loading and saving of the Store data."},"/api/persister-automerge/interfaces/persister/automergepersister/methods/lifecycle/stopautopersisting/":{"n":"stopAutoPersisting","s":"The stopAutoPersist method is a convenience method that stops both automatic loading and saving of the Store data."},"/api/persister-automerge/interfaces/persister/automergepersister/methods/load/isautoloading/":{"n":"isAutoLoading","s":"The isAutoLoading method lets you find out if the Persister is currently automatically loading its content."},"/api/persister-automerge/interfaces/persister/automergepersister/methods/load/load/":{"n":"load","s":"The load method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once."},"/api/persister-automerge/interfaces/persister/automergepersister/methods/load/startautoload/":{"n":"startAutoLoad","s":"The startAutoLoad method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once, and then continuously."},"/api/persister-automerge/interfaces/persister/automergepersister/methods/load/stopautoload/":{"n":"stopAutoLoad","s":"The stopAutoLoad method stops the automatic loading of data from storage previously started with the startAutoLoad method."},"/api/persister-automerge/interfaces/persister/automergepersister/methods/save/isautosaving/":{"n":"isAutoSaving","s":"The isAutoSaving method lets you find out if the Persister is currently automatically saving its content."},"/api/persister-automerge/interfaces/persister/automergepersister/methods/save/save/":{"n":"save","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once."},"/api/persister-automerge/interfaces/persister/automergepersister/methods/save/startautosave/":{"n":"startAutoSave","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once, and then continuously."},"/api/persister-automerge/interfaces/persister/automergepersister/methods/save/stopautosave/":{"n":"stopAutoSave","s":"The stopAutoSave method stops the automatic save of data to storage previously started with the startAutoSave method."},"/api/persister-automerge/interfaces/persister/automergepersister/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the Persister, and is used for debugging purposes."},"/api/persister-automerge/interfaces/persister/automergepersister/":{"n":"AutomergePersister","s":"The AutomergePersister interface represents a Persister that lets you save and load Store data to and from an Automerge document."},"/api/persister-automerge/functions/creation/createautomergepersister/":{"n":"createAutomergePersister","s":"The createAutomergePersister function creates an AutomergePersister object that can persist the Store to an Automerge document."},"/api/persister-automerge/":{"n":"persister-automerge","s":"The persister-automerge module of the TinyBase project provides a way to save and load Store data to and from an Automerge document."},"/api/persister-browser/interfaces/persister/localpersister/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store or MergeableStore that is backing this Persister object."},"/api/persister-browser/interfaces/persister/localpersister/methods/getter/getstoragename/":{"n":"getStorageName","s":"The getStorageName method returns the unique key of the storage location the Store is being persisted to."},"/api/persister-browser/interfaces/persister/localpersister/methods/listener/addstatuslistener/":{"n":"addStatusListener","s":"The addStatusListener method registers a listener function with the Persister that will be called whenever it starts or stops loading or saving."},"/api/persister-browser/interfaces/persister/localpersister/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Persister."},"/api/persister-browser/interfaces/persister/localpersister/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Persister object is no longer used."},"/api/persister-browser/interfaces/persister/localpersister/methods/lifecycle/getstatus/":{"n":"getStatus","s":"The getStatus method lets you find out if the Persister is currently in the process of loading or saving content."},"/api/persister-browser/interfaces/persister/localpersister/methods/lifecycle/schedule/":{"n":"schedule","s":"The schedule method allows you to queue up a series of asynchronous actions that must run in sequence during persistence."},"/api/persister-browser/interfaces/persister/localpersister/methods/lifecycle/startautopersisting/":{"n":"startAutoPersisting","s":"The startAutoPersist method is a convenience method that starts both automatic loading and saving of the Store data."},"/api/persister-browser/interfaces/persister/localpersister/methods/lifecycle/stopautopersisting/":{"n":"stopAutoPersisting","s":"The stopAutoPersist method is a convenience method that stops both automatic loading and saving of the Store data."},"/api/persister-browser/interfaces/persister/localpersister/methods/load/isautoloading/":{"n":"isAutoLoading","s":"The isAutoLoading method lets you find out if the Persister is currently automatically loading its content."},"/api/persister-browser/interfaces/persister/localpersister/methods/load/load/":{"n":"load","s":"The load method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once."},"/api/persister-browser/interfaces/persister/localpersister/methods/load/startautoload/":{"n":"startAutoLoad","s":"The startAutoLoad method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once, and then continuously."},"/api/persister-browser/interfaces/persister/localpersister/methods/load/stopautoload/":{"n":"stopAutoLoad","s":"The stopAutoLoad method stops the automatic loading of data from storage previously started with the startAutoLoad method."},"/api/persister-browser/interfaces/persister/localpersister/methods/save/isautosaving/":{"n":"isAutoSaving","s":"The isAutoSaving method lets you find out if the Persister is currently automatically saving its content."},"/api/persister-browser/interfaces/persister/localpersister/methods/save/save/":{"n":"save","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once."},"/api/persister-browser/interfaces/persister/localpersister/methods/save/startautosave/":{"n":"startAutoSave","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once, and then continuously."},"/api/persister-browser/interfaces/persister/localpersister/methods/save/stopautosave/":{"n":"stopAutoSave","s":"The stopAutoSave method stops the automatic save of data to storage previously started with the startAutoSave method."},"/api/persister-browser/interfaces/persister/localpersister/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the Persister, and is used for debugging purposes."},"/api/persister-browser/interfaces/persister/localpersister/":{"n":"LocalPersister","s":"The LocalPersister interface represents a Persister that lets you save and load Store data to and from the browser's local storage."},"/api/persister-browser/interfaces/persister/sessionpersister/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store or MergeableStore that is backing this Persister object."},"/api/persister-browser/interfaces/persister/sessionpersister/methods/getter/getstoragename/":{"n":"getStorageName","s":"The getStorageName method returns the unique key of the storage location the Store is being persisted to."},"/api/persister-browser/interfaces/persister/sessionpersister/methods/listener/addstatuslistener/":{"n":"addStatusListener","s":"The addStatusListener method registers a listener function with the Persister that will be called whenever it starts or stops loading or saving."},"/api/persister-browser/interfaces/persister/sessionpersister/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Persister."},"/api/persister-browser/interfaces/persister/sessionpersister/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Persister object is no longer used."},"/api/persister-browser/interfaces/persister/sessionpersister/methods/lifecycle/getstatus/":{"n":"getStatus","s":"The getStatus method lets you find out if the Persister is currently in the process of loading or saving content."},"/api/persister-browser/interfaces/persister/sessionpersister/methods/lifecycle/schedule/":{"n":"schedule","s":"The schedule method allows you to queue up a series of asynchronous actions that must run in sequence during persistence."},"/api/persister-browser/interfaces/persister/sessionpersister/methods/lifecycle/startautopersisting/":{"n":"startAutoPersisting","s":"The startAutoPersist method is a convenience method that starts both automatic loading and saving of the Store data."},"/api/persister-browser/interfaces/persister/sessionpersister/methods/lifecycle/stopautopersisting/":{"n":"stopAutoPersisting","s":"The stopAutoPersist method is a convenience method that stops both automatic loading and saving of the Store data."},"/api/persister-browser/interfaces/persister/sessionpersister/methods/load/isautoloading/":{"n":"isAutoLoading","s":"The isAutoLoading method lets you find out if the Persister is currently automatically loading its content."},"/api/persister-browser/interfaces/persister/sessionpersister/methods/load/load/":{"n":"load","s":"The load method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once."},"/api/persister-browser/interfaces/persister/sessionpersister/methods/load/startautoload/":{"n":"startAutoLoad","s":"The startAutoLoad method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once, and then continuously."},"/api/persister-browser/interfaces/persister/sessionpersister/methods/load/stopautoload/":{"n":"stopAutoLoad","s":"The stopAutoLoad method stops the automatic loading of data from storage previously started with the startAutoLoad method."},"/api/persister-browser/interfaces/persister/sessionpersister/methods/save/isautosaving/":{"n":"isAutoSaving","s":"The isAutoSaving method lets you find out if the Persister is currently automatically saving its content."},"/api/persister-browser/interfaces/persister/sessionpersister/methods/save/save/":{"n":"save","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once."},"/api/persister-browser/interfaces/persister/sessionpersister/methods/save/startautosave/":{"n":"startAutoSave","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once, and then continuously."},"/api/persister-browser/interfaces/persister/sessionpersister/methods/save/stopautosave/":{"n":"stopAutoSave","s":"The stopAutoSave method stops the automatic save of data to storage previously started with the startAutoSave method."},"/api/persister-browser/interfaces/persister/sessionpersister/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the Persister, and is used for debugging purposes."},"/api/persister-browser/interfaces/persister/sessionpersister/":{"n":"SessionPersister","s":"The SessionPersister interface represents a Persister that lets you save and load Store data to and from the browser's session storage."},"/api/persister-browser/functions/creation/createlocalpersister/":{"n":"createLocalPersister","s":"The createLocalPersister function creates a LocalPersister object that can persist the Store to the browser's local storage."},"/api/persister-browser/functions/creation/createsessionpersister/":{"n":"createSessionPersister","s":"The createSessionPersister function creates a SessionPersister object that can persist the Store to the browser's session storage."},"/api/persister-browser/":{"n":"persister-browser","s":"The persister-browser module of the TinyBase project lets you save and load Store data to and from browser storage."},"/api/persister-cr-sqlite-wasm/interfaces/persister/crsqlitewasmpersister/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store or MergeableStore that is backing this Persister object."},"/api/persister-cr-sqlite-wasm/interfaces/persister/crsqlitewasmpersister/methods/getter/getdb/":{"n":"getDb","s":"The getDb method returns a reference to the database instance the Store is being persisted to."},"/api/persister-cr-sqlite-wasm/interfaces/persister/crsqlitewasmpersister/methods/listener/addstatuslistener/":{"n":"addStatusListener","s":"The addStatusListener method registers a listener function with the Persister that will be called whenever it starts or stops loading or saving."},"/api/persister-cr-sqlite-wasm/interfaces/persister/crsqlitewasmpersister/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Persister."},"/api/persister-cr-sqlite-wasm/interfaces/persister/crsqlitewasmpersister/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Persister object is no longer used."},"/api/persister-cr-sqlite-wasm/interfaces/persister/crsqlitewasmpersister/methods/lifecycle/getstatus/":{"n":"getStatus","s":"The getStatus method lets you find out if the Persister is currently in the process of loading or saving content."},"/api/persister-cr-sqlite-wasm/interfaces/persister/crsqlitewasmpersister/methods/lifecycle/schedule/":{"n":"schedule","s":"The schedule method allows you to queue up a series of asynchronous actions that must run in sequence during persistence."},"/api/persister-cr-sqlite-wasm/interfaces/persister/crsqlitewasmpersister/methods/lifecycle/startautopersisting/":{"n":"startAutoPersisting","s":"The startAutoPersist method is a convenience method that starts both automatic loading and saving of the Store data."},"/api/persister-cr-sqlite-wasm/interfaces/persister/crsqlitewasmpersister/methods/lifecycle/stopautopersisting/":{"n":"stopAutoPersisting","s":"The stopAutoPersist method is a convenience method that stops both automatic loading and saving of the Store data."},"/api/persister-cr-sqlite-wasm/interfaces/persister/crsqlitewasmpersister/methods/load/isautoloading/":{"n":"isAutoLoading","s":"The isAutoLoading method lets you find out if the Persister is currently automatically loading its content."},"/api/persister-cr-sqlite-wasm/interfaces/persister/crsqlitewasmpersister/methods/load/load/":{"n":"load","s":"The load method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once."},"/api/persister-cr-sqlite-wasm/interfaces/persister/crsqlitewasmpersister/methods/load/startautoload/":{"n":"startAutoLoad","s":"The startAutoLoad method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once, and then continuously."},"/api/persister-cr-sqlite-wasm/interfaces/persister/crsqlitewasmpersister/methods/load/stopautoload/":{"n":"stopAutoLoad","s":"The stopAutoLoad method stops the automatic loading of data from storage previously started with the startAutoLoad method."},"/api/persister-cr-sqlite-wasm/interfaces/persister/crsqlitewasmpersister/methods/save/isautosaving/":{"n":"isAutoSaving","s":"The isAutoSaving method lets you find out if the Persister is currently automatically saving its content."},"/api/persister-cr-sqlite-wasm/interfaces/persister/crsqlitewasmpersister/methods/save/save/":{"n":"save","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once."},"/api/persister-cr-sqlite-wasm/interfaces/persister/crsqlitewasmpersister/methods/save/startautosave/":{"n":"startAutoSave","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once, and then continuously."},"/api/persister-cr-sqlite-wasm/interfaces/persister/crsqlitewasmpersister/methods/save/stopautosave/":{"n":"stopAutoSave","s":"The stopAutoSave method stops the automatic save of data to storage previously started with the startAutoSave method."},"/api/persister-cr-sqlite-wasm/interfaces/persister/crsqlitewasmpersister/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the Persister, and is used for debugging purposes."},"/api/persister-cr-sqlite-wasm/interfaces/persister/crsqlitewasmpersister/":{"n":"CrSqliteWasmPersister","s":"The CrSqliteWasmPersister interface represents a Persister that lets you save and load Store data to and from a local CR-SQLite database."},"/api/persister-cr-sqlite-wasm/functions/creation/createcrsqlitewasmpersister/":{"n":"createCrSqliteWasmPersister","s":"The createCrSqliteWasmPersister function creates a CrSqliteWasmPersister object that can persist the Store to a local CR-SQLite database."},"/api/persister-cr-sqlite-wasm/":{"n":"persister-cr-sqlite-wasm","s":"The persister-cr-sqlite-wasm module of the TinyBase project lets you save and load Store data to and from a local CR-SQLite database (in an appropriate environment)."},"/api/persister-durable-object-storage/interfaces/persister/durableobjectstoragepersister/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store or MergeableStore that is backing this Persister object."},"/api/persister-durable-object-storage/interfaces/persister/durableobjectstoragepersister/methods/getter/getstorage/":{"n":"getStorage","s":"The getStorage method returns a reference to the storage that the Store is being persisted to."},"/api/persister-durable-object-storage/interfaces/persister/durableobjectstoragepersister/methods/listener/addstatuslistener/":{"n":"addStatusListener","s":"The addStatusListener method registers a listener function with the Persister that will be called whenever it starts or stops loading or saving."},"/api/persister-durable-object-storage/interfaces/persister/durableobjectstoragepersister/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Persister."},"/api/persister-durable-object-storage/interfaces/persister/durableobjectstoragepersister/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Persister object is no longer used."},"/api/persister-durable-object-storage/interfaces/persister/durableobjectstoragepersister/methods/lifecycle/getstatus/":{"n":"getStatus","s":"The getStatus method lets you find out if the Persister is currently in the process of loading or saving content."},"/api/persister-durable-object-storage/interfaces/persister/durableobjectstoragepersister/methods/lifecycle/schedule/":{"n":"schedule","s":"The schedule method allows you to queue up a series of asynchronous actions that must run in sequence during persistence."},"/api/persister-durable-object-storage/interfaces/persister/durableobjectstoragepersister/methods/lifecycle/startautopersisting/":{"n":"startAutoPersisting","s":"The startAutoPersist method is a convenience method that starts both automatic loading and saving of the Store data."},"/api/persister-durable-object-storage/interfaces/persister/durableobjectstoragepersister/methods/lifecycle/stopautopersisting/":{"n":"stopAutoPersisting","s":"The stopAutoPersist method is a convenience method that stops both automatic loading and saving of the Store data."},"/api/persister-durable-object-storage/interfaces/persister/durableobjectstoragepersister/methods/load/isautoloading/":{"n":"isAutoLoading","s":"The isAutoLoading method lets you find out if the Persister is currently automatically loading its content."},"/api/persister-durable-object-storage/interfaces/persister/durableobjectstoragepersister/methods/load/load/":{"n":"load","s":"The load method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once."},"/api/persister-durable-object-storage/interfaces/persister/durableobjectstoragepersister/methods/load/startautoload/":{"n":"startAutoLoad","s":"The startAutoLoad method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once, and then continuously."},"/api/persister-durable-object-storage/interfaces/persister/durableobjectstoragepersister/methods/load/stopautoload/":{"n":"stopAutoLoad","s":"The stopAutoLoad method stops the automatic loading of data from storage previously started with the startAutoLoad method."},"/api/persister-durable-object-storage/interfaces/persister/durableobjectstoragepersister/methods/save/isautosaving/":{"n":"isAutoSaving","s":"The isAutoSaving method lets you find out if the Persister is currently automatically saving its content."},"/api/persister-durable-object-storage/interfaces/persister/durableobjectstoragepersister/methods/save/save/":{"n":"save","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once."},"/api/persister-durable-object-storage/interfaces/persister/durableobjectstoragepersister/methods/save/startautosave/":{"n":"startAutoSave","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once, and then continuously."},"/api/persister-durable-object-storage/interfaces/persister/durableobjectstoragepersister/methods/save/stopautosave/":{"n":"stopAutoSave","s":"The stopAutoSave method stops the automatic save of data to storage previously started with the startAutoSave method."},"/api/persister-durable-object-storage/interfaces/persister/durableobjectstoragepersister/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the Persister, and is used for debugging purposes."},"/api/persister-durable-object-storage/interfaces/persister/durableobjectstoragepersister/":{"n":"DurableObjectStoragePersister","s":"The DurableObjectStoragePersister interface represents a Persister that lets you save and load Store data to and from Cloudflare Durable Object storage."},"/api/persister-durable-object-storage/functions/creation/createdurableobjectstoragepersister/":{"n":"createDurableObjectStoragePersister","s":"The createDurableObjectStoragePersister function creates a DurableObjectStoragePersister object that can persist the Store to and from Cloudflare Durable Object storage."},"/api/persister-durable-object-storage/":{"n":"persister-durable-object-storage","s":"The persister-durable-object-storage module of the TinyBase project lets you save and load Store data to and from Cloudflare Durable Object storage (in an appropriate environment)."},"/api/persister-electric-sql/interfaces/persister/electricsqlpersister/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store or MergeableStore that is backing this Persister object."},"/api/persister-electric-sql/interfaces/persister/electricsqlpersister/methods/getter/getelectricclient/":{"n":"getElectricClient","s":"The getElectricClient method returns a reference to the Electric client the Store is being persisted to."},"/api/persister-electric-sql/interfaces/persister/electricsqlpersister/methods/listener/addstatuslistener/":{"n":"addStatusListener","s":"The addStatusListener method registers a listener function with the Persister that will be called whenever it starts or stops loading or saving."},"/api/persister-electric-sql/interfaces/persister/electricsqlpersister/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Persister."},"/api/persister-electric-sql/interfaces/persister/electricsqlpersister/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Persister object is no longer used."},"/api/persister-electric-sql/interfaces/persister/electricsqlpersister/methods/lifecycle/getstatus/":{"n":"getStatus","s":"The getStatus method lets you find out if the Persister is currently in the process of loading or saving content."},"/api/persister-electric-sql/interfaces/persister/electricsqlpersister/methods/lifecycle/schedule/":{"n":"schedule","s":"The schedule method allows you to queue up a series of asynchronous actions that must run in sequence during persistence."},"/api/persister-electric-sql/interfaces/persister/electricsqlpersister/methods/lifecycle/startautopersisting/":{"n":"startAutoPersisting","s":"The startAutoPersist method is a convenience method that starts both automatic loading and saving of the Store data."},"/api/persister-electric-sql/interfaces/persister/electricsqlpersister/methods/lifecycle/stopautopersisting/":{"n":"stopAutoPersisting","s":"The stopAutoPersist method is a convenience method that stops both automatic loading and saving of the Store data."},"/api/persister-electric-sql/interfaces/persister/electricsqlpersister/methods/load/isautoloading/":{"n":"isAutoLoading","s":"The isAutoLoading method lets you find out if the Persister is currently automatically loading its content."},"/api/persister-electric-sql/interfaces/persister/electricsqlpersister/methods/load/load/":{"n":"load","s":"The load method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once."},"/api/persister-electric-sql/interfaces/persister/electricsqlpersister/methods/load/startautoload/":{"n":"startAutoLoad","s":"The startAutoLoad method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once, and then continuously."},"/api/persister-electric-sql/interfaces/persister/electricsqlpersister/methods/load/stopautoload/":{"n":"stopAutoLoad","s":"The stopAutoLoad method stops the automatic loading of data from storage previously started with the startAutoLoad method."},"/api/persister-electric-sql/interfaces/persister/electricsqlpersister/methods/save/isautosaving/":{"n":"isAutoSaving","s":"The isAutoSaving method lets you find out if the Persister is currently automatically saving its content."},"/api/persister-electric-sql/interfaces/persister/electricsqlpersister/methods/save/save/":{"n":"save","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once."},"/api/persister-electric-sql/interfaces/persister/electricsqlpersister/methods/save/startautosave/":{"n":"startAutoSave","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once, and then continuously."},"/api/persister-electric-sql/interfaces/persister/electricsqlpersister/methods/save/stopautosave/":{"n":"stopAutoSave","s":"The stopAutoSave method stops the automatic save of data to storage previously started with the startAutoSave method."},"/api/persister-electric-sql/interfaces/persister/electricsqlpersister/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the Persister, and is used for debugging purposes."},"/api/persister-electric-sql/interfaces/persister/electricsqlpersister/":{"n":"ElectricSqlPersister","s":"The ElectricSqlPersister interface represents a Persister that lets you save and load Store data to and from a local ElectricSQL database."},"/api/persister-electric-sql/functions/creation/createelectricsqlpersister/":{"n":"createElectricSqlPersister","s":"The createElectricSqlPersister function creates an ElectricSqlPersister object that can persist a Store to a local ElectricSQL database."},"/api/persister-electric-sql/":{"n":"persister-electric-sql","s":"The persister-electric-sql module of the TinyBase project lets you save and load Store data to and from a local ElectricSQL database (in an appropriate environment)."},"/api/persister-expo-sqlite/interfaces/persister/exposqlitepersister/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store or MergeableStore that is backing this Persister object."},"/api/persister-expo-sqlite/interfaces/persister/exposqlitepersister/methods/getter/getdb/":{"n":"getDb","s":"The getDb method returns a reference to the database instance the Store is being persisted to."},"/api/persister-expo-sqlite/interfaces/persister/exposqlitepersister/methods/listener/addstatuslistener/":{"n":"addStatusListener","s":"The addStatusListener method registers a listener function with the Persister that will be called whenever it starts or stops loading or saving."},"/api/persister-expo-sqlite/interfaces/persister/exposqlitepersister/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Persister."},"/api/persister-expo-sqlite/interfaces/persister/exposqlitepersister/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Persister object is no longer used."},"/api/persister-expo-sqlite/interfaces/persister/exposqlitepersister/methods/lifecycle/getstatus/":{"n":"getStatus","s":"The getStatus method lets you find out if the Persister is currently in the process of loading or saving content."},"/api/persister-expo-sqlite/interfaces/persister/exposqlitepersister/methods/lifecycle/schedule/":{"n":"schedule","s":"The schedule method allows you to queue up a series of asynchronous actions that must run in sequence during persistence."},"/api/persister-expo-sqlite/interfaces/persister/exposqlitepersister/methods/lifecycle/startautopersisting/":{"n":"startAutoPersisting","s":"The startAutoPersist method is a convenience method that starts both automatic loading and saving of the Store data."},"/api/persister-expo-sqlite/interfaces/persister/exposqlitepersister/methods/lifecycle/stopautopersisting/":{"n":"stopAutoPersisting","s":"The stopAutoPersist method is a convenience method that stops both automatic loading and saving of the Store data."},"/api/persister-expo-sqlite/interfaces/persister/exposqlitepersister/methods/load/isautoloading/":{"n":"isAutoLoading","s":"The isAutoLoading method lets you find out if the Persister is currently automatically loading its content."},"/api/persister-expo-sqlite/interfaces/persister/exposqlitepersister/methods/load/load/":{"n":"load","s":"The load method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once."},"/api/persister-expo-sqlite/interfaces/persister/exposqlitepersister/methods/load/startautoload/":{"n":"startAutoLoad","s":"The startAutoLoad method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once, and then continuously."},"/api/persister-expo-sqlite/interfaces/persister/exposqlitepersister/methods/load/stopautoload/":{"n":"stopAutoLoad","s":"The stopAutoLoad method stops the automatic loading of data from storage previously started with the startAutoLoad method."},"/api/persister-expo-sqlite/interfaces/persister/exposqlitepersister/methods/save/isautosaving/":{"n":"isAutoSaving","s":"The isAutoSaving method lets you find out if the Persister is currently automatically saving its content."},"/api/persister-expo-sqlite/interfaces/persister/exposqlitepersister/methods/save/save/":{"n":"save","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once."},"/api/persister-expo-sqlite/interfaces/persister/exposqlitepersister/methods/save/startautosave/":{"n":"startAutoSave","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once, and then continuously."},"/api/persister-expo-sqlite/interfaces/persister/exposqlitepersister/methods/save/stopautosave/":{"n":"stopAutoSave","s":"The stopAutoSave method stops the automatic save of data to storage previously started with the startAutoSave method."},"/api/persister-expo-sqlite/interfaces/persister/exposqlitepersister/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the Persister, and is used for debugging purposes."},"/api/persister-expo-sqlite/interfaces/persister/exposqlitepersister/":{"n":"ExpoSqlitePersister","s":"The ExpoSqlitePersister interface represents a Persister that lets you save and load Store data to and from a Expo-SQLite database."},"/api/persister-expo-sqlite/functions/creation/createexposqlitepersister/":{"n":"createExpoSqlitePersister","s":"The createExpoSqlitePersister function creates an ExpoSqlitePersister object that can persist the Store to a local Expo-SQLite database."},"/api/persister-expo-sqlite/":{"n":"persister-expo-sqlite","s":"The persister-expo-sqlite module of the TinyBase project lets you save and load Store data to and from a Expo-SQLite database (in an appropriate React Native environment)."},"/api/persister-file/interfaces/persister/filepersister/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store or MergeableStore that is backing this Persister object."},"/api/persister-file/interfaces/persister/filepersister/methods/getter/getfilepath/":{"n":"getFilePath","s":"The getFilePath method returns the location of the local file the Store is being persisted to."},"/api/persister-file/interfaces/persister/filepersister/methods/listener/addstatuslistener/":{"n":"addStatusListener","s":"The addStatusListener method registers a listener function with the Persister that will be called whenever it starts or stops loading or saving."},"/api/persister-file/interfaces/persister/filepersister/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Persister."},"/api/persister-file/interfaces/persister/filepersister/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Persister object is no longer used."},"/api/persister-file/interfaces/persister/filepersister/methods/lifecycle/getstatus/":{"n":"getStatus","s":"The getStatus method lets you find out if the Persister is currently in the process of loading or saving content."},"/api/persister-file/interfaces/persister/filepersister/methods/lifecycle/schedule/":{"n":"schedule","s":"The schedule method allows you to queue up a series of asynchronous actions that must run in sequence during persistence."},"/api/persister-file/interfaces/persister/filepersister/methods/lifecycle/startautopersisting/":{"n":"startAutoPersisting","s":"The startAutoPersist method is a convenience method that starts both automatic loading and saving of the Store data."},"/api/persister-file/interfaces/persister/filepersister/methods/lifecycle/stopautopersisting/":{"n":"stopAutoPersisting","s":"The stopAutoPersist method is a convenience method that stops both automatic loading and saving of the Store data."},"/api/persister-file/interfaces/persister/filepersister/methods/load/isautoloading/":{"n":"isAutoLoading","s":"The isAutoLoading method lets you find out if the Persister is currently automatically loading its content."},"/api/persister-file/interfaces/persister/filepersister/methods/load/load/":{"n":"load","s":"The load method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once."},"/api/persister-file/interfaces/persister/filepersister/methods/load/startautoload/":{"n":"startAutoLoad","s":"The startAutoLoad method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once, and then continuously."},"/api/persister-file/interfaces/persister/filepersister/methods/load/stopautoload/":{"n":"stopAutoLoad","s":"The stopAutoLoad method stops the automatic loading of data from storage previously started with the startAutoLoad method."},"/api/persister-file/interfaces/persister/filepersister/methods/save/isautosaving/":{"n":"isAutoSaving","s":"The isAutoSaving method lets you find out if the Persister is currently automatically saving its content."},"/api/persister-file/interfaces/persister/filepersister/methods/save/save/":{"n":"save","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once."},"/api/persister-file/interfaces/persister/filepersister/methods/save/startautosave/":{"n":"startAutoSave","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once, and then continuously."},"/api/persister-file/interfaces/persister/filepersister/methods/save/stopautosave/":{"n":"stopAutoSave","s":"The stopAutoSave method stops the automatic save of data to storage previously started with the startAutoSave method."},"/api/persister-file/interfaces/persister/filepersister/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the Persister, and is used for debugging purposes."},"/api/persister-file/interfaces/persister/filepersister/":{"n":"FilePersister","s":"The FilePersister interface represents a Persister that lets you save and load Store data to and from a local file system."},"/api/persister-file/functions/creation/createfilepersister/":{"n":"createFilePersister","s":"The createFilePersister function creates a FilePersister object that can persist the Store to a local file."},"/api/persister-file/":{"n":"persister-file","s":"The persister-file module of the TinyBase project lets you save and load Store data to and from a local file system (in an appropriate environment)."},"/api/persister-indexed-db/interfaces/persister/indexeddbpersister/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store or MergeableStore that is backing this Persister object."},"/api/persister-indexed-db/interfaces/persister/indexeddbpersister/methods/getter/getdbname/":{"n":"getDbName","s":"The getDbName method returns the unique key of the IndexedDB the Store is being persisted to."},"/api/persister-indexed-db/interfaces/persister/indexeddbpersister/methods/listener/addstatuslistener/":{"n":"addStatusListener","s":"The addStatusListener method registers a listener function with the Persister that will be called whenever it starts or stops loading or saving."},"/api/persister-indexed-db/interfaces/persister/indexeddbpersister/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Persister."},"/api/persister-indexed-db/interfaces/persister/indexeddbpersister/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Persister object is no longer used."},"/api/persister-indexed-db/interfaces/persister/indexeddbpersister/methods/lifecycle/getstatus/":{"n":"getStatus","s":"The getStatus method lets you find out if the Persister is currently in the process of loading or saving content."},"/api/persister-indexed-db/interfaces/persister/indexeddbpersister/methods/lifecycle/schedule/":{"n":"schedule","s":"The schedule method allows you to queue up a series of asynchronous actions that must run in sequence during persistence."},"/api/persister-indexed-db/interfaces/persister/indexeddbpersister/methods/lifecycle/startautopersisting/":{"n":"startAutoPersisting","s":"The startAutoPersist method is a convenience method that starts both automatic loading and saving of the Store data."},"/api/persister-indexed-db/interfaces/persister/indexeddbpersister/methods/lifecycle/stopautopersisting/":{"n":"stopAutoPersisting","s":"The stopAutoPersist method is a convenience method that stops both automatic loading and saving of the Store data."},"/api/persister-indexed-db/interfaces/persister/indexeddbpersister/methods/load/isautoloading/":{"n":"isAutoLoading","s":"The isAutoLoading method lets you find out if the Persister is currently automatically loading its content."},"/api/persister-indexed-db/interfaces/persister/indexeddbpersister/methods/load/load/":{"n":"load","s":"The load method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once."},"/api/persister-indexed-db/interfaces/persister/indexeddbpersister/methods/load/startautoload/":{"n":"startAutoLoad","s":"The startAutoLoad method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once, and then continuously."},"/api/persister-indexed-db/interfaces/persister/indexeddbpersister/methods/load/stopautoload/":{"n":"stopAutoLoad","s":"The stopAutoLoad method stops the automatic loading of data from storage previously started with the startAutoLoad method."},"/api/persister-indexed-db/interfaces/persister/indexeddbpersister/methods/save/isautosaving/":{"n":"isAutoSaving","s":"The isAutoSaving method lets you find out if the Persister is currently automatically saving its content."},"/api/persister-indexed-db/interfaces/persister/indexeddbpersister/methods/save/save/":{"n":"save","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once."},"/api/persister-indexed-db/interfaces/persister/indexeddbpersister/methods/save/startautosave/":{"n":"startAutoSave","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once, and then continuously."},"/api/persister-indexed-db/interfaces/persister/indexeddbpersister/methods/save/stopautosave/":{"n":"stopAutoSave","s":"The stopAutoSave method stops the automatic save of data to storage previously started with the startAutoSave method."},"/api/persister-indexed-db/interfaces/persister/indexeddbpersister/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the Persister, and is used for debugging purposes."},"/api/persister-indexed-db/interfaces/persister/indexeddbpersister/":{"n":"IndexedDbPersister","s":"The IndexedDbPersister interface represents a Persister that lets you save and load Store data to and from browser IndexedDB storage."},"/api/persister-indexed-db/functions/creation/createindexeddbpersister/":{"n":"createIndexedDbPersister","s":"The createIndexedDbPersister function creates an IndexedDbPersister object that can persist a Store to the browser's IndexedDB storage."},"/api/persister-indexed-db/":{"n":"persister-indexed-db","s":"The persister-indexed-db module of the TinyBase project lets you save and load Store data to and from browser IndexedDB storage."},"/api/persister-libsql/interfaces/persister/libsqlpersister/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store or MergeableStore that is backing this Persister object."},"/api/persister-libsql/interfaces/persister/libsqlpersister/methods/getter/getclient/":{"n":"getClient","s":"The getClient method returns a reference to the database client the Store is being persisted to."},"/api/persister-libsql/interfaces/persister/libsqlpersister/methods/listener/addstatuslistener/":{"n":"addStatusListener","s":"The addStatusListener method registers a listener function with the Persister that will be called whenever it starts or stops loading or saving."},"/api/persister-libsql/interfaces/persister/libsqlpersister/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Persister."},"/api/persister-libsql/interfaces/persister/libsqlpersister/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Persister object is no longer used."},"/api/persister-libsql/interfaces/persister/libsqlpersister/methods/lifecycle/getstatus/":{"n":"getStatus","s":"The getStatus method lets you find out if the Persister is currently in the process of loading or saving content."},"/api/persister-libsql/interfaces/persister/libsqlpersister/methods/lifecycle/schedule/":{"n":"schedule","s":"The schedule method allows you to queue up a series of asynchronous actions that must run in sequence during persistence."},"/api/persister-libsql/interfaces/persister/libsqlpersister/methods/lifecycle/startautopersisting/":{"n":"startAutoPersisting","s":"The startAutoPersist method is a convenience method that starts both automatic loading and saving of the Store data."},"/api/persister-libsql/interfaces/persister/libsqlpersister/methods/lifecycle/stopautopersisting/":{"n":"stopAutoPersisting","s":"The stopAutoPersist method is a convenience method that stops both automatic loading and saving of the Store data."},"/api/persister-libsql/interfaces/persister/libsqlpersister/methods/load/isautoloading/":{"n":"isAutoLoading","s":"The isAutoLoading method lets you find out if the Persister is currently automatically loading its content."},"/api/persister-libsql/interfaces/persister/libsqlpersister/methods/load/load/":{"n":"load","s":"The load method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once."},"/api/persister-libsql/interfaces/persister/libsqlpersister/methods/load/startautoload/":{"n":"startAutoLoad","s":"The startAutoLoad method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once, and then continuously."},"/api/persister-libsql/interfaces/persister/libsqlpersister/methods/load/stopautoload/":{"n":"stopAutoLoad","s":"The stopAutoLoad method stops the automatic loading of data from storage previously started with the startAutoLoad method."},"/api/persister-libsql/interfaces/persister/libsqlpersister/methods/save/isautosaving/":{"n":"isAutoSaving","s":"The isAutoSaving method lets you find out if the Persister is currently automatically saving its content."},"/api/persister-libsql/interfaces/persister/libsqlpersister/methods/save/save/":{"n":"save","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once."},"/api/persister-libsql/interfaces/persister/libsqlpersister/methods/save/startautosave/":{"n":"startAutoSave","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once, and then continuously."},"/api/persister-libsql/interfaces/persister/libsqlpersister/methods/save/stopautosave/":{"n":"stopAutoSave","s":"The stopAutoSave method stops the automatic save of data to storage previously started with the startAutoSave method."},"/api/persister-libsql/interfaces/persister/libsqlpersister/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the Persister, and is used for debugging purposes."},"/api/persister-libsql/interfaces/persister/libsqlpersister/":{"n":"LibSqlPersister","s":"The LibSqlPersister interface represents a Persister that lets you save and load Store data to and from a local LibSQL database."},"/api/persister-libsql/functions/creation/createlibsqlpersister/":{"n":"createLibSqlPersister","s":"The createLibSqlPersister function creates a LibSqlPersister object that can persist a Store to a local LibSQL database."},"/api/persister-libsql/":{"n":"persister-libsql","s":"The persister-libsql module of the TinyBase project lets you save and load Store data to and from a local LibSQL database (in an appropriate environment)."},"/api/persister-partykit-client/interfaces/persister/partykitpersister/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store or MergeableStore that is backing this Persister object."},"/api/persister-partykit-client/interfaces/persister/partykitpersister/methods/getter/getconnection/":{"n":"getConnection","s":"The getConnection method returns the PartySocket the Store is being persisted to."},"/api/persister-partykit-client/interfaces/persister/partykitpersister/methods/listener/addstatuslistener/":{"n":"addStatusListener","s":"The addStatusListener method registers a listener function with the Persister that will be called whenever it starts or stops loading or saving."},"/api/persister-partykit-client/interfaces/persister/partykitpersister/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Persister."},"/api/persister-partykit-client/interfaces/persister/partykitpersister/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Persister object is no longer used."},"/api/persister-partykit-client/interfaces/persister/partykitpersister/methods/lifecycle/getstatus/":{"n":"getStatus","s":"The getStatus method lets you find out if the Persister is currently in the process of loading or saving content."},"/api/persister-partykit-client/interfaces/persister/partykitpersister/methods/lifecycle/schedule/":{"n":"schedule","s":"The schedule method allows you to queue up a series of asynchronous actions that must run in sequence during persistence."},"/api/persister-partykit-client/interfaces/persister/partykitpersister/methods/lifecycle/startautopersisting/":{"n":"startAutoPersisting","s":"The startAutoPersist method is a convenience method that starts both automatic loading and saving of the Store data."},"/api/persister-partykit-client/interfaces/persister/partykitpersister/methods/lifecycle/stopautopersisting/":{"n":"stopAutoPersisting","s":"The stopAutoPersist method is a convenience method that stops both automatic loading and saving of the Store data."},"/api/persister-partykit-client/interfaces/persister/partykitpersister/methods/load/isautoloading/":{"n":"isAutoLoading","s":"The isAutoLoading method lets you find out if the Persister is currently automatically loading its content."},"/api/persister-partykit-client/interfaces/persister/partykitpersister/methods/load/load/":{"n":"load","s":"The load method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once."},"/api/persister-partykit-client/interfaces/persister/partykitpersister/methods/load/startautoload/":{"n":"startAutoLoad","s":"The startAutoLoad method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once, and then continuously."},"/api/persister-partykit-client/interfaces/persister/partykitpersister/methods/load/stopautoload/":{"n":"stopAutoLoad","s":"The stopAutoLoad method stops the automatic loading of data from storage previously started with the startAutoLoad method."},"/api/persister-partykit-client/interfaces/persister/partykitpersister/methods/save/isautosaving/":{"n":"isAutoSaving","s":"The isAutoSaving method lets you find out if the Persister is currently automatically saving its content."},"/api/persister-partykit-client/interfaces/persister/partykitpersister/methods/save/save/":{"n":"save","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once."},"/api/persister-partykit-client/interfaces/persister/partykitpersister/methods/save/startautosave/":{"n":"startAutoSave","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once, and then continuously."},"/api/persister-partykit-client/interfaces/persister/partykitpersister/methods/save/stopautosave/":{"n":"stopAutoSave","s":"The stopAutoSave method stops the automatic save of data to storage previously started with the startAutoSave method."},"/api/persister-partykit-client/interfaces/persister/partykitpersister/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the Persister, and is used for debugging purposes."},"/api/persister-partykit-client/interfaces/persister/partykitpersister/":{"n":"PartyKitPersister","s":"The PartyKitPersister interface represents a Persister that lets you save and load Store data from the client to the durable PartyKit cloud storage of a server."},"/api/persister-partykit-client/functions/creation/createpartykitpersister/":{"n":"createPartyKitPersister","s":"The createPartyKitPersister function creates a PartyKitPersister object that can persist the Store to durable PartyKit storage, enabling synchronization of the same Store across multiple clients."},"/api/persister-partykit-client/type-aliases/configuration/partykitpersisterconfig/":{"n":"PartyKitPersisterConfig","s":"The PartyKitPersisterConfig type describes the configuration of a PartyKit Persister on the client side."},"/api/persister-partykit-client/":{"n":"persister-partykit-client","s":"The persister-partykit-client module of the TinyBase project contains the client portion of the PartyKit integration."},"/api/persister-partykit-server/classes/server/tinybasepartykitserver/constructors/creation/constructor/":{"n":"constructor","s":"The constructor is used to create the server."},"/api/persister-partykit-server/classes/server/tinybasepartykitserver/methods/connection/onmessage/":{"n":"onMessage","s":"The onMessage method is called when the server receives a message from a client."},"/api/persister-partykit-server/classes/server/tinybasepartykitserver/methods/connection/onrequest/":{"n":"onRequest","s":"The onRequest method is called when a HTTP request is made to the party URL."},"/api/persister-partykit-server/classes/server/tinybasepartykitserver/methods/sanitization/candeltable/":{"n":"canDelTable","s":"The canDelTable method lets you allow or disallow deletions of a Table stored on the server, as sent from a client."},"/api/persister-partykit-server/classes/server/tinybasepartykitserver/methods/sanitization/cansettable/":{"n":"canSetTable","s":"The canSetTable method lets you allow or disallow any changes to a Table stored on the server, as sent from a client."},"/api/persister-partykit-server/classes/server/tinybasepartykitserver/methods/sanitization/candelrow/":{"n":"canDelRow","s":"The canDelRow method lets you allow or disallow deletions of a Row stored on the server, as sent from a client."},"/api/persister-partykit-server/classes/server/tinybasepartykitserver/methods/sanitization/cansetrow/":{"n":"canSetRow","s":"The canSetRow method lets you allow or disallow any changes to a Row stored on the server, as sent from a client."},"/api/persister-partykit-server/classes/server/tinybasepartykitserver/methods/sanitization/candelcell/":{"n":"canDelCell","s":"The canDelCell method lets you allow or disallow deletions of a Cell stored on the server, as sent from a client."},"/api/persister-partykit-server/classes/server/tinybasepartykitserver/methods/sanitization/cansetcell/":{"n":"canSetCell","s":"The canSetCell method lets you allow or disallow any changes to a Cell stored on the server, as sent from a client."},"/api/persister-partykit-server/classes/server/tinybasepartykitserver/methods/sanitization/candelvalue/":{"n":"canDelValue","s":"The canDelValue method lets you allow or disallow deletions of a Value stored on the server, as sent from a client."},"/api/persister-partykit-server/classes/server/tinybasepartykitserver/methods/sanitization/cansetvalue/":{"n":"canSetValue","s":"The canSetValue method lets you allow or disallow any changes to a Value stored on the server, as sent from a client."},"/api/persister-partykit-server/classes/server/tinybasepartykitserver/properties/configuration/config/":{"n":"config","s":"The config property is used to optionally configure the server, using an object of the TinyBasePartyKitServerConfig type."},"/api/persister-partykit-server/classes/server/tinybasepartykitserver/":{"n":"TinyBasePartyKitServer","s":"A TinyBasePartyKitServer is the server component for persisting the Store to durable PartyKit storage, enabling synchronization of the same Store across multiple clients."},"/api/persister-partykit-server/functions/connection/broadcastchanges/":{"n":"broadcastChanges","s":"The broadcastChanges function allows you to broadcast Store changes to all the client connections of a TinyBasePartyKitServer."},"/api/persister-partykit-server/functions/storage/hasstoreinstorage/":{"n":"hasStoreInStorage","s":"The hasStoreInStorage function returns a boolean indicating whether durable PartyKit storage contains a serialized Store."},"/api/persister-partykit-server/functions/storage/loadstorefromstorage/":{"n":"loadStoreFromStorage","s":"The loadStoreFromStorage function returns the content of a Store from durable PartyKit storage."},"/api/persister-partykit-server/type-aliases/configuration/tinybasepartykitserverconfig/":{"n":"TinyBasePartyKitServerConfig","s":"The TinyBasePartyKitServerConfig type describes the configuration of a PartyKit Persister on the server side."},"/api/persister-partykit-server/":{"n":"persister-partykit-server","s":"The persister-partykit-server module of the TinyBase project contains the server portion of the PartyKit integration."},"/api/persister-pglite/interfaces/persister/pglitepersister/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store or MergeableStore that is backing this Persister object."},"/api/persister-pglite/interfaces/persister/pglitepersister/methods/getter/getpglite/":{"n":"getPglite","s":"The getPglite method returns a reference to the database connection the Store is being persisted to."},"/api/persister-pglite/interfaces/persister/pglitepersister/methods/listener/addstatuslistener/":{"n":"addStatusListener","s":"The addStatusListener method registers a listener function with the Persister that will be called whenever it starts or stops loading or saving."},"/api/persister-pglite/interfaces/persister/pglitepersister/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Persister."},"/api/persister-pglite/interfaces/persister/pglitepersister/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Persister object is no longer used."},"/api/persister-pglite/interfaces/persister/pglitepersister/methods/lifecycle/getstatus/":{"n":"getStatus","s":"The getStatus method lets you find out if the Persister is currently in the process of loading or saving content."},"/api/persister-pglite/interfaces/persister/pglitepersister/methods/lifecycle/schedule/":{"n":"schedule","s":"The schedule method allows you to queue up a series of asynchronous actions that must run in sequence during persistence."},"/api/persister-pglite/interfaces/persister/pglitepersister/methods/lifecycle/startautopersisting/":{"n":"startAutoPersisting","s":"The startAutoPersist method is a convenience method that starts both automatic loading and saving of the Store data."},"/api/persister-pglite/interfaces/persister/pglitepersister/methods/lifecycle/stopautopersisting/":{"n":"stopAutoPersisting","s":"The stopAutoPersist method is a convenience method that stops both automatic loading and saving of the Store data."},"/api/persister-pglite/interfaces/persister/pglitepersister/methods/load/isautoloading/":{"n":"isAutoLoading","s":"The isAutoLoading method lets you find out if the Persister is currently automatically loading its content."},"/api/persister-pglite/interfaces/persister/pglitepersister/methods/load/load/":{"n":"load","s":"The load method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once."},"/api/persister-pglite/interfaces/persister/pglitepersister/methods/load/startautoload/":{"n":"startAutoLoad","s":"The startAutoLoad method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once, and then continuously."},"/api/persister-pglite/interfaces/persister/pglitepersister/methods/load/stopautoload/":{"n":"stopAutoLoad","s":"The stopAutoLoad method stops the automatic loading of data from storage previously started with the startAutoLoad method."},"/api/persister-pglite/interfaces/persister/pglitepersister/methods/save/isautosaving/":{"n":"isAutoSaving","s":"The isAutoSaving method lets you find out if the Persister is currently automatically saving its content."},"/api/persister-pglite/interfaces/persister/pglitepersister/methods/save/save/":{"n":"save","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once."},"/api/persister-pglite/interfaces/persister/pglitepersister/methods/save/startautosave/":{"n":"startAutoSave","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once, and then continuously."},"/api/persister-pglite/interfaces/persister/pglitepersister/methods/save/stopautosave/":{"n":"stopAutoSave","s":"The stopAutoSave method stops the automatic save of data to storage previously started with the startAutoSave method."},"/api/persister-pglite/interfaces/persister/pglitepersister/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the Persister, and is used for debugging purposes."},"/api/persister-pglite/interfaces/persister/pglitepersister/":{"n":"PglitePersister","s":"The PglitePersister interface represents a Persister that lets you save and load Store data to and from a local PGlite database."},"/api/persister-pglite/functions/creation/createpglitepersister/":{"n":"createPglitePersister","s":"The createPglitePersister function creates a PglitePersister object that can persist the Store to a local PGlite database."},"/api/persister-pglite/":{"n":"persister-pglite","s":"The persister-pglite module of the TinyBase project lets you save and load Store data to and from a PGlite database (in an appropriate environment)."},"/api/persister-postgres/interfaces/persister/postgrespersister/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store or MergeableStore that is backing this Persister object."},"/api/persister-postgres/interfaces/persister/postgrespersister/methods/getter/getsql/":{"n":"getSql","s":"The getSql method returns a reference to the database connection the Store is being persisted to."},"/api/persister-postgres/interfaces/persister/postgrespersister/methods/listener/addstatuslistener/":{"n":"addStatusListener","s":"The addStatusListener method registers a listener function with the Persister that will be called whenever it starts or stops loading or saving."},"/api/persister-postgres/interfaces/persister/postgrespersister/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Persister."},"/api/persister-postgres/interfaces/persister/postgrespersister/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Persister object is no longer used."},"/api/persister-postgres/interfaces/persister/postgrespersister/methods/lifecycle/getstatus/":{"n":"getStatus","s":"The getStatus method lets you find out if the Persister is currently in the process of loading or saving content."},"/api/persister-postgres/interfaces/persister/postgrespersister/methods/lifecycle/schedule/":{"n":"schedule","s":"The schedule method allows you to queue up a series of asynchronous actions that must run in sequence during persistence."},"/api/persister-postgres/interfaces/persister/postgrespersister/methods/lifecycle/startautopersisting/":{"n":"startAutoPersisting","s":"The startAutoPersist method is a convenience method that starts both automatic loading and saving of the Store data."},"/api/persister-postgres/interfaces/persister/postgrespersister/methods/lifecycle/stopautopersisting/":{"n":"stopAutoPersisting","s":"The stopAutoPersist method is a convenience method that stops both automatic loading and saving of the Store data."},"/api/persister-postgres/interfaces/persister/postgrespersister/methods/load/isautoloading/":{"n":"isAutoLoading","s":"The isAutoLoading method lets you find out if the Persister is currently automatically loading its content."},"/api/persister-postgres/interfaces/persister/postgrespersister/methods/load/load/":{"n":"load","s":"The load method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once."},"/api/persister-postgres/interfaces/persister/postgrespersister/methods/load/startautoload/":{"n":"startAutoLoad","s":"The startAutoLoad method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once, and then continuously."},"/api/persister-postgres/interfaces/persister/postgrespersister/methods/load/stopautoload/":{"n":"stopAutoLoad","s":"The stopAutoLoad method stops the automatic loading of data from storage previously started with the startAutoLoad method."},"/api/persister-postgres/interfaces/persister/postgrespersister/methods/save/isautosaving/":{"n":"isAutoSaving","s":"The isAutoSaving method lets you find out if the Persister is currently automatically saving its content."},"/api/persister-postgres/interfaces/persister/postgrespersister/methods/save/save/":{"n":"save","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once."},"/api/persister-postgres/interfaces/persister/postgrespersister/methods/save/startautosave/":{"n":"startAutoSave","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once, and then continuously."},"/api/persister-postgres/interfaces/persister/postgrespersister/methods/save/stopautosave/":{"n":"stopAutoSave","s":"The stopAutoSave method stops the automatic save of data to storage previously started with the startAutoSave method."},"/api/persister-postgres/interfaces/persister/postgrespersister/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the Persister, and is used for debugging purposes."},"/api/persister-postgres/interfaces/persister/postgrespersister/":{"n":"PostgresPersister","s":"The PostgresPersister interface represents a Persister that lets you save and load Store data to and from a local PostgreSQL database."},"/api/persister-postgres/functions/creation/createpostgrespersister/":{"n":"createPostgresPersister","s":"The createPostgresPersister function creates a PostgresPersister object that can persist the Store to a local PostgreSQL database."},"/api/persister-postgres/":{"n":"persister-postgres","s":"The persister-postgres module of the TinyBase project lets you save and load Store data to and from a PostgreSQL database (in an appropriate environment)."},"/api/persister-powersync/interfaces/persister/powersyncpersister/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store or MergeableStore that is backing this Persister object."},"/api/persister-powersync/interfaces/persister/powersyncpersister/methods/getter/getpowersync/":{"n":"getPowerSync","s":"The getPowerSync method returns a reference to the PowerSync instance the Store is being persisted to."},"/api/persister-powersync/interfaces/persister/powersyncpersister/methods/listener/addstatuslistener/":{"n":"addStatusListener","s":"The addStatusListener method registers a listener function with the Persister that will be called whenever it starts or stops loading or saving."},"/api/persister-powersync/interfaces/persister/powersyncpersister/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Persister."},"/api/persister-powersync/interfaces/persister/powersyncpersister/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Persister object is no longer used."},"/api/persister-powersync/interfaces/persister/powersyncpersister/methods/lifecycle/getstatus/":{"n":"getStatus","s":"The getStatus method lets you find out if the Persister is currently in the process of loading or saving content."},"/api/persister-powersync/interfaces/persister/powersyncpersister/methods/lifecycle/schedule/":{"n":"schedule","s":"The schedule method allows you to queue up a series of asynchronous actions that must run in sequence during persistence."},"/api/persister-powersync/interfaces/persister/powersyncpersister/methods/lifecycle/startautopersisting/":{"n":"startAutoPersisting","s":"The startAutoPersist method is a convenience method that starts both automatic loading and saving of the Store data."},"/api/persister-powersync/interfaces/persister/powersyncpersister/methods/lifecycle/stopautopersisting/":{"n":"stopAutoPersisting","s":"The stopAutoPersist method is a convenience method that stops both automatic loading and saving of the Store data."},"/api/persister-powersync/interfaces/persister/powersyncpersister/methods/load/isautoloading/":{"n":"isAutoLoading","s":"The isAutoLoading method lets you find out if the Persister is currently automatically loading its content."},"/api/persister-powersync/interfaces/persister/powersyncpersister/methods/load/load/":{"n":"load","s":"The load method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once."},"/api/persister-powersync/interfaces/persister/powersyncpersister/methods/load/startautoload/":{"n":"startAutoLoad","s":"The startAutoLoad method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once, and then continuously."},"/api/persister-powersync/interfaces/persister/powersyncpersister/methods/load/stopautoload/":{"n":"stopAutoLoad","s":"The stopAutoLoad method stops the automatic loading of data from storage previously started with the startAutoLoad method."},"/api/persister-powersync/interfaces/persister/powersyncpersister/methods/save/isautosaving/":{"n":"isAutoSaving","s":"The isAutoSaving method lets you find out if the Persister is currently automatically saving its content."},"/api/persister-powersync/interfaces/persister/powersyncpersister/methods/save/save/":{"n":"save","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once."},"/api/persister-powersync/interfaces/persister/powersyncpersister/methods/save/startautosave/":{"n":"startAutoSave","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once, and then continuously."},"/api/persister-powersync/interfaces/persister/powersyncpersister/methods/save/stopautosave/":{"n":"stopAutoSave","s":"The stopAutoSave method stops the automatic save of data to storage previously started with the startAutoSave method."},"/api/persister-powersync/interfaces/persister/powersyncpersister/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the Persister, and is used for debugging purposes."},"/api/persister-powersync/interfaces/persister/powersyncpersister/":{"n":"PowerSyncPersister","s":"The PowerSyncPersister interface represents a Persister that lets you save and load Store data to and from a local SQLite database that is automatically synced using the PowerSync service."},"/api/persister-powersync/functions/creation/createpowersyncpersister/":{"n":"createPowerSyncPersister","s":"The createPowerSyncPersister function creates a PowerSyncPersister object that can persist the Store to a local SQLite database that is automatically synced using the PowerSync service."},"/api/persister-powersync/":{"n":"persister-powersync","s":"The persister-powersync module of the TinyBase project lets you save and load Store data to and from a local SQLite database that is automatically synced using the PowerSync service."},"/api/persister-remote/interfaces/persister/remotepersister/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store or MergeableStore that is backing this Persister object."},"/api/persister-remote/interfaces/persister/remotepersister/methods/getter/geturls/":{"n":"getUrls","s":"The getUrls method returns the URLs the Store is being persisted to."},"/api/persister-remote/interfaces/persister/remotepersister/methods/listener/addstatuslistener/":{"n":"addStatusListener","s":"The addStatusListener method registers a listener function with the Persister that will be called whenever it starts or stops loading or saving."},"/api/persister-remote/interfaces/persister/remotepersister/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Persister."},"/api/persister-remote/interfaces/persister/remotepersister/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Persister object is no longer used."},"/api/persister-remote/interfaces/persister/remotepersister/methods/lifecycle/getstatus/":{"n":"getStatus","s":"The getStatus method lets you find out if the Persister is currently in the process of loading or saving content."},"/api/persister-remote/interfaces/persister/remotepersister/methods/lifecycle/schedule/":{"n":"schedule","s":"The schedule method allows you to queue up a series of asynchronous actions that must run in sequence during persistence."},"/api/persister-remote/interfaces/persister/remotepersister/methods/lifecycle/startautopersisting/":{"n":"startAutoPersisting","s":"The startAutoPersist method is a convenience method that starts both automatic loading and saving of the Store data."},"/api/persister-remote/interfaces/persister/remotepersister/methods/lifecycle/stopautopersisting/":{"n":"stopAutoPersisting","s":"The stopAutoPersist method is a convenience method that stops both automatic loading and saving of the Store data."},"/api/persister-remote/interfaces/persister/remotepersister/methods/load/isautoloading/":{"n":"isAutoLoading","s":"The isAutoLoading method lets you find out if the Persister is currently automatically loading its content."},"/api/persister-remote/interfaces/persister/remotepersister/methods/load/load/":{"n":"load","s":"The load method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once."},"/api/persister-remote/interfaces/persister/remotepersister/methods/load/startautoload/":{"n":"startAutoLoad","s":"The startAutoLoad method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once, and then continuously."},"/api/persister-remote/interfaces/persister/remotepersister/methods/load/stopautoload/":{"n":"stopAutoLoad","s":"The stopAutoLoad method stops the automatic loading of data from storage previously started with the startAutoLoad method."},"/api/persister-remote/interfaces/persister/remotepersister/methods/save/isautosaving/":{"n":"isAutoSaving","s":"The isAutoSaving method lets you find out if the Persister is currently automatically saving its content."},"/api/persister-remote/interfaces/persister/remotepersister/methods/save/save/":{"n":"save","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once."},"/api/persister-remote/interfaces/persister/remotepersister/methods/save/startautosave/":{"n":"startAutoSave","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once, and then continuously."},"/api/persister-remote/interfaces/persister/remotepersister/methods/save/stopautosave/":{"n":"stopAutoSave","s":"The stopAutoSave method stops the automatic save of data to storage previously started with the startAutoSave method."},"/api/persister-remote/interfaces/persister/remotepersister/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the Persister, and is used for debugging purposes."},"/api/persister-remote/interfaces/persister/remotepersister/":{"n":"RemotePersister","s":"The RemotePersister interface represents a Persister that lets you save and load Store data to and from a remote server."},"/api/persister-remote/functions/creation/createremotepersister/":{"n":"createRemotePersister","s":"The createRemotePersister function creates a RemotePersister object that can persist the Store to a remote server."},"/api/persister-remote/":{"n":"persister-remote","s":"The persister-remote module of the TinyBase project lets you save and load Store data to and from a remote server."},"/api/persister-sqlite-bun/interfaces/persister/sqlitebunpersister/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store or MergeableStore that is backing this Persister object."},"/api/persister-sqlite-bun/interfaces/persister/sqlitebunpersister/methods/getter/getdb/":{"n":"getDb","s":"The getDb method returns a reference to the database instance the Store is being persisted to."},"/api/persister-sqlite-bun/interfaces/persister/sqlitebunpersister/methods/listener/addstatuslistener/":{"n":"addStatusListener","s":"The addStatusListener method registers a listener function with the Persister that will be called whenever it starts or stops loading or saving."},"/api/persister-sqlite-bun/interfaces/persister/sqlitebunpersister/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Persister."},"/api/persister-sqlite-bun/interfaces/persister/sqlitebunpersister/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Persister object is no longer used."},"/api/persister-sqlite-bun/interfaces/persister/sqlitebunpersister/methods/lifecycle/getstatus/":{"n":"getStatus","s":"The getStatus method lets you find out if the Persister is currently in the process of loading or saving content."},"/api/persister-sqlite-bun/interfaces/persister/sqlitebunpersister/methods/lifecycle/schedule/":{"n":"schedule","s":"The schedule method allows you to queue up a series of asynchronous actions that must run in sequence during persistence."},"/api/persister-sqlite-bun/interfaces/persister/sqlitebunpersister/methods/lifecycle/startautopersisting/":{"n":"startAutoPersisting","s":"The startAutoPersist method is a convenience method that starts both automatic loading and saving of the Store data."},"/api/persister-sqlite-bun/interfaces/persister/sqlitebunpersister/methods/lifecycle/stopautopersisting/":{"n":"stopAutoPersisting","s":"The stopAutoPersist method is a convenience method that stops both automatic loading and saving of the Store data."},"/api/persister-sqlite-bun/interfaces/persister/sqlitebunpersister/methods/load/isautoloading/":{"n":"isAutoLoading","s":"The isAutoLoading method lets you find out if the Persister is currently automatically loading its content."},"/api/persister-sqlite-bun/interfaces/persister/sqlitebunpersister/methods/load/load/":{"n":"load","s":"The load method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once."},"/api/persister-sqlite-bun/interfaces/persister/sqlitebunpersister/methods/load/startautoload/":{"n":"startAutoLoad","s":"The startAutoLoad method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once, and then continuously."},"/api/persister-sqlite-bun/interfaces/persister/sqlitebunpersister/methods/load/stopautoload/":{"n":"stopAutoLoad","s":"The stopAutoLoad method stops the automatic loading of data from storage previously started with the startAutoLoad method."},"/api/persister-sqlite-bun/interfaces/persister/sqlitebunpersister/methods/save/isautosaving/":{"n":"isAutoSaving","s":"The isAutoSaving method lets you find out if the Persister is currently automatically saving its content."},"/api/persister-sqlite-bun/interfaces/persister/sqlitebunpersister/methods/save/save/":{"n":"save","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once."},"/api/persister-sqlite-bun/interfaces/persister/sqlitebunpersister/methods/save/startautosave/":{"n":"startAutoSave","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once, and then continuously."},"/api/persister-sqlite-bun/interfaces/persister/sqlitebunpersister/methods/save/stopautosave/":{"n":"stopAutoSave","s":"The stopAutoSave method stops the automatic save of data to storage previously started with the startAutoSave method."},"/api/persister-sqlite-bun/interfaces/persister/sqlitebunpersister/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the Persister, and is used for debugging purposes."},"/api/persister-sqlite-bun/interfaces/persister/sqlitebunpersister/":{"n":"SqliteBunPersister","s":"The SqliteBunPersister interface represents a Persister that lets you save and load Store data to and from a local Bun SQLite database."},"/api/persister-sqlite-bun/functions/creation/createsqlitebunpersister/":{"n":"createSqliteBunPersister","s":"The createSqliteBunPersister function creates a SqliteBunPersister object that can persist the Store to a local Bun SQLite database."},"/api/persister-sqlite-bun/":{"n":"persister-sqlite-bun","s":"The persister-sqlite-bun module of the TinyBase project lets you save and load Store data to and from a local Bun SQLite database (in an appropriate environment)."},"/api/persister-sqlite-wasm/interfaces/persister/sqlitewasmpersister/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store or MergeableStore that is backing this Persister object."},"/api/persister-sqlite-wasm/interfaces/persister/sqlitewasmpersister/methods/getter/getdb/":{"n":"getDb","s":"The getDb method returns a reference to the database instance the Store is being persisted to."},"/api/persister-sqlite-wasm/interfaces/persister/sqlitewasmpersister/methods/listener/addstatuslistener/":{"n":"addStatusListener","s":"The addStatusListener method registers a listener function with the Persister that will be called whenever it starts or stops loading or saving."},"/api/persister-sqlite-wasm/interfaces/persister/sqlitewasmpersister/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Persister."},"/api/persister-sqlite-wasm/interfaces/persister/sqlitewasmpersister/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Persister object is no longer used."},"/api/persister-sqlite-wasm/interfaces/persister/sqlitewasmpersister/methods/lifecycle/getstatus/":{"n":"getStatus","s":"The getStatus method lets you find out if the Persister is currently in the process of loading or saving content."},"/api/persister-sqlite-wasm/interfaces/persister/sqlitewasmpersister/methods/lifecycle/schedule/":{"n":"schedule","s":"The schedule method allows you to queue up a series of asynchronous actions that must run in sequence during persistence."},"/api/persister-sqlite-wasm/interfaces/persister/sqlitewasmpersister/methods/lifecycle/startautopersisting/":{"n":"startAutoPersisting","s":"The startAutoPersist method is a convenience method that starts both automatic loading and saving of the Store data."},"/api/persister-sqlite-wasm/interfaces/persister/sqlitewasmpersister/methods/lifecycle/stopautopersisting/":{"n":"stopAutoPersisting","s":"The stopAutoPersist method is a convenience method that stops both automatic loading and saving of the Store data."},"/api/persister-sqlite-wasm/interfaces/persister/sqlitewasmpersister/methods/load/isautoloading/":{"n":"isAutoLoading","s":"The isAutoLoading method lets you find out if the Persister is currently automatically loading its content."},"/api/persister-sqlite-wasm/interfaces/persister/sqlitewasmpersister/methods/load/load/":{"n":"load","s":"The load method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once."},"/api/persister-sqlite-wasm/interfaces/persister/sqlitewasmpersister/methods/load/startautoload/":{"n":"startAutoLoad","s":"The startAutoLoad method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once, and then continuously."},"/api/persister-sqlite-wasm/interfaces/persister/sqlitewasmpersister/methods/load/stopautoload/":{"n":"stopAutoLoad","s":"The stopAutoLoad method stops the automatic loading of data from storage previously started with the startAutoLoad method."},"/api/persister-sqlite-wasm/interfaces/persister/sqlitewasmpersister/methods/save/isautosaving/":{"n":"isAutoSaving","s":"The isAutoSaving method lets you find out if the Persister is currently automatically saving its content."},"/api/persister-sqlite-wasm/interfaces/persister/sqlitewasmpersister/methods/save/save/":{"n":"save","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once."},"/api/persister-sqlite-wasm/interfaces/persister/sqlitewasmpersister/methods/save/startautosave/":{"n":"startAutoSave","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once, and then continuously."},"/api/persister-sqlite-wasm/interfaces/persister/sqlitewasmpersister/methods/save/stopautosave/":{"n":"stopAutoSave","s":"The stopAutoSave method stops the automatic save of data to storage previously started with the startAutoSave method."},"/api/persister-sqlite-wasm/interfaces/persister/sqlitewasmpersister/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the Persister, and is used for debugging purposes."},"/api/persister-sqlite-wasm/interfaces/persister/sqlitewasmpersister/":{"n":"SqliteWasmPersister","s":"The SqliteWasmPersister interface represents a Persister that lets you save and load Store data to and from a local SQLite database."},"/api/persister-sqlite-wasm/functions/creation/createsqlitewasmpersister/":{"n":"createSqliteWasmPersister","s":"The createSqliteWasmPersister function creates a SqliteWasmPersister object that can persist the Store to a local SQLite database."},"/api/persister-sqlite-wasm/":{"n":"persister-sqlite-wasm","s":"The persister-sqlite-wasm module of the TinyBase project lets you save and load Store data to and from a local SQLite database (in an appropriate environment)."},"/api/persister-sqlite3/interfaces/persister/sqlite3persister/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store or MergeableStore that is backing this Persister object."},"/api/persister-sqlite3/interfaces/persister/sqlite3persister/methods/getter/getdb/":{"n":"getDb","s":"The getDb method returns a reference to the database instance the Store is being persisted to."},"/api/persister-sqlite3/interfaces/persister/sqlite3persister/methods/listener/addstatuslistener/":{"n":"addStatusListener","s":"The addStatusListener method registers a listener function with the Persister that will be called whenever it starts or stops loading or saving."},"/api/persister-sqlite3/interfaces/persister/sqlite3persister/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Persister."},"/api/persister-sqlite3/interfaces/persister/sqlite3persister/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Persister object is no longer used."},"/api/persister-sqlite3/interfaces/persister/sqlite3persister/methods/lifecycle/getstatus/":{"n":"getStatus","s":"The getStatus method lets you find out if the Persister is currently in the process of loading or saving content."},"/api/persister-sqlite3/interfaces/persister/sqlite3persister/methods/lifecycle/schedule/":{"n":"schedule","s":"The schedule method allows you to queue up a series of asynchronous actions that must run in sequence during persistence."},"/api/persister-sqlite3/interfaces/persister/sqlite3persister/methods/lifecycle/startautopersisting/":{"n":"startAutoPersisting","s":"The startAutoPersist method is a convenience method that starts both automatic loading and saving of the Store data."},"/api/persister-sqlite3/interfaces/persister/sqlite3persister/methods/lifecycle/stopautopersisting/":{"n":"stopAutoPersisting","s":"The stopAutoPersist method is a convenience method that stops both automatic loading and saving of the Store data."},"/api/persister-sqlite3/interfaces/persister/sqlite3persister/methods/load/isautoloading/":{"n":"isAutoLoading","s":"The isAutoLoading method lets you find out if the Persister is currently automatically loading its content."},"/api/persister-sqlite3/interfaces/persister/sqlite3persister/methods/load/load/":{"n":"load","s":"The load method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once."},"/api/persister-sqlite3/interfaces/persister/sqlite3persister/methods/load/startautoload/":{"n":"startAutoLoad","s":"The startAutoLoad method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once, and then continuously."},"/api/persister-sqlite3/interfaces/persister/sqlite3persister/methods/load/stopautoload/":{"n":"stopAutoLoad","s":"The stopAutoLoad method stops the automatic loading of data from storage previously started with the startAutoLoad method."},"/api/persister-sqlite3/interfaces/persister/sqlite3persister/methods/save/isautosaving/":{"n":"isAutoSaving","s":"The isAutoSaving method lets you find out if the Persister is currently automatically saving its content."},"/api/persister-sqlite3/interfaces/persister/sqlite3persister/methods/save/save/":{"n":"save","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once."},"/api/persister-sqlite3/interfaces/persister/sqlite3persister/methods/save/startautosave/":{"n":"startAutoSave","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once, and then continuously."},"/api/persister-sqlite3/interfaces/persister/sqlite3persister/methods/save/stopautosave/":{"n":"stopAutoSave","s":"The stopAutoSave method stops the automatic save of data to storage previously started with the startAutoSave method."},"/api/persister-sqlite3/interfaces/persister/sqlite3persister/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the Persister, and is used for debugging purposes."},"/api/persister-sqlite3/interfaces/persister/sqlite3persister/":{"n":"Sqlite3Persister","s":"The Sqlite3Persister interface represents a Persister that lets you save and load Store data to and from a local SQLite database."},"/api/persister-sqlite3/functions/creation/createsqlite3persister/":{"n":"createSqlite3Persister","s":"The createSqlite3Persister function creates a Sqlite3Persister object that can persist the Store to a local SQLite database."},"/api/persister-sqlite3/":{"n":"persister-sqlite3","s":"The persister-sqlite3 module of the TinyBase project lets you save and load Store data to and from a local SQLite database (in an appropriate environment)."},"/api/persister-yjs/interfaces/persister/yjspersister/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store or MergeableStore that is backing this Persister object."},"/api/persister-yjs/interfaces/persister/yjspersister/methods/getter/getydoc/":{"n":"getYDoc","s":"The getYDoc method returns the Yjs document the Store is being persisted to."},"/api/persister-yjs/interfaces/persister/yjspersister/methods/listener/addstatuslistener/":{"n":"addStatusListener","s":"The addStatusListener method registers a listener function with the Persister that will be called whenever it starts or stops loading or saving."},"/api/persister-yjs/interfaces/persister/yjspersister/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Persister."},"/api/persister-yjs/interfaces/persister/yjspersister/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Persister object is no longer used."},"/api/persister-yjs/interfaces/persister/yjspersister/methods/lifecycle/getstatus/":{"n":"getStatus","s":"The getStatus method lets you find out if the Persister is currently in the process of loading or saving content."},"/api/persister-yjs/interfaces/persister/yjspersister/methods/lifecycle/schedule/":{"n":"schedule","s":"The schedule method allows you to queue up a series of asynchronous actions that must run in sequence during persistence."},"/api/persister-yjs/interfaces/persister/yjspersister/methods/lifecycle/startautopersisting/":{"n":"startAutoPersisting","s":"The startAutoPersist method is a convenience method that starts both automatic loading and saving of the Store data."},"/api/persister-yjs/interfaces/persister/yjspersister/methods/lifecycle/stopautopersisting/":{"n":"stopAutoPersisting","s":"The stopAutoPersist method is a convenience method that stops both automatic loading and saving of the Store data."},"/api/persister-yjs/interfaces/persister/yjspersister/methods/load/isautoloading/":{"n":"isAutoLoading","s":"The isAutoLoading method lets you find out if the Persister is currently automatically loading its content."},"/api/persister-yjs/interfaces/persister/yjspersister/methods/load/load/":{"n":"load","s":"The load method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once."},"/api/persister-yjs/interfaces/persister/yjspersister/methods/load/startautoload/":{"n":"startAutoLoad","s":"The startAutoLoad method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once, and then continuously."},"/api/persister-yjs/interfaces/persister/yjspersister/methods/load/stopautoload/":{"n":"stopAutoLoad","s":"The stopAutoLoad method stops the automatic loading of data from storage previously started with the startAutoLoad method."},"/api/persister-yjs/interfaces/persister/yjspersister/methods/save/isautosaving/":{"n":"isAutoSaving","s":"The isAutoSaving method lets you find out if the Persister is currently automatically saving its content."},"/api/persister-yjs/interfaces/persister/yjspersister/methods/save/save/":{"n":"save","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once."},"/api/persister-yjs/interfaces/persister/yjspersister/methods/save/startautosave/":{"n":"startAutoSave","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once, and then continuously."},"/api/persister-yjs/interfaces/persister/yjspersister/methods/save/stopautosave/":{"n":"stopAutoSave","s":"The stopAutoSave method stops the automatic save of data to storage previously started with the startAutoSave method."},"/api/persister-yjs/interfaces/persister/yjspersister/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the Persister, and is used for debugging purposes."},"/api/persister-yjs/interfaces/persister/yjspersister/":{"n":"YjsPersister","s":"The YjsPersister interface represents a Persister that lets you save and load Store data to and from a Yjs document."},"/api/persister-yjs/functions/creation/createyjspersister/":{"n":"createYjsPersister","s":"The createYjsPersister function creates a YjsPersister object that can persist the Store to a Yjs document."},"/api/persister-yjs/":{"n":"persister-yjs","s":"The persister-yjs module of the TinyBase project provides a way to save and load Store data to and from a Yjs document."},"/api/synchronizers/interfaces/synchronizer/synchronizer/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store or MergeableStore that is backing this Persister object."},"/api/synchronizers/interfaces/synchronizer/synchronizer/methods/listener/addstatuslistener/":{"n":"addStatusListener","s":"The addStatusListener method registers a listener function with the Persister that will be called whenever it starts or stops loading or saving."},"/api/synchronizers/interfaces/synchronizer/synchronizer/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Persister."},"/api/synchronizers/interfaces/synchronizer/synchronizer/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Persister object is no longer used."},"/api/synchronizers/interfaces/synchronizer/synchronizer/methods/lifecycle/getstatus/":{"n":"getStatus","s":"The getStatus method lets you find out if the Persister is currently in the process of loading or saving content."},"/api/synchronizers/interfaces/synchronizer/synchronizer/methods/lifecycle/schedule/":{"n":"schedule","s":"The schedule method allows you to queue up a series of asynchronous actions that must run in sequence during persistence."},"/api/synchronizers/interfaces/synchronizer/synchronizer/methods/lifecycle/startautopersisting/":{"n":"startAutoPersisting","s":"The startAutoPersist method is a convenience method that starts both automatic loading and saving of the Store data."},"/api/synchronizers/interfaces/synchronizer/synchronizer/methods/lifecycle/stopautopersisting/":{"n":"stopAutoPersisting","s":"The stopAutoPersist method is a convenience method that stops both automatic loading and saving of the Store data."},"/api/synchronizers/interfaces/synchronizer/synchronizer/methods/load/isautoloading/":{"n":"isAutoLoading","s":"The isAutoLoading method lets you find out if the Persister is currently automatically loading its content."},"/api/synchronizers/interfaces/synchronizer/synchronizer/methods/load/load/":{"n":"load","s":"The load method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once."},"/api/synchronizers/interfaces/synchronizer/synchronizer/methods/load/startautoload/":{"n":"startAutoLoad","s":"The startAutoLoad method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once, and then continuously."},"/api/synchronizers/interfaces/synchronizer/synchronizer/methods/load/stopautoload/":{"n":"stopAutoLoad","s":"The stopAutoLoad method stops the automatic loading of data from storage previously started with the startAutoLoad method."},"/api/synchronizers/interfaces/synchronizer/synchronizer/methods/save/isautosaving/":{"n":"isAutoSaving","s":"The isAutoSaving method lets you find out if the Persister is currently automatically saving its content."},"/api/synchronizers/interfaces/synchronizer/synchronizer/methods/save/save/":{"n":"save","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once."},"/api/synchronizers/interfaces/synchronizer/synchronizer/methods/save/startautosave/":{"n":"startAutoSave","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once, and then continuously."},"/api/synchronizers/interfaces/synchronizer/synchronizer/methods/save/stopautosave/":{"n":"stopAutoSave","s":"The stopAutoSave method stops the automatic save of data to storage previously started with the startAutoSave method."},"/api/synchronizers/interfaces/synchronizer/synchronizer/methods/synchronization/getsynchronizerstats/":{"n":"getSynchronizerStats","s":"The getSynchronizerStats method provides a set of statistics about the Synchronizer, and is used for debugging purposes."},"/api/synchronizers/interfaces/synchronizer/synchronizer/methods/synchronization/startsync/":{"n":"startSync","s":"The startSync method is used to start the process of synchronization between this instance and another matching Synchronizer."},"/api/synchronizers/interfaces/synchronizer/synchronizer/methods/synchronization/stopsync/":{"n":"stopSync","s":"The stopSync method is used to stop the process of synchronization between this instance and another matching Synchronizer."},"/api/synchronizers/interfaces/synchronizer/synchronizer/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the Persister, and is used for debugging purposes."},"/api/synchronizers/interfaces/synchronizer/synchronizer/":{"n":"Synchronizer","s":"A Synchronizer object lets you synchronize MergeableStore data with another TinyBase client or system."},"/api/synchronizers/enumerations/synchronization/message/":{"n":"Message","s":"The Message enum is used to indicate the type of the message being passed between Synchronizer instances."},"/api/synchronizers/functions/creation/createcustomsynchronizer/":{"n":"createCustomSynchronizer","s":"The createCustomSynchronizer function creates a Synchronizer object that can persist one MergeableStore to another."},"/api/synchronizers/type-aliases/synchronization/receive/":{"n":"Receive","s":"The Receive type describes a function that knows how to handle the arrival of a message as part of the synchronization protocol."},"/api/synchronizers/type-aliases/synchronization/send/":{"n":"Send","s":"The Send type describes a function that knows how to dispatch a message as part of the synchronization protocol."},"/api/synchronizers/type-aliases/development/synchronizerstats/":{"n":"SynchronizerStats","s":"The SynchronizerStats type describes the number of times a Synchronizer object has sent or received data."},"/api/synchronizers/":{"n":"synchronizers","s":"The synchronizers module of the TinyBase project lets you synchronize MergeableStore data to and from other MergeableStore instances."},"/api/synchronizer-broadcast-channel/interfaces/synchronizer/broadcastchannelsynchronizer/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store or MergeableStore that is backing this Persister object."},"/api/synchronizer-broadcast-channel/interfaces/synchronizer/broadcastchannelsynchronizer/methods/getter/getchannelname/":{"n":"getChannelName","s":"The getChannelName method returns the name of the channel being used for synchronization."},"/api/synchronizer-broadcast-channel/interfaces/synchronizer/broadcastchannelsynchronizer/methods/listener/addstatuslistener/":{"n":"addStatusListener","s":"The addStatusListener method registers a listener function with the Persister that will be called whenever it starts or stops loading or saving."},"/api/synchronizer-broadcast-channel/interfaces/synchronizer/broadcastchannelsynchronizer/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Persister."},"/api/synchronizer-broadcast-channel/interfaces/synchronizer/broadcastchannelsynchronizer/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Persister object is no longer used."},"/api/synchronizer-broadcast-channel/interfaces/synchronizer/broadcastchannelsynchronizer/methods/lifecycle/getstatus/":{"n":"getStatus","s":"The getStatus method lets you find out if the Persister is currently in the process of loading or saving content."},"/api/synchronizer-broadcast-channel/interfaces/synchronizer/broadcastchannelsynchronizer/methods/lifecycle/schedule/":{"n":"schedule","s":"The schedule method allows you to queue up a series of asynchronous actions that must run in sequence during persistence."},"/api/synchronizer-broadcast-channel/interfaces/synchronizer/broadcastchannelsynchronizer/methods/lifecycle/startautopersisting/":{"n":"startAutoPersisting","s":"The startAutoPersist method is a convenience method that starts both automatic loading and saving of the Store data."},"/api/synchronizer-broadcast-channel/interfaces/synchronizer/broadcastchannelsynchronizer/methods/lifecycle/stopautopersisting/":{"n":"stopAutoPersisting","s":"The stopAutoPersist method is a convenience method that stops both automatic loading and saving of the Store data."},"/api/synchronizer-broadcast-channel/interfaces/synchronizer/broadcastchannelsynchronizer/methods/load/isautoloading/":{"n":"isAutoLoading","s":"The isAutoLoading method lets you find out if the Persister is currently automatically loading its content."},"/api/synchronizer-broadcast-channel/interfaces/synchronizer/broadcastchannelsynchronizer/methods/load/load/":{"n":"load","s":"The load method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once."},"/api/synchronizer-broadcast-channel/interfaces/synchronizer/broadcastchannelsynchronizer/methods/load/startautoload/":{"n":"startAutoLoad","s":"The startAutoLoad method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once, and then continuously."},"/api/synchronizer-broadcast-channel/interfaces/synchronizer/broadcastchannelsynchronizer/methods/load/stopautoload/":{"n":"stopAutoLoad","s":"The stopAutoLoad method stops the automatic loading of data from storage previously started with the startAutoLoad method."},"/api/synchronizer-broadcast-channel/interfaces/synchronizer/broadcastchannelsynchronizer/methods/save/isautosaving/":{"n":"isAutoSaving","s":"The isAutoSaving method lets you find out if the Persister is currently automatically saving its content."},"/api/synchronizer-broadcast-channel/interfaces/synchronizer/broadcastchannelsynchronizer/methods/save/save/":{"n":"save","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once."},"/api/synchronizer-broadcast-channel/interfaces/synchronizer/broadcastchannelsynchronizer/methods/save/startautosave/":{"n":"startAutoSave","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once, and then continuously."},"/api/synchronizer-broadcast-channel/interfaces/synchronizer/broadcastchannelsynchronizer/methods/save/stopautosave/":{"n":"stopAutoSave","s":"The stopAutoSave method stops the automatic save of data to storage previously started with the startAutoSave method."},"/api/synchronizer-broadcast-channel/interfaces/synchronizer/broadcastchannelsynchronizer/methods/synchronization/getsynchronizerstats/":{"n":"getSynchronizerStats","s":"The getSynchronizerStats method provides a set of statistics about the Synchronizer, and is used for debugging purposes."},"/api/synchronizer-broadcast-channel/interfaces/synchronizer/broadcastchannelsynchronizer/methods/synchronization/startsync/":{"n":"startSync","s":"The startSync method is used to start the process of synchronization between this instance and another matching Synchronizer."},"/api/synchronizer-broadcast-channel/interfaces/synchronizer/broadcastchannelsynchronizer/methods/synchronization/stopsync/":{"n":"stopSync","s":"The stopSync method is used to stop the process of synchronization between this instance and another matching Synchronizer."},"/api/synchronizer-broadcast-channel/interfaces/synchronizer/broadcastchannelsynchronizer/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the Persister, and is used for debugging purposes."},"/api/synchronizer-broadcast-channel/interfaces/synchronizer/broadcastchannelsynchronizer/":{"n":"BroadcastChannelSynchronizer","s":"The BroadcastChannelSynchronizer interface represents a Synchronizer that lets you synchronize MergeableStore data to and from other MergeableStore instances via a browser's BroadcastChannel API."},"/api/synchronizer-broadcast-channel/functions/creation/createbroadcastchannelsynchronizer/":{"n":"createBroadcastChannelSynchronizer","s":"The createBroadcastChannelSynchronizer function creates a BroadcastChannelSynchronizer object that can synchronize MergeableStore data to and from other MergeableStore instances via a browser's BroadcastChannel API."},"/api/synchronizer-broadcast-channel/":{"n":"synchronizer-broadcast-channel","s":"The synchronizer-broadcast-channel module of the TinyBase project lets you synchronize MergeableStore data to and from other MergeableStore instances via a browser's BroadcastChannel API."},"/api/synchronizer-local/interfaces/synchronizer/localsynchronizer/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store or MergeableStore that is backing this Persister object."},"/api/synchronizer-local/interfaces/synchronizer/localsynchronizer/methods/listener/addstatuslistener/":{"n":"addStatusListener","s":"The addStatusListener method registers a listener function with the Persister that will be called whenever it starts or stops loading or saving."},"/api/synchronizer-local/interfaces/synchronizer/localsynchronizer/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Persister."},"/api/synchronizer-local/interfaces/synchronizer/localsynchronizer/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Persister object is no longer used."},"/api/synchronizer-local/interfaces/synchronizer/localsynchronizer/methods/lifecycle/getstatus/":{"n":"getStatus","s":"The getStatus method lets you find out if the Persister is currently in the process of loading or saving content."},"/api/synchronizer-local/interfaces/synchronizer/localsynchronizer/methods/lifecycle/schedule/":{"n":"schedule","s":"The schedule method allows you to queue up a series of asynchronous actions that must run in sequence during persistence."},"/api/synchronizer-local/interfaces/synchronizer/localsynchronizer/methods/lifecycle/startautopersisting/":{"n":"startAutoPersisting","s":"The startAutoPersist method is a convenience method that starts both automatic loading and saving of the Store data."},"/api/synchronizer-local/interfaces/synchronizer/localsynchronizer/methods/lifecycle/stopautopersisting/":{"n":"stopAutoPersisting","s":"The stopAutoPersist method is a convenience method that stops both automatic loading and saving of the Store data."},"/api/synchronizer-local/interfaces/synchronizer/localsynchronizer/methods/load/isautoloading/":{"n":"isAutoLoading","s":"The isAutoLoading method lets you find out if the Persister is currently automatically loading its content."},"/api/synchronizer-local/interfaces/synchronizer/localsynchronizer/methods/load/load/":{"n":"load","s":"The load method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once."},"/api/synchronizer-local/interfaces/synchronizer/localsynchronizer/methods/load/startautoload/":{"n":"startAutoLoad","s":"The startAutoLoad method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once, and then continuously."},"/api/synchronizer-local/interfaces/synchronizer/localsynchronizer/methods/load/stopautoload/":{"n":"stopAutoLoad","s":"The stopAutoLoad method stops the automatic loading of data from storage previously started with the startAutoLoad method."},"/api/synchronizer-local/interfaces/synchronizer/localsynchronizer/methods/save/isautosaving/":{"n":"isAutoSaving","s":"The isAutoSaving method lets you find out if the Persister is currently automatically saving its content."},"/api/synchronizer-local/interfaces/synchronizer/localsynchronizer/methods/save/save/":{"n":"save","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once."},"/api/synchronizer-local/interfaces/synchronizer/localsynchronizer/methods/save/startautosave/":{"n":"startAutoSave","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once, and then continuously."},"/api/synchronizer-local/interfaces/synchronizer/localsynchronizer/methods/save/stopautosave/":{"n":"stopAutoSave","s":"The stopAutoSave method stops the automatic save of data to storage previously started with the startAutoSave method."},"/api/synchronizer-local/interfaces/synchronizer/localsynchronizer/methods/synchronization/getsynchronizerstats/":{"n":"getSynchronizerStats","s":"The getSynchronizerStats method provides a set of statistics about the Synchronizer, and is used for debugging purposes."},"/api/synchronizer-local/interfaces/synchronizer/localsynchronizer/methods/synchronization/startsync/":{"n":"startSync","s":"The startSync method is used to start the process of synchronization between this instance and another matching Synchronizer."},"/api/synchronizer-local/interfaces/synchronizer/localsynchronizer/methods/synchronization/stopsync/":{"n":"stopSync","s":"The stopSync method is used to stop the process of synchronization between this instance and another matching Synchronizer."},"/api/synchronizer-local/interfaces/synchronizer/localsynchronizer/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the Persister, and is used for debugging purposes."},"/api/synchronizer-local/interfaces/synchronizer/localsynchronizer/":{"n":"LocalSynchronizer","s":"The LocalSynchronizer interface represents a Synchronizer that lets you synchronize MergeableStore data to and from other MergeableStore instances on the same local machine."},"/api/synchronizer-local/functions/creation/createlocalsynchronizer/":{"n":"createLocalSynchronizer","s":"The createLocalSynchronizer function creates a LocalSynchronizer object that can synchronize MergeableStore data to and from other MergeableStore instances on the same local machine."},"/api/synchronizer-local/":{"n":"synchronizer-local","s":"The synchronizer-local module of the TinyBase project lets you synchronize MergeableStore data to and from other MergeableStore instances on the same local machine."},"/api/synchronizer-ws-client/interfaces/synchronizer/wssynchronizer/methods/getter/getstore/":{"n":"getStore","s":"The getStore method returns a reference to the underlying Store or MergeableStore that is backing this Persister object."},"/api/synchronizer-ws-client/interfaces/synchronizer/wssynchronizer/methods/getter/getwebsocket/":{"n":"getWebSocket","s":"The getWebSocket method returns a reference to the WebSocket being used for synchronization."},"/api/synchronizer-ws-client/interfaces/synchronizer/wssynchronizer/methods/listener/addstatuslistener/":{"n":"addStatusListener","s":"The addStatusListener method registers a listener function with the Persister that will be called whenever it starts or stops loading or saving."},"/api/synchronizer-ws-client/interfaces/synchronizer/wssynchronizer/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the Persister."},"/api/synchronizer-ws-client/interfaces/synchronizer/wssynchronizer/methods/lifecycle/destroy/":{"n":"destroy","s":"The destroy method should be called when this Persister object is no longer used."},"/api/synchronizer-ws-client/interfaces/synchronizer/wssynchronizer/methods/lifecycle/getstatus/":{"n":"getStatus","s":"The getStatus method lets you find out if the Persister is currently in the process of loading or saving content."},"/api/synchronizer-ws-client/interfaces/synchronizer/wssynchronizer/methods/lifecycle/schedule/":{"n":"schedule","s":"The schedule method allows you to queue up a series of asynchronous actions that must run in sequence during persistence."},"/api/synchronizer-ws-client/interfaces/synchronizer/wssynchronizer/methods/lifecycle/startautopersisting/":{"n":"startAutoPersisting","s":"The startAutoPersist method is a convenience method that starts both automatic loading and saving of the Store data."},"/api/synchronizer-ws-client/interfaces/synchronizer/wssynchronizer/methods/lifecycle/stopautopersisting/":{"n":"stopAutoPersisting","s":"The stopAutoPersist method is a convenience method that stops both automatic loading and saving of the Store data."},"/api/synchronizer-ws-client/interfaces/synchronizer/wssynchronizer/methods/load/isautoloading/":{"n":"isAutoLoading","s":"The isAutoLoading method lets you find out if the Persister is currently automatically loading its content."},"/api/synchronizer-ws-client/interfaces/synchronizer/wssynchronizer/methods/load/load/":{"n":"load","s":"The load method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once."},"/api/synchronizer-ws-client/interfaces/synchronizer/wssynchronizer/methods/load/startautoload/":{"n":"startAutoLoad","s":"The startAutoLoad method gets persisted data from storage, and loads it into the Store with which the Persister is associated, once, and then continuously."},"/api/synchronizer-ws-client/interfaces/synchronizer/wssynchronizer/methods/load/stopautoload/":{"n":"stopAutoLoad","s":"The stopAutoLoad method stops the automatic loading of data from storage previously started with the startAutoLoad method."},"/api/synchronizer-ws-client/interfaces/synchronizer/wssynchronizer/methods/save/isautosaving/":{"n":"isAutoSaving","s":"The isAutoSaving method lets you find out if the Persister is currently automatically saving its content."},"/api/synchronizer-ws-client/interfaces/synchronizer/wssynchronizer/methods/save/save/":{"n":"save","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once."},"/api/synchronizer-ws-client/interfaces/synchronizer/wssynchronizer/methods/save/startautosave/":{"n":"startAutoSave","s":"The save method takes data from the Store with which the Persister is associated and persists it into storage, once, and then continuously."},"/api/synchronizer-ws-client/interfaces/synchronizer/wssynchronizer/methods/save/stopautosave/":{"n":"stopAutoSave","s":"The stopAutoSave method stops the automatic save of data to storage previously started with the startAutoSave method."},"/api/synchronizer-ws-client/interfaces/synchronizer/wssynchronizer/methods/synchronization/getsynchronizerstats/":{"n":"getSynchronizerStats","s":"The getSynchronizerStats method provides a set of statistics about the Synchronizer, and is used for debugging purposes."},"/api/synchronizer-ws-client/interfaces/synchronizer/wssynchronizer/methods/synchronization/startsync/":{"n":"startSync","s":"The startSync method is used to start the process of synchronization between this instance and another matching Synchronizer."},"/api/synchronizer-ws-client/interfaces/synchronizer/wssynchronizer/methods/synchronization/stopsync/":{"n":"stopSync","s":"The stopSync method is used to stop the process of synchronization between this instance and another matching Synchronizer."},"/api/synchronizer-ws-client/interfaces/synchronizer/wssynchronizer/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the Persister, and is used for debugging purposes."},"/api/synchronizer-ws-client/interfaces/synchronizer/wssynchronizer/":{"n":"WsSynchronizer","s":"The WsSynchronizer interface represents a Synchronizer that lets you synchronize MergeableStore data to and from other MergeableStore instances via WebSockets facilitated by a server."},"/api/synchronizer-ws-client/functions/creation/createwssynchronizer/":{"n":"createWsSynchronizer","s":"The createWsSynchronizer function creates a WsSynchronizer object that can synchronize MergeableStore data to and from other MergeableStore instances via WebSockets facilitated by a WsServer."},"/api/synchronizer-ws-client/type-aliases/creation/websockettypes/":{"n":"WebSocketTypes","s":"The WebSocketTypes type represents the valid types of WebSocket that can be used with the WsSynchronizer."},"/api/synchronizer-ws-client/":{"n":"synchronizer-ws-client","s":"The synchronizer-ws module of the TinyBase project lets you synchronize MergeableStore data to and from other MergeableStore instances via WebSockets facilitated by a server."},"/api/synchronizer-ws-server/interfaces/server/wsserver/methods/getter/destroy/":{"n":"destroy","s":"The destroy method provides a way to clean up the server at the end of its use."},"/api/synchronizer-ws-server/interfaces/server/wsserver/methods/getter/getclientids/":{"n":"getClientIds","s":"The getClientIds method method returns the active clients that the WsServer is handling for a given path."},"/api/synchronizer-ws-server/interfaces/server/wsserver/methods/getter/getpathids/":{"n":"getPathIds","s":"The getPathIds method returns the active paths that the WsServer is handling."},"/api/synchronizer-ws-server/interfaces/server/wsserver/methods/getter/getwebsocketserver/":{"n":"getWebSocketServer","s":"The getWebSocketServer method returns a reference to the WebSocketServer being used for this WsServer."},"/api/synchronizer-ws-server/interfaces/server/wsserver/methods/listener/addclientidslistener/":{"n":"addClientIdsListener","s":"The addClientIdsListener method registers a listener function with the WsServer that will be called whenever there is a change in the clients connected to a path that a WsServer is handling."},"/api/synchronizer-ws-server/interfaces/server/wsserver/methods/listener/addpathidslistener/":{"n":"addPathIdsListener","s":"The addPathIdsListener method registers a listener function with the WsServer that will be called whenever there is a change in the active paths that a WsServer is handling."},"/api/synchronizer-ws-server/interfaces/server/wsserver/methods/listener/dellistener/":{"n":"delListener","s":"The delListener method removes a listener that was previously added to the WsServer."},"/api/synchronizer-ws-server/interfaces/server/wsserver/methods/development/getstats/":{"n":"getStats","s":"The getStats method provides a set of statistics about the WsServer, and is used for debugging purposes."},"/api/synchronizer-ws-server/interfaces/server/wsserver/":{"n":"WsServer","s":"The WsServer interface represents an object that facilitates synchronization between clients that are using WsSynchronizer instances."},"/api/synchronizer-ws-server/functions/creation/createwsserver/":{"n":"createWsServer","s":"The createWsServer function creates a WsServer that facilitates synchronization between clients that are using WsSynchronizer instances."},"/api/synchronizer-ws-server/type-aliases/listener/clientidslistener/":{"n":"ClientIdsListener","s":"The ClientIdsListener type describes a function that is used to listen to clients joining and leaving the active paths that a WsServer is handling."},"/api/synchronizer-ws-server/type-aliases/listener/pathidslistener/":{"n":"PathIdsListener","s":"The PathIdsListener type describes a function that is used to listen to changes of active paths that a WsServer is handling."},"/api/synchronizer-ws-server/type-aliases/development/wsserverstats/":{"n":"WsServerStats","s":"The WsServerStats type describes the number of paths and clients that are active on the WsServer."},"/api/synchronizer-ws-server/":{"n":"synchronizer-ws-server","s":"The synchronizer-ws-server module of the TinyBase project lets you create a server that facilitates synchronization between clients."},"/api/synchronizer-ws-server-durable-object/classes/creation/wsserverdurableobject/constructors/creation/constructor/":{"n":"constructor","s":"The constructor is used to create the Durable Object that will synchronize the TinyBase clients."},"/api/synchronizer-ws-server-durable-object/classes/creation/wsserverdurableobject/methods/getter/getclientids/":{"n":"getClientIds","s":"The getClientIds method is used to access a list of all the connected clients on the path."},"/api/synchronizer-ws-server-durable-object/classes/creation/wsserverdurableobject/methods/getter/getpathid/":{"n":"getPathId","s":"The getPathId method is used to get the Id of the path that is being served."},"/api/synchronizer-ws-server-durable-object/classes/creation/wsserverdurableobject/methods/creation/createpersister/":{"n":"createPersister","s":"The createPersister method is used to return a persister for the Durable Object to preserve Store data when clients are not connected."},"/api/synchronizer-ws-server-durable-object/classes/creation/wsserverdurableobject/methods/event/onclientid/":{"n":"onClientId","s":"The onClientId method is called when a client connects to, or disconnects from, the server."},"/api/synchronizer-ws-server-durable-object/classes/creation/wsserverdurableobject/methods/event/onmessage/":{"n":"onMessage","s":"The onMessage method is called when a message is handled by the server."},"/api/synchronizer-ws-server-durable-object/classes/creation/wsserverdurableobject/methods/event/onpathid/":{"n":"onPathId","s":"The onPathId method is called when the first client connects to, or the last client disconnects from, the server with a given path Id."},"/api/synchronizer-ws-server-durable-object/classes/creation/wsserverdurableobject/":{"n":"WsServerDurableObject","s":"A WsServerDurableObject is the server component (running as a Cloudflare Durable Object) for synchronization between clients that are using WsSynchronizer instances."},"/api/synchronizer-ws-server-durable-object/functions/creation/getwsserverdurableobjectfetch/":{"n":"getWsServerDurableObjectFetch","s":"The getWsServerDurableObjectFetch function returns a convenient handler for a Cloudflare worker to route requests to the fetch handler of a WsServerDurableObject for the given namespace."},"/api/synchronizer-ws-server-durable-object/":{"n":"synchronizer-ws-server-durable-object","s":"The synchronizer-ws-server-durable-object module of the TinyBase project lets you create a server that facilitates synchronization between clients, running as a Cloudflare Durable Object."},"/api/synchronizer-ws-server-simple/interfaces/server/wsserversimple/methods/getter/destroy/":{"n":"destroy","s":"The destroy method provides a way to clean up the server at the end of its use."},"/api/synchronizer-ws-server-simple/interfaces/server/wsserversimple/methods/getter/getwebsocketserver/":{"n":"getWebSocketServer","s":"The getWebSocketServer method returns a reference to the WebSocketServer being used for this WsServerSimple."},"/api/synchronizer-ws-server-simple/interfaces/server/wsserversimple/":{"n":"WsServerSimple","s":"The WsServerSimple interface represents an object that facilitates synchronization between clients that are using WsSynchronizer instances."},"/api/synchronizer-ws-server-simple/functions/creation/createwsserversimple/":{"n":"createWsServerSimple","s":"The createWsServerSimple function creates a WsServerSimple that facilitates synchronization between clients that are using WsSynchronizer instances."},"/api/synchronizer-ws-server-simple/":{"n":"synchronizer-ws-server-simple","s":"The synchronizer-ws-server-simple module of the TinyBase project lets you create a server that facilitates synchronization between clients, without the complications of listeners, persistence, or statistics."},"/api/ui-react/functions/checkpoints-hooks/usecheckpoint/":{"n":"useCheckpoint","s":"The useCheckpoint hook returns the label for a checkpoint, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/checkpoints-hooks/usecheckpointids/":{"n":"useCheckpointIds","s":"The useCheckpointIds hook returns an array of the checkpoint Ids being managed by this Checkpoints object, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/checkpoints-hooks/usecheckpointidslistener/":{"n":"useCheckpointIdsListener","s":"The useCheckpointIdsListener hook registers a listener function with the Checkpoints object that will be called whenever its set of checkpoints changes."},"/api/ui-react/functions/checkpoints-hooks/usecheckpointlistener/":{"n":"useCheckpointListener","s":"The useCheckpointListener hook registers a listener function with the Checkpoints object that will be called whenever the label of a checkpoint changes."},"/api/ui-react/functions/checkpoints-hooks/usecheckpoints/":{"n":"useCheckpoints","s":"The useCheckpoints hook is used to get a reference to a Checkpoints object from within a Provider component context."},"/api/ui-react/functions/checkpoints-hooks/usecheckpointsids/":{"n":"useCheckpointsIds","s":"The useCheckpointsIds hook is used to retrieve the Ids of all the named Checkpoints objects present in the current Provider component context."},"/api/ui-react/functions/checkpoints-hooks/usecheckpointsorcheckpointsbyid/":{"n":"useCheckpointsOrCheckpointsById","s":"The useCheckpointsOrCheckpointsById hook is used to get a reference to a Checkpoints object from within a Provider component context, _or_ have it passed directly to this hook."},"/api/ui-react/functions/checkpoints-hooks/usecreatecheckpoints/":{"n":"useCreateCheckpoints","s":"The useCreateCheckpoints hook is used to create a Checkpoints object within a React application with convenient memoization."},"/api/ui-react/functions/checkpoints-hooks/usegobackwardcallback/":{"n":"useGoBackwardCallback","s":"The useGoBackwardCallback hook returns a callback that moves the state of the underlying Store back to the previous checkpoint, effectively performing an 'undo' on the Store data."},"/api/ui-react/functions/checkpoints-hooks/usegoforwardcallback/":{"n":"useGoForwardCallback","s":"The useGoForwardCallback hook returns a callback that moves the state of the underlying Store forwards to a future checkpoint, effectively performing an 'redo' on the Store data."},"/api/ui-react/functions/checkpoints-hooks/usegotocallback/":{"n":"useGoToCallback","s":"The useGoToCallback hook returns a parameterized callback that can be used to move the state of the underlying Store backwards or forwards to a specified checkpoint."},"/api/ui-react/functions/checkpoints-hooks/useprovidecheckpoints/":{"n":"useProvideCheckpoints","s":"The useProvideCheckpoints hook is used to add a Checkpoints object by Id to a Provider component, but imperatively from a component within it."},"/api/ui-react/functions/checkpoints-hooks/useredoinformation/":{"n":"useRedoInformation","s":"The useRedoInformation hook returns an UndoOrRedoInformation array that indicates if and how you can move the state of the underlying Store forwards to a future checkpoint."},"/api/ui-react/functions/checkpoints-hooks/usesetcheckpointcallback/":{"n":"useSetCheckpointCallback","s":"The useSetCheckpointCallback hook returns a parameterized callback that can be used to record a checkpoint of a Store into a Checkpoints object that can be reverted to in the future."},"/api/ui-react/functions/checkpoints-hooks/useundoinformation/":{"n":"useUndoInformation","s":"The useUndoInformation hook returns an UndoOrRedoInformation array that indicates if and how you can move the state of the underlying Store backward to the previous checkpoint."},"/api/ui-react/functions/indexes-hooks/useslicerowids/":{"n":"useSliceRowIds","s":"The useSliceRowIds hook gets the list of Row Ids in a given Slice, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/indexes-hooks/useslicerowidslistener/":{"n":"useSliceRowIdsListener","s":"The useSliceRowIdsListener hook registers a listener function with the Indexes object that will be called whenever the Row Ids in a Slice change."},"/api/ui-react/functions/indexes-hooks/usecreateindexes/":{"n":"useCreateIndexes","s":"The useCreateIndexes hook is used to create an Indexes object within a React application with convenient memoization."},"/api/ui-react/functions/indexes-hooks/useindexids/":{"n":"useIndexIds","s":"The useIndexIds hook gets an array of the Index Ids registered with an Indexes object, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/indexes-hooks/useindexes/":{"n":"useIndexes","s":"The useIndexes hook is used to get a reference to an Indexes object from within a Provider component context."},"/api/ui-react/functions/indexes-hooks/useindexesids/":{"n":"useIndexesIds","s":"The useIndexesIds hook is used to retrieve the Ids of all the named Indexes objects present in the current Provider component context."},"/api/ui-react/functions/indexes-hooks/useindexesorindexesbyid/":{"n":"useIndexesOrIndexesById","s":"The useIndexesOrIndexesById hook is used to get a reference to an Indexes object from within a Provider component context, _or_ have it passed directly to this hook."},"/api/ui-react/functions/indexes-hooks/useprovideindexes/":{"n":"useProvideIndexes","s":"The useProvideIndexes hook is used to add an Indexes object by Id to a Provider component, but imperatively from a component within it."},"/api/ui-react/functions/indexes-hooks/usesliceids/":{"n":"useSliceIds","s":"The useSliceIds hook gets the list of Slice Ids in an Index, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/indexes-hooks/usesliceidslistener/":{"n":"useSliceIdsListener","s":"The useSliceIdsListener hook registers a listener function with the Indexes object that will be called whenever the Slice Ids in an Index change."},"/api/ui-react/functions/metrics-hooks/usecreatemetrics/":{"n":"useCreateMetrics","s":"The useCreateMetrics hook is used to create a Metrics object within a React application with convenient memoization."},"/api/ui-react/functions/metrics-hooks/usemetric/":{"n":"useMetric","s":"The useMetric hook gets the current value of a Metric, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/metrics-hooks/usemetricids/":{"n":"useMetricIds","s":"The useMetricIds hook gets an array of the Metric Ids registered with a Metrics object, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/metrics-hooks/usemetriclistener/":{"n":"useMetricListener","s":"The useMetricListener hook registers a listener function with the Metrics object that will be called whenever the value of a specified Metric changes."},"/api/ui-react/functions/metrics-hooks/usemetrics/":{"n":"useMetrics","s":"The useMetrics hook is used to get a reference to a Metrics object from within a Provider component context."},"/api/ui-react/functions/metrics-hooks/usemetricsids/":{"n":"useMetricsIds","s":"The useMetricsIds hook is used to retrieve the Ids of all the named Metrics objects present in the current Provider component context."},"/api/ui-react/functions/metrics-hooks/usemetricsormetricsbyid/":{"n":"useMetricsOrMetricsById","s":"The useMetricsOrMetricsById hook is used to get a reference to a Metrics object from within a Provider component context, _or_ have it passed directly to this hook."},"/api/ui-react/functions/metrics-hooks/useprovidemetrics/":{"n":"useProvideMetrics","s":"The useProvideMetrics hook is used to add a Metrics object by Id to a Provider component, but imperatively from a component within it."},"/api/ui-react/functions/persister-hooks/usecreatepersister/":{"n":"useCreatePersister","s":"The useCreatePersister hook is used to create a Persister within a React application along with convenient memoization and callbacks."},"/api/ui-react/functions/persister-hooks/usepersister/":{"n":"usePersister","s":"The usePersister hook is used to get a reference to a Persister object from within a Provider component context."},"/api/ui-react/functions/persister-hooks/usepersisterids/":{"n":"usePersisterIds","s":"The usePersisterIds hook is used to retrieve the Ids of all the named Persister objects present in the current Provider component context."},"/api/ui-react/functions/persister-hooks/usepersisterorpersisterbyid/":{"n":"usePersisterOrPersisterById","s":"The usePersisterOrPersisterById hook is used to get a reference to a Persister object from within a Provider component context, _or_ have it passed directly to this hook."},"/api/ui-react/functions/persister-hooks/usepersisterstatus/":{"n":"usePersisterStatus","s":"The usePersisterStatus hook returns a the status of a Persister, and registers a listener so that any changes to it will cause a re-render."},"/api/ui-react/functions/persister-hooks/usepersisterstatuslistener/":{"n":"usePersisterStatusListener","s":"The usePersisterStatusListener hook registers a listener function with the Persister that will be called when its status changes."},"/api/ui-react/functions/persister-hooks/useprovidepersister/":{"n":"useProvidePersister","s":"The useProvidePersister hook is used to add a Persister object by Id to a Provider component, but imperatively from a component within it."},"/api/ui-react/functions/queries-hooks/useresulttable/":{"n":"useResultTable","s":"The useResultTable hook returns an object containing the entire data of the ResultTable of the given query, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/queries-hooks/useresulttablecellids/":{"n":"useResultTableCellIds","s":"The useResultTableCellIds hook returns the Ids of every Cell used across the whole ResultTable of the given query, and registers a listener so that any changes to those Ids will cause a re-render."},"/api/ui-react/functions/queries-hooks/useresulttablecellidslistener/":{"n":"useResultTableCellIdsListener","s":"The useResultTableCellIdsListener hook registers a listener function with a Queries object that will be called whenever the Cell Ids that appear anywhere in a ResultTable change."},"/api/ui-react/functions/queries-hooks/useresulttablelistener/":{"n":"useResultTableListener","s":"The useResultTableListener hook registers a listener function with a Queries object that will be called whenever data in a ResultTable changes."},"/api/ui-react/functions/queries-hooks/useresultrowids/":{"n":"useResultRowIds","s":"The useResultRowIds hook returns the Ids of every Row in the ResultTable of the given query, and registers a listener so that any changes to those Ids will cause a re-render."},"/api/ui-react/functions/queries-hooks/useresultrowidslistener/":{"n":"useResultRowIdsListener","s":"The useResultRowIdsListener hook registers a listener function with a Queries object that will be called whenever the Row Ids in a ResultTable change."},"/api/ui-react/functions/queries-hooks/useresultsortedrowids/":{"n":"useResultSortedRowIds","s":"The useResultSortedRowIds hook returns the sorted (and optionally, paginated) Ids of every Row in the ResultTable of the given query, and registers a listener so that any changes to those Ids will cause a re-render."},"/api/ui-react/functions/queries-hooks/useresultsortedrowidslistener/":{"n":"useResultSortedRowIdsListener","s":"The useResultSortedRowIdsListener hook registers a listener function with a Queries object that will be called whenever the sorted (and optionally, paginated) Row Ids in a ResultTable change."},"/api/ui-react/functions/queries-hooks/useresultrow/":{"n":"useResultRow","s":"The useResultRow hook returns an object containing the data of a single Row in the ResultTable of the given query, and registers a listener so that any changes to that Row will cause a re-render."},"/api/ui-react/functions/queries-hooks/useresultrowcount/":{"n":"useResultRowCount","s":"The useResultRowCount hook returns the count of the Row objects in the ResultTable of the given query, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/queries-hooks/useresultrowcountlistener/":{"n":"useResultRowCountListener","s":"The useResultRowCountListener hook registers a listener function with a Queries object that will be called whenever the count of ResultRow objects in a ResultTable changes."},"/api/ui-react/functions/queries-hooks/useresultrowlistener/":{"n":"useResultRowListener","s":"The useResultRowListener hook registers a listener function with a Queries object that will be called whenever data in a result Row changes."},"/api/ui-react/functions/queries-hooks/useresultcellids/":{"n":"useResultCellIds","s":"The useResultCellIds hook returns the Ids of every Cell in a given Row in the ResultTable of the given query, and registers a listener so that any changes to those Ids will cause a re-render."},"/api/ui-react/functions/queries-hooks/useresultcellidslistener/":{"n":"useResultCellIdsListener","s":"The useResultCellIdsListener hook registers a listener function with a Queries object that will be called whenever the Cell Ids in a result Row change."},"/api/ui-react/functions/queries-hooks/useresultcell/":{"n":"useResultCell","s":"The useResultCell hook returns the value of a single Cell in a given Row in the ResultTable of the given query, and registers a listener so that any changes to that value will cause a re-render."},"/api/ui-react/functions/queries-hooks/useresultcelllistener/":{"n":"useResultCellListener","s":"The useResultCellListener hook registers a listener function with a Queries object that will be called whenever data in a Cell changes."},"/api/ui-react/functions/queries-hooks/usecreatequeries/":{"n":"useCreateQueries","s":"The useCreateQueries hook is used to create a Queries object within a React application with convenient memoization."},"/api/ui-react/functions/queries-hooks/useprovidequeries/":{"n":"useProvideQueries","s":"The useProvideQueries hook is used to add a Queries object by Id to a Provider component, but imperatively from a component within it."},"/api/ui-react/functions/queries-hooks/usequeries/":{"n":"useQueries","s":"The useQueries hook is used to get a reference to a Queries object from within a Provider component context."},"/api/ui-react/functions/queries-hooks/usequeriesids/":{"n":"useQueriesIds","s":"The useQueriesIds hook is used to retrieve the Ids of all the named Queries objects present in the current Provider component context."},"/api/ui-react/functions/queries-hooks/usequeriesorqueriesbyid/":{"n":"useQueriesOrQueriesById","s":"The useQueriesOrQueriesById hook is used to get a reference to a Queries object from within a Provider component context, _or_ have it passed directly to this hook."},"/api/ui-react/functions/queries-hooks/usequeryids/":{"n":"useQueryIds","s":"The useQueryIds hook gets an array of the Query Ids registered with a Queries object, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/relationships-hooks/uselinkedrowids/":{"n":"useLinkedRowIds","s":"The useLinkedRowIds hook gets the linked Row Ids for a given Row in a linked list Relationship, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/relationships-hooks/uselinkedrowidslistener/":{"n":"useLinkedRowIdsListener","s":"The useLinkedRowIdsListener hook registers a listener function with the Relationships object that will be called whenever the linked Row Ids in a Relationship change."},"/api/ui-react/functions/relationships-hooks/uselocalrowids/":{"n":"useLocalRowIds","s":"The useLocalRowIds hook gets the local Row Ids for a given remote Row in a Relationship, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/relationships-hooks/uselocalrowidslistener/":{"n":"useLocalRowIdsListener","s":"The useLocalRowIdsListener hook registers a listener function with the Relationships object that will be called whenever the local Row Ids in a Relationship change."},"/api/ui-react/functions/relationships-hooks/useremoterowid/":{"n":"useRemoteRowId","s":"The useRemoteRowId hook gets the remote Row Id for a given local Row in a Relationship, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/relationships-hooks/useremoterowidlistener/":{"n":"useRemoteRowIdListener","s":"The useRemoteRowIdListener hook registers a listener function with the Relationships object that will be called whenever a remote Row Id in a Relationship changes."},"/api/ui-react/functions/relationships-hooks/usecreaterelationships/":{"n":"useCreateRelationships","s":"The useCreateRelationships hook is used to create a Relationships object within a React application with convenient memoization."},"/api/ui-react/functions/relationships-hooks/useproviderelationships/":{"n":"useProvideRelationships","s":"The useProvideRelationships hook is used to add a Relationships object by Id to a Provider component, but imperatively from a component within it."},"/api/ui-react/functions/relationships-hooks/userelationshipids/":{"n":"useRelationshipIds","s":"The useRelationshipIds hook gets an array of the Relationship Ids registered with a Relationships object, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/relationships-hooks/userelationships/":{"n":"useRelationships","s":"The useRelationships hook is used to get a reference to a Relationships object from within a Provider component context."},"/api/ui-react/functions/relationships-hooks/userelationshipsids/":{"n":"useRelationshipsIds","s":"The useRelationshipsIds hook is used to retrieve the Ids of all the named Relationships objects present in the current Provider component context."},"/api/ui-react/functions/relationships-hooks/userelationshipsorrelationshipsbyid/":{"n":"useRelationshipsOrRelationshipsById","s":"The useRelationshipsOrRelationshipsById hook is used to get a reference to a Relationships object from within a Provider component context, _or_ have it passed directly to this hook."},"/api/ui-react/functions/store-hooks/usecreatemergeablestore/":{"n":"useCreateMergeableStore","s":"The useCreateMergeableStore hook."},"/api/ui-react/functions/store-hooks/usecreatestore/":{"n":"useCreateStore","s":"The useCreateStore hook is used to create a Store within a React application with convenient memoization."},"/api/ui-react/functions/store-hooks/useprovidestore/":{"n":"useProvideStore","s":"The useProvideStore hook is used to add a Store object by Id to a Provider component, but imperatively from a component within it."},"/api/ui-react/functions/store-hooks/usestore/":{"n":"useStore","s":"The useStore hook is used to get a reference to a Store from within a Provider component context."},"/api/ui-react/functions/store-hooks/usestoreids/":{"n":"useStoreIds","s":"The useStoreIds hook is used to retrieve the Ids of all the named Store objects present in the current Provider component context."},"/api/ui-react/functions/store-hooks/usestoreorstorebyid/":{"n":"useStoreOrStoreById","s":"The useStoreOrStoreById hook is used to get a reference to a Store object from within a Provider component context, _or_ have it passed directly to this hook."},"/api/ui-react/functions/store-hooks/usestores/":{"n":"useStores","s":"The useStores hook is used to get a reference to all the Store objects named by Id within a Provider component context."},"/api/ui-react/functions/store-hooks/usedeltablescallback/":{"n":"useDelTablesCallback","s":"The useDelTablesCallback hook returns a callback that can be used to remove all of the tabular data in a Store."},"/api/ui-react/functions/store-hooks/usehastables/":{"n":"useHasTables","s":"The useHasTables hook returns a boolean indicating whether any Table objects exist in the Store, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-hooks/usehastableslistener/":{"n":"useHasTablesListener","s":"The useHasTablesListener hook registers a listener function with the Store that will be called when Tables as a whole are added to or removed from the Store."},"/api/ui-react/functions/store-hooks/usesettablescallback/":{"n":"useSetTablesCallback","s":"The useSetTablesCallback hook returns a parameterized callback that can be used to set the tabular data of a Store."},"/api/ui-react/functions/store-hooks/usetables/":{"n":"useTables","s":"The useTables hook returns a Tables object containing the tabular data of a Store, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-hooks/usetableslistener/":{"n":"useTablesListener","s":"The useTablesListener hook registers a listener function with a Store that will be called whenever tabular data in it changes."},"/api/ui-react/functions/store-hooks/usetableids/":{"n":"useTableIds","s":"The useTableIds hook returns the Ids of every Table in a Store, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-hooks/usetableidslistener/":{"n":"useTableIdsListener","s":"The useTableIdsListener hook registers a listener function with a Store that will be called whenever the Table Ids in it change."},"/api/ui-react/functions/store-hooks/usedeltablecallback/":{"n":"useDelTableCallback","s":"The useDelTableCallback hook returns a parameterized callback that can be used to remove a single Table from a Store."},"/api/ui-react/functions/store-hooks/usehastable/":{"n":"useHasTable","s":"The useHasTable hook returns a boolean indicating whether a given Table exists in the Store, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-hooks/usehastablecell/":{"n":"useHasTableCell","s":"The useHasTableCell hook returns a boolean indicating whether a given Cell exists anywhere in a Table, not just in a specific Row, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-hooks/usehastablecelllistener/":{"n":"useHasTableCellListener","s":"The useHasTableCellListener hook registers a listener function with the Store that will be called when a Cell is added to or removed from anywhere in a Table as a whole."},"/api/ui-react/functions/store-hooks/usehastablelistener/":{"n":"useHasTableListener","s":"The useHasTableListener hook registers a listener function with the Store that will be called when a Table is added to or removed from the Store."},"/api/ui-react/functions/store-hooks/usesettablecallback/":{"n":"useSetTableCallback","s":"The useSetTableCallback hook returns a parameterized callback that can be used to set the data of a single Table in a Store."},"/api/ui-react/functions/store-hooks/usetable/":{"n":"useTable","s":"The useTable hook returns an object containing the data of a single Table in a Store, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-hooks/usetablecellids/":{"n":"useTableCellIds","s":"The useTableCellIds hook returns the Ids of every Cell used across the whole Table, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-hooks/usetablecellidslistener/":{"n":"useTableCellIdsListener","s":"The useTableCellIdsListener hook registers a listener function with a Store that will be called whenever the Cell Ids that appear anywhere in a Table change."},"/api/ui-react/functions/store-hooks/usetablelistener/":{"n":"useTableListener","s":"The useTableListener hook registers a listener function with a Store that will be called whenever data in a Table changes."},"/api/ui-react/functions/store-hooks/userowids/":{"n":"useRowIds","s":"The useRowIds hook returns the Ids of every Row in a given Table, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-hooks/userowidslistener/":{"n":"useRowIdsListener","s":"The useRowIdsListener hook registers a listener function with a Store that will be called whenever the Row Ids in a Table change."},"/api/ui-react/functions/store-hooks/usesortedrowids/":{"n":"useSortedRowIds","s":"The useSortedRowIds hook returns the sorted (and optionally, paginated) Ids of every Row in a given Table, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-hooks/usesortedrowidslistener/":{"n":"useSortedRowIdsListener","s":"The useSortedRowIdsListener hook registers a listener function with a Store that will be called whenever sorted (and optionally, paginated) Row Ids in a Table change."},"/api/ui-react/functions/store-hooks/useaddrowcallback/":{"n":"useAddRowCallback","s":"The useAddRowCallback hook returns a parameterized callback that can be used to create a new Row in a Store."},"/api/ui-react/functions/store-hooks/usedelrowcallback/":{"n":"useDelRowCallback","s":"The useDelRowCallback hook returns a parameterized callback that can be used to remove a single Row from a Table."},"/api/ui-react/functions/store-hooks/usehasrow/":{"n":"useHasRow","s":"The useHasRow hook returns a boolean indicating whether a given Row exists in the Store, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-hooks/usehasrowlistener/":{"n":"useHasRowListener","s":"The useHasRowListener hook registers a listener function with the Store that will be called when a Row is added to or removed from the Store."},"/api/ui-react/functions/store-hooks/userow/":{"n":"useRow","s":"The useRow hook returns an object containing the data of a single Row in a given Table, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-hooks/userowcount/":{"n":"useRowCount","s":"The useRowCount hook returns the count of the Row objects in a given Table, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-hooks/userowcountlistener/":{"n":"useRowCountListener","s":"The useRowCountListener hook registers a listener function with a Store that will be called whenever the count of the Row objects in a Table changes."},"/api/ui-react/functions/store-hooks/userowlistener/":{"n":"useRowListener","s":"The useRowListener hook registers a listener function with a Store that will be called whenever data in a Row changes."},"/api/ui-react/functions/store-hooks/usesetpartialrowcallback/":{"n":"useSetPartialRowCallback","s":"The useSetPartialRowCallback hook returns a parameterized callback that can be used to set partial data of a single Row in the Store, leaving other Cell values unaffected."},"/api/ui-react/functions/store-hooks/usesetrowcallback/":{"n":"useSetRowCallback","s":"The useSetRowCallback hook returns a parameterized callback that can be used to set the data of a single Row in a Store."},"/api/ui-react/functions/store-hooks/usecellids/":{"n":"useCellIds","s":"The useCellIds hook returns the Ids of every Cell in a given Row, in a given Table, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-hooks/usecellidslistener/":{"n":"useCellIdsListener","s":"The useCellIdsListener hook registers a listener function with a Store that will be called whenever the Cell Ids in a Row change."},"/api/ui-react/functions/store-hooks/usecell/":{"n":"useCell","s":"The useCell hook returns an object containing the value of a single Cell in a given Row, in a given Table, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-hooks/usecelllistener/":{"n":"useCellListener","s":"The useCellListener hook registers a listener function with a Store that will be called whenever data in a Cell changes."},"/api/ui-react/functions/store-hooks/usedelcellcallback/":{"n":"useDelCellCallback","s":"The useDelCellCallback hook returns a parameterized callback that can be used to remove a single Cell from a Row."},"/api/ui-react/functions/store-hooks/usehascell/":{"n":"useHasCell","s":"The useHasCell hook returns a boolean indicating whether a given Cell exists in a given Row in a given Table, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-hooks/usehascelllistener/":{"n":"useHasCellListener","s":"The useHasCellListener hook registers a listener function with the Store that will be called when a Cell is added to or removed from the Store."},"/api/ui-react/functions/store-hooks/usesetcellcallback/":{"n":"useSetCellCallback","s":"The useSetCellCallback hook returns a parameterized callback that can be used to set the value of a single Cell in a Store."},"/api/ui-react/functions/store-hooks/usedelvaluescallback/":{"n":"useDelValuesCallback","s":"The useDelValuesCallback hook returns a callback that can be used to remove all of the keyed value data in a Store."},"/api/ui-react/functions/store-hooks/usehasvalues/":{"n":"useHasValues","s":"The useHasValues hook returns a boolean indicating whether any Values exist in the Store, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-hooks/usehasvalueslistener/":{"n":"useHasValuesListener","s":"The useHasValuesListener hook registers a listener function with the Store that will be called when Values as a whole are added to or removed from the Store."},"/api/ui-react/functions/store-hooks/usesetpartialvaluescallback/":{"n":"useSetPartialValuesCallback","s":"The useSetPartialValuesCallback hook returns a parameterized callback that can be used to set partial Values data in the Store, leaving other Values unaffected."},"/api/ui-react/functions/store-hooks/usesetvaluescallback/":{"n":"useSetValuesCallback","s":"The useSetValuesCallback hook returns a parameterized callback that can be used to set the keyed value data of a Store."},"/api/ui-react/functions/store-hooks/usevalues/":{"n":"useValues","s":"The useValues hook returns a Values object containing the keyed value data of a Store, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-hooks/usevalueslistener/":{"n":"useValuesListener","s":"The useValuesListener hook registers a listener function with a Store that will be called whenever keyed value data in it changes."},"/api/ui-react/functions/store-hooks/usedelvaluecallback/":{"n":"useDelValueCallback","s":"The useDelValueCallback hook returns a parameterized callback that can be used to remove a single Value from a Store."},"/api/ui-react/functions/store-hooks/usehasvalue/":{"n":"useHasValue","s":"The useHasValue hook returns a boolean indicating whether a given Value exists in the Store, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-hooks/usehasvaluelistener/":{"n":"useHasValueListener","s":"The useHasValueListener hook registers a listener function with the Store that will be called when a Value is added to or removed from the Store."},"/api/ui-react/functions/store-hooks/usesetvaluecallback/":{"n":"useSetValueCallback","s":"The useSetValueCallback hook returns a parameterized callback that can be used to set the data of a single Value in a Store."},"/api/ui-react/functions/store-hooks/usevalue/":{"n":"useValue","s":"The useValue hook returns an object containing the data of a single Value in a Store, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-hooks/usevalueids/":{"n":"useValueIds","s":"The useValueIds hook returns the Ids of every Value in a Store, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-hooks/usevalueidslistener/":{"n":"useValueIdsListener","s":"The useValueIdsListener hook registers a listener function with a Store that will be called whenever the Value Ids in it change."},"/api/ui-react/functions/store-hooks/usevaluelistener/":{"n":"useValueListener","s":"The useValueListener hook registers a listener function with a Store that will be called whenever data in a Value changes."},"/api/ui-react/functions/store-hooks/usedidfinishtransactionlistener/":{"n":"useDidFinishTransactionListener","s":"The useDidFinishTransactionListener hook registers a listener function with a Store that will be called just after other non-mutating listeners are called at the end of the transaction."},"/api/ui-react/functions/store-hooks/usestarttransactionlistener/":{"n":"useStartTransactionListener","s":"The useStartTransactionListener hook registers a listener function with the Store that will be called at the start of a transaction."},"/api/ui-react/functions/store-hooks/usewillfinishtransactionlistener/":{"n":"useWillFinishTransactionListener","s":"The useWillFinishTransactionListener hook registers a listener function with a Store that will be called just before other non-mutating listeners are called at the end of the transaction."},"/api/ui-react/functions/synchronizer-hooks/usecreatesynchronizer/":{"n":"useCreateSynchronizer","s":"The useCreateSynchronizer hook is used to create a Synchronizer within a React application along with convenient memoization and callbacks."},"/api/ui-react/functions/synchronizer-hooks/useprovidesynchronizer/":{"n":"useProvideSynchronizer","s":"The useProvideSynchronizer hook is used to add a Synchronizer object by Id to a Provider component, but imperatively from a component within it."},"/api/ui-react/functions/synchronizer-hooks/usesynchronizer/":{"n":"useSynchronizer","s":"The useSynchronizer hook is used to get a reference to a Synchronizer object from within a Provider component context."},"/api/ui-react/functions/synchronizer-hooks/usesynchronizerids/":{"n":"useSynchronizerIds","s":"The useSynchronizerIds hook is used to retrieve the Ids of all the named Synchronizer objects present in the current Provider component context."},"/api/ui-react/functions/synchronizer-hooks/usesynchronizerorsynchronizerbyid/":{"n":"useSynchronizerOrSynchronizerById","s":"The useSynchronizerOrSynchronizerById hook is used to get a reference to a Synchronizer object from within a Provider component context, _or_ have it passed directly to this hook."},"/api/ui-react/functions/synchronizer-hooks/usesynchronizerstatus/":{"n":"useSynchronizerStatus","s":"The useSynchronizerStatus hook returns a the status of a Synchronizer, and registers a listener so that any changes to it will cause a re-render."},"/api/ui-react/functions/synchronizer-hooks/usesynchronizerstatuslistener/":{"n":"useSynchronizerStatusListener","s":"The useSynchronizerStatusListener hook registers a listener function with the Synchronizer that will be called when its status changes."},"/api/ui-react/functions/checkpoints-components/backwardcheckpointsview/":{"n":"BackwardCheckpointsView","s":"The BackwardCheckpointsView component renders a list of previous checkpoints that the underlying Store can go back to."},"/api/ui-react/functions/checkpoints-components/checkpointview/":{"n":"CheckpointView","s":"The CheckpointView component simply renders the label of a checkpoint."},"/api/ui-react/functions/checkpoints-components/currentcheckpointview/":{"n":"CurrentCheckpointView","s":"The CurrentCheckpointView component renders the current checkpoint that the underlying Store is currently on."},"/api/ui-react/functions/checkpoints-components/forwardcheckpointsview/":{"n":"ForwardCheckpointsView","s":"The ForwardCheckpointsView component renders a list of future checkpoints that the underlying Store can go forwards to."},"/api/ui-react/functions/context-components/provider/":{"n":"Provider","s":"The Provider component is used to wrap part of an application in a context that provides default objects to be used by hooks and components within."},"/api/ui-react/functions/indexes-components/indexview/":{"n":"IndexView","s":"The IndexView component renders the contents of a Index, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/indexes-components/sliceview/":{"n":"SliceView","s":"The SliceView component renders the contents of a Slice, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/metrics-components/metricview/":{"n":"MetricView","s":"The MetricView component renders the current value of a Metric, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/queries-components/resultsortedtableview/":{"n":"ResultSortedTableView","s":"The ResultSortedTableView component renders the contents of a single query's sorted ResultTable in a Queries object, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/queries-components/resulttableview/":{"n":"ResultTableView","s":"The ResultTableView component renders the contents of a single query's ResultTable in a Queries object, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/queries-components/resultrowview/":{"n":"ResultRowView","s":"The ResultRowView component renders the contents of a single Row in a given query's ResultTable, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/queries-components/resultcellview/":{"n":"ResultCellView","s":"The ResultCellView component renders the value of a single Cell in a given Row, in a given query's ResultTable, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/relationships-components/linkedrowsview/":{"n":"LinkedRowsView","s":"The LinkedRowsView component renders the local Row objects for a given remote Row in a Relationship, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/relationships-components/localrowsview/":{"n":"LocalRowsView","s":"The LocalRowsView component renders the local Row objects for a given remote Row in a Relationship, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/relationships-components/remoterowview/":{"n":"RemoteRowView","s":"The RemoteRowView component renders the remote Row Id for a given local Row in a Relationship, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-components/tablesview/":{"n":"TablesView","s":"The TablesView component renders the tabular contents of a Store, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-components/tableview/":{"n":"TableView","s":"The TableView component renders the contents of a single Table in a Store, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-components/sortedtableview/":{"n":"SortedTableView","s":"The SortedTableView component renders the contents of a single sorted Table in a Store, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-components/rowview/":{"n":"RowView","s":"The RowView component renders the contents of a single Row in a given Table, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-components/cellview/":{"n":"CellView","s":"The CellView component renders the value of a single Cell in a given Row, in a given Table, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-components/valuesview/":{"n":"ValuesView","s":"The ValuesView component renders the keyed value contents of a Store, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/functions/store-components/valueview/":{"n":"ValueView","s":"The ValueView component renders the value of a single Value, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react/type-aliases/checkpoints/undoorredoinformation/":{"n":"UndoOrRedoInformation","s":"The UndoOrRedoInformation type is an array that you can fetch from a Checkpoints object to that indicates if and how you can move the state of the underlying Store forward or backward."},"/api/ui-react/type-aliases/component/componentreturntype/":{"n":"ComponentReturnType","s":"ComponentReturnType is a simple alias for what a React component can return: either a ReactElement, or `null` for an empty component."},"/api/ui-react/type-aliases/identity/storeorstoreid/":{"n":"StoreOrStoreId","s":"The StoreOrStoreId type is used when you need to refer to a Store in a React hook or component."},"/api/ui-react/type-aliases/identity/checkpointsorcheckpointsid/":{"n":"CheckpointsOrCheckpointsId","s":"The CheckpointsOrCheckpointsId type is used when you need to refer to a Checkpoints object in a React hook or component."},"/api/ui-react/type-aliases/identity/getid/":{"n":"GetId","s":"The GetId type describes a function which, when passed a parameter, will return an Id."},"/api/ui-react/type-aliases/identity/indexesorindexesid/":{"n":"IndexesOrIndexesId","s":"The IndexesOrIndexesId type is used when you need to refer to an Indexes object in a React hook or component."},"/api/ui-react/type-aliases/identity/metricsormetricsid/":{"n":"MetricsOrMetricsId","s":"The MetricsOrMetricsId type is used when you need to refer to a Metrics object in a React hook or component."},"/api/ui-react/type-aliases/identity/persisterorpersisterid/":{"n":"PersisterOrPersisterId","s":"The PersisterOrPersisterId type is used when you need to refer to a Persister object in a React hook or component."},"/api/ui-react/type-aliases/identity/queriesorqueriesid/":{"n":"QueriesOrQueriesId","s":"The QueriesOrQueriesId type is used when you need to refer to a Queries object in a React hook or component."},"/api/ui-react/type-aliases/identity/relationshipsorrelationshipsid/":{"n":"RelationshipsOrRelationshipsId","s":"The RelationshipsOrRelationshipsId type is used when you need to refer to a Relationships object in a React hook or component."},"/api/ui-react/type-aliases/identity/synchronizerorsynchronizerid/":{"n":"SynchronizerOrSynchronizerId","s":"The SynchronizerOrSynchronizerId type is used when you need to refer to a Synchronizer object in a React hook or component."},"/api/ui-react/type-aliases/props/tablesprops/":{"n":"TablesProps","s":"TablesProps props are used for components that refer to all the Tables in a Store, such as the TablesView component."},"/api/ui-react/type-aliases/props/tableprops/":{"n":"TableProps","s":"TableProps props are used for components that refer to a single Table in a Store, such as the TableView component."},"/api/ui-react/type-aliases/props/sortedtableprops/":{"n":"SortedTableProps","s":"SortedTableProps props are used for components that refer to a single sorted Table in a Store, such as the SortedTableView component."},"/api/ui-react/type-aliases/props/rowprops/":{"n":"RowProps","s":"RowProps props are used for components that refer to a single Row in a Table, such as the RowView component."},"/api/ui-react/type-aliases/props/cellprops/":{"n":"CellProps","s":"CellProps props are used for components that refer to a single Cell in a Row, such as the CellView component."},"/api/ui-react/type-aliases/props/metricprops/":{"n":"MetricProps","s":"MetricProps props are used for components that refer to a single Metric in a Metrics object, such as the MetricView component."},"/api/ui-react/type-aliases/props/indexprops/":{"n":"IndexProps","s":"IndexProps props are used for components that refer to a single Index in an Indexes object, such as the IndexView component."},"/api/ui-react/type-aliases/props/sliceprops/":{"n":"SliceProps","s":"SliceProps props are used for components that refer to a single Slice in an Index object, such as the SliceView component."},"/api/ui-react/type-aliases/props/localrowsprops/":{"n":"LocalRowsProps","s":"LocalRowsProps props are used for components that refer to a single Relationship in a Relationships object, and where you want to render local Rows based on a remote Row, such as the LocalRowsView component."},"/api/ui-react/type-aliases/props/remoterowprops/":{"n":"RemoteRowProps","s":"RemoteRowProps props are used for components that refer to a single Relationship in a Relationships object, and where you want to render a remote Row based on a local Row, such as in the RemoteRowView component."},"/api/ui-react/type-aliases/props/linkedrowsprops/":{"n":"LinkedRowsProps","s":"LinkedRowsProps props are used for components that refer to a single Relationship in a Relationships object, and where you want to render a linked list of Rows starting from a first Row, such as the LinkedRowsView component."},"/api/ui-react/type-aliases/props/resulttableprops/":{"n":"ResultTableProps","s":"ResultTableProps props are used for components that refer to a single query ResultTable, such as the ResultTableView component."},"/api/ui-react/type-aliases/props/resultsortedtableprops/":{"n":"ResultSortedTableProps","s":"ResultSortedTableProps props are used for components that refer to a single sorted query ResultTable, such as the ResultSortedTableView component."},"/api/ui-react/type-aliases/props/resultrowprops/":{"n":"ResultRowProps","s":"ResultRowProps props are used for components that refer to a single Row in a query ResultTable, such as the ResultRowView component."},"/api/ui-react/type-aliases/props/resultcellprops/":{"n":"ResultCellProps","s":"ResultRowProps props are used for components that refer to a single Cell in a Row of a ResultTable, such as the ResultCellView component."},"/api/ui-react/type-aliases/props/backwardcheckpointsprops/":{"n":"BackwardCheckpointsProps","s":"BackwardCheckpointsProps props are used for components that refer to a list of previous checkpoints in a Checkpoints object, such as the BackwardCheckpointsView component."},"/api/ui-react/type-aliases/props/currentcheckpointprops/":{"n":"CurrentCheckpointProps","s":"CurrentCheckpointsProps props are used for components that refer to the current checkpoints in a Checkpoints object, such as the BackwardCheckpointsView component."},"/api/ui-react/type-aliases/props/forwardcheckpointsprops/":{"n":"ForwardCheckpointsProps","s":"ForwardCheckpointsProps props are used for components that refer to a list of future checkpoints in a Checkpoints object, such as the ForwardCheckpointsView component."},"/api/ui-react/type-aliases/props/providerprops/":{"n":"ProviderProps","s":"ProviderProps props are used with the Provider component, so that Store Metrics, Indexes, Relationships, Queries, and Checkpoints objects can be passed into the context of an application and used throughout."},"/api/ui-react/type-aliases/props/extraprops/":{"n":"ExtraProps","s":"The ExtraProps type represents a set of arbitrary additional props."},"/api/ui-react/type-aliases/props/valuesprops/":{"n":"ValuesProps","s":"ValuesProps props are used for components that refer to all the Values in a Store, such as the ValuesView component."},"/api/ui-react/type-aliases/props/valueprops/":{"n":"ValueProps","s":"ValueProps props are used for components that refer to a single Value in a Row, such as the ValueView component."},"/api/ui-react/type-aliases/props/checkpointprops/":{"n":"CheckpointProps","s":"CheckpointProps props are used for components that refer to a single checkpoint in a Checkpoints object, such as the CheckpointView component."},"/api/ui-react/":{"n":"ui-react","s":"The ui-react module of the TinyBase project provides both hooks and components to make it easy to create reactive apps with Store objects."},"/api/ui-react-dom/functions/indexes-components/sliceinhtmltable/":{"n":"SliceInHtmlTable","s":"The SliceInHtmlTable component renders the contents of a Slice as an HTML element, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react-dom/functions/queries-components/resultsortedtableinhtmltable/":{"n":"ResultSortedTableInHtmlTable","s":"The SortedTableInHtmlTable component renders the contents of a single query's sorted ResultTable in a Queries object as an HTML element, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react-dom/functions/queries-components/resulttableinhtmltable/":{"n":"ResultTableInHtmlTable","s":"The ResultTableInHtmlTable component renders the contents of a single query's ResultTable in a Queries object as an HTML element, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react-dom/functions/relationships-components/relationshipinhtmltable/":{"n":"RelationshipInHtmlTable","s":"The RelationshipInHtmlTable component renders the contents of the two Tables linked by a Relationship as an HTML element, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react-dom/functions/store-components/tableinhtmltable/":{"n":"TableInHtmlTable","s":"The TableInHtmlTable component renders the contents of a single Table in a Store as an HTML element, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react-dom/functions/store-components/sortedtableinhtmltable/":{"n":"SortedTableInHtmlTable","s":"The SortedTableInHtmlTable component renders the contents of a single sorted Table in a Store, as an HTML element, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react-dom/functions/store-components/sortedtablepaginator/":{"n":"SortedTablePaginator","s":"The SortedTablePaginator component renders a paginator for a sorted table."},"/api/ui-react-dom/functions/store-components/valuesinhtmltable/":{"n":"ValuesInHtmlTable","s":"The ValuesInHtmlTable component renders the keyed value contents of a Store as an HTML element, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react-dom/functions/store-components/editablecellview/":{"n":"EditableCellView","s":"The EditableCellView component renders the value of a single Cell in a way that can be edited in a web browser, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react-dom/functions/store-components/editablevalueview/":{"n":"EditableValueView","s":"The EditableValueView component renders the value of a single Value in a way that can be edited in a web browser, and registers a listener so that any changes to that result will cause a re-render."},"/api/ui-react-dom/type-aliases/configuration/customcell/":{"n":"CustomCell","s":"The CustomCell object is used to configure custom cell rendering in an HTML table."},"/api/ui-react-dom/type-aliases/configuration/customresultcell/":{"n":"CustomResultCell","s":"The CustomResultCell object is used to configure custom cell rendering for query results in an HTML table."},"/api/ui-react-dom/type-aliases/props/tableinhtmltableprops/":{"n":"TableInHtmlTableProps","s":"TableInHtmlTableProps props are used for components that will render a Table in an HTML table, such as the TableInHtmlTable component."},"/api/ui-react-dom/type-aliases/props/htmltableprops/":{"n":"HtmlTableProps","s":"HtmlTableProps props are used for components that will render in an HTML table, such as the TableInHtmlTable component or SortedTableInHtmlTable component."},"/api/ui-react-dom/type-aliases/props/relationshipinhtmltableprops/":{"n":"RelationshipInHtmlTableProps","s":"RelationshipInHtmlTableProps props are used for components that will render the contents of the two Tables linked by a Relationship as an HTML table, such as the RelationshipInHtmlTable component."},"/api/ui-react-dom/type-aliases/props/resultsortedtableinhtmltableprops/":{"n":"ResultSortedTableInHtmlTableProps","s":"ResultSortedTableInHtmlTableProps props are used for components that will render a sorted Table in an HTML table, such as the SortedTableInHtmlTable component."},"/api/ui-react-dom/type-aliases/props/resulttableinhtmltableprops/":{"n":"ResultTableInHtmlTableProps","s":"ResultTableInHtmlTableProps props are used for components that will render a ResultTable in an HTML table, such as the ResultTableInHtmlTable component."},"/api/ui-react-dom/type-aliases/props/sliceinhtmltableprops/":{"n":"SliceInHtmlTableProps","s":"SliceInHtmlTableProps props are used for components that will render an Index Slice in an HTML table, such as the SliceInHtmlTable component."},"/api/ui-react-dom/type-aliases/props/sortedtableinhtmltableprops/":{"n":"SortedTableInHtmlTableProps","s":"SortedTableInHtmlTableProps props are used for components that will render a sorted Table in an HTML table, such as the SortedTableInHtmlTable component."},"/api/ui-react-dom/type-aliases/props/sortedtablepaginatorprops/":{"n":"SortedTablePaginatorProps","s":"SortedTablePaginatorProps props are used for components that will be used as a table paginator, such as the SortedTablePaginator component."},"/api/ui-react-dom/type-aliases/props/valuesinhtmltableprops/":{"n":"ValuesInHtmlTableProps","s":"ValuesInHtmlTableProps props are used for components that will render Values in an HTML table, such as the ValuesInHtmlTable component."},"/api/ui-react-dom/":{"n":"ui-react-dom","s":"The ui-react-dom module of the TinyBase project provides components to make it easy to create web-based reactive apps with Store objects."},"/api/ui-react-inspector/functions/development-components/inspector/":{"n":"Inspector","s":"The Inspector component renders a tool which allows you to view and edit the content of a Store in a debug web environment."},"/api/ui-react-inspector/type-aliases/props/inspectorprops/":{"n":"InspectorProps","s":"InspectorProps props are used to configure the Inspector component."},"/api/ui-react-inspector/":{"n":"ui-react-inspector","s":"The ui-react-inspector module of the TinyBase project provides a component to help debug the state of your TinyBase stores and other objects."}}},{}]